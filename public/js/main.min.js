function _(e){return document.getElementById(e)}var pathCountries=[],countryCodes=[];const dataSVG=[];var dataAPI=[],dataVacc=[];const countriesList=[];var globalRangeList=[],prop="casesPerMil",currentTitle="Cases/Million";const rangeLimit=6;var switchValue="cases",mode="dark",html=_("html"),header=_("header"),headerTitle=_("headerTitle"),loader=_("loader"),mobileNav=_("mobileNav"),hamburger=_("hamburger"),mapDiv=_("mapDiv"),worldMap=_("worldMap"),about=_("about"),globalInstructions=_("globalInstructions"),currentDataWrapper=_("currentDataWrapper"),globalHelpTip=_("globalHelpTip"),currentData=_("currentData"),toggleDark=_("toggleDark"),centerBtn=_("centerBtn"),keyBtn=_("keyBtn"),keys=_("keys"),legendHelpTip=_("legendHelpTip"),closeKeys=_("closeKeys"),keyTitle=_("keyTitle"),legendColors=_("legendColors"),toggle=_("toggleSideBar"),closeDash=_("closeDash"),sideBar=_("sideBar"),timeStamp=_("timeStamp"),switchWrapper=_("switchWrapper");const switchToggle=_("switchSVG");var is_touch_device,switchG=_("switchG"),switchCircle=_("switchCircle"),optionsDiv=_("optionsDiv"),dropDown=_("dropDown"),dropDownTitle=_("dropDownTitle"),casesMenu=_("casesMenu"),testsMenu=_("testsMenu"),deathsMenu=_("deathsMenu"),vaccMenu=_("vaccMenu"),statsWrapper=_("statsWrapper"),searchWrapper=_("searchWrapper"),searchIcon=_("searchIcon"),searchInput=_("searchInput"),closeSearch=_("closeSearch"),resultsWrapper=_("resultsWrapper"),countryPopup=_("countryPopup"),closePopup=_("closePopup"),popup=_("popup");let socket;var chartOn=!1;function onPageLoad(){statsWrapper.scrollTop=0,_("overlay").style.display="none",sideBar.style.visibility="visible",sideBar.className="",toggle.style.opacity=0,currentData.innerText=currentTitle,currentDataWrapper.style.visibility="visible",fadeOut(loader),is_touch_device="ontouchstart"in document.documentElement,is_touch_device?(touchEvents(),addZoomTapListeners(),removeHover()):addZoomTapListeners(),openLegend(),addPopupListeners(),showGlInstructions(),globalHelpTipHandler(),legendHelpTipHandler()}function showGlInstructions(){if(is_touch_device){globalInstructions.classList.remove("transform-y-220");const e=globalInstructions.querySelector("p");globalInstructions.style.display="block",e.innerText="Tap country for info, press and hold for full country profile."}}function onDOMLoaded(){socket=io(),socketListeners(socket),socket.emit("getCountryCodes"),parseSVG(),pathStrokeHandler(),fetch("https://api.apify.com/v2/key-value-stores/SmuuI0oebnTWjRTUh/records/LATEST?disableRedirect=true").then(e=>{if(e.ok)return e.json()}).then(e=>{e?(dataAPI=e.regionData,getData(dataAPI),socket.emit("getVaccineData"),timeStamp.innerText=`Updated at ${formatTime()} EST`,onPageLoad()):(socket.emit("getFetchFromServer"),onPageLoad())}),setInterval(()=>{fetchAPI()},3e5)}function socketListeners(e){e.on("getFetchFromServer",t=>{dataAPI=t.regionData,e.emit("getVaccineData"),timeStamp.innerText=`Updated at ${formatTime()} EST`}),e.on("getCountryCodes",e=>{countryCodes=e}),e.on("getCountryData",e=>{if(e){const t=_("chart");fadeOut(_("chartLoader")),t.style.minHeight="350px",t.style.height="70vh",dataHist=e,propArr=["new_cases_smoothed"],currentProp="new_cases_smoothed",propTitle=["Daily Cases"],chartArray=createChartArray(dataHist,currentProp),chartOn&&(removeChartListeners(),removeGlobalChartListeners()),makeChartDiv(),addGlobalChartListeners(),1<chartArray.length?(makeChart(),addChartListeners(),chartOn=!0):onNoChartData()}else{chartOn=!1;const e=_("chart");fadeOut(_("chartLoader")),e.innerHTML="<h2 class='chart-no-data yellow-test'>NO CHART DATA</h2>"}}),e.on("getLatestData",e=>{if(e.latest){const t=getLatestData(e),a=t.perc,n=t.percDeaths;a&&0!=a&&addPercNew(a),n&&0!=n&&addPercNew(n,!0)}}),e.on("getLatestWorldData",e=>{if(e.latest){const t=getLatestData(e,!0),a=t.perc,n=t.percDeaths;"cases"===switchValue?a&&0!=a&&addPercNewWorld(a):n&&0!=n&&addPercNewWorld(n,!0)}}),e.on("getVaccineData",e=>{e&&(dataVacc=e),getData(dataAPI)})}function parseSVG(){pathCountries=document.querySelectorAll("path");for(let e=0;e<pathCountries.length;e++)if(pathCountries[e].getAttribute("data-id")){let t=pathCountries[e].getAttribute("data-id").toLowerCase(),a=pathCountries[e].getAttribute("data-name");dataSVG.push({path:pathCountries[e],id:t,country:a})}}function fetchAPI(){fetch("https://api.apify.com/v2/key-value-stores/SmuuI0oebnTWjRTUh/records/LATEST?disableRedirect=true").then(e=>{if(e.ok)return e.json()}).then(e=>{e?(dataAPI=e.regionData,getData(dataAPI),timeStamp.innerText=`Updated at ${formatTime()} EST`):socket.emit("getFetchFromServer")})}function getData(e){countriesList.length=0,dataSVG.forEach(t=>{const a=e.findIndex(e=>e.country===t.country);if(-1!=a){e[a].alpha2=t.id;const n=dataVacc.findIndex(e=>e.country===t.id);e[a].totalVaccinations=-1==n?0:dataVacc[n].totalVaccinations,e[a].peopleVaccinated=-1==n?0:dataVacc[n].peopleVaccinated,e[a].peopleFullyVaccinated=-1==n?0:dataVacc[n].peopleFullyVaccinated,e[a].partiallyVaccinated=-1==n?0:Math.abs((dataVacc[n].peopleVaccinated||0)-(dataVacc[n].peopleFullyVaccinated||0)),e[a].vaccines=-1==n?"Not Reported":dataVacc[n].vaccines,countriesList.push(e[a])}}),calcData(countriesList),buttonsHandler(prop),worldData(dataAPI)}function calcData(e){const t=["totalDeaths","totalRecovered","activeCases"];var a=[];e.forEach(e=>{t.forEach((t,n)=>{a[n]=null==e[t]?null:roundVal(100*(e[t]/e.totalCases),1)});const n=100*(e.newCases/e.population),s=100*(e.newDeaths/e.population),r=100*(e.partiallyVaccinated/e.population),l=100*(e.peopleFullyVaccinated/e.population);e.newCasesPerMil=roundVal(1e4*n,2),e.newDeathsPerMil=roundVal(1e4*s,2),e.percDeaths=a[0],e.percRecovered=a[1],e.percActive=a[2],e.percCritical=null!=e.activeCases&&0!=e.activeCases?roundVal(100*(e.seriousCritical/e.activeCases),1):0,e.percVacc=roundVal(r,2),e.percFullyVacc=roundVal(l,2)})}function totalOfProp(e){let t=0;return countriesList.forEach(a=>{t+=a[e]}),t}function worldData(e){const t=e.find(e=>"World"===e.country),a=totalOfProp("population"),n=roundVal(1e4*(t.newCases/a),2),s=roundVal(1e4*(t.newDeaths/a),2),r=totalOfProp("totalTests"),l=totalOfProp("partiallyVaccinated"),o=totalOfProp("peopleFullyVaccinated"),d=totalOfProp("totalVaccinations");t.totalTests=r,t.totalPop=a,t.totalPartialVacc=l,t.totalPplFlVacc=o,t.totalVacc=d;const c=roundVal(100*(t.totalRecovered/t.totalCases),1),p=roundVal(100*(t.activeCases/t.totalCases),1),h=roundVal(100*(t.totalDeaths/t.totalCases),1),u=roundVal(100*(t.seriousCritical/t.activeCases),1),y=roundVal(100*(t.totalPartialVacc/t.totalPop),1),f=roundVal(100*(t.totalPplFlVacc/t.totalPop),1);let m=_("worldStats");"cases"===switchValue?(m.innerHTML=`
            <h2 class='global-cases-title'>Global Stats</h2>
            <p class='stats white'>${t.casesPerMil.commaSplit()}</p>
            <p class='stats-titles gray'>Cases/Million</p>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${n.commaSplit()}</p>
                    <p class='stats-titles gray'>New Cases/Million</p>
                </div>
                <div class='flex-stat' style='width:60px; height:70px;margin:0;' title='Percent Daily Change'></div>
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.totalRecovered.commaSplit()}</p>
                    <p class='stats-titles gray'>Total Recovered</p>
                </div>
                ${getPiePerc(c,"totalRecovered",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.activeCases.commaSplit()}</p>
                    <p class='stats-titles gray'>Active Cases</p>
                </div>
                ${getPiePerc(p,"activeCases",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.seriousCritical.commaSplit()}</p>
                    <p class='stats-titles gray'>Critical Cases</p>
                </div>
                ${getPiePerc(u,"seriousCritical",!0)}
            </div>
            <p class='stats white'>${t.totalCases.commaSplit()}</p>
            <p class='stats-titles gray'>Confirmed Cases</p>`,socket.emit("getLatestWorldData","OWID_WRL")):"tests"===switchValue?m.innerHTML=`
            <h2 class='global-tests-title'>Global Stats</h2>
            <p class='stats white'>${t.totalTests.commaSplit()}</p>
            <p class='stats-titles gray'>Total Tests</p>
            <p class='stats white'>${t.totalPop.commaSplit()}</p>
            <p class='stats-titles gray'>Population</p>`:"vaccines"===switchValue?m.innerHTML=`
            <h2 class='global-vacc-title'>Global Stats</h2>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.totalPartialVacc.commaSplit()}</p>
                    <p class='stats-titles gray'>People Partially Vaccinated</p>
                </div>
                ${getPiePerc(y,"percVacc",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.totalPplFlVacc.commaSplit()}</p>
                    <p class='stats-titles gray'>People Fully Vaccinated</p>
                </div>
                ${getPiePerc(f,"percFullyVacc",!0)}
            </div>
            <p class='stats white'>${t.totalVacc.commaSplit()}</p>
            <p class='stats-titles gray'>Total Vaccinations</p>`:(m.innerHTML=`
            <h2 class='global-deaths-title'>Global Stats</h2>
            <p class='stats white'>${t.deathsPerMil.commaSplit()}</p>
            <p class='stats-titles gray'>Deaths/Million</p>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${s.commaSplit()}</p>
                    <p class='stats-titles gray'>New Deaths/Million</p>
                </div>
                <div class='flex-stat' style='width:60px; height:70px;margin:0;' title='Percent Daily Change'></div>
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.totalDeaths.commaSplit()}</p>
                    <p class='stats-titles gray'>Total Deaths</p>
                </div>
                ${getPiePerc(h,"totalDeaths",!0)}
            </div>`,socket.emit("getLatestWorldData","OWID_WRL"))}function buttonsHandler(e){const t=toggleSwitchCases(switchValue).btns,a=document.querySelectorAll(t),n=toggleSwitchCases(switchValue).color;for(let t=0;t<a.length;t++)a[t].dataset.prop===e?(a[t].style.backgroundColor=n,a[t].style.color="#000"):(a[t].style.backgroundColor=bckColorLDM,a[t].style.color=colorLDM);currentData.innerText=dropDownTitle.innerText=currentTitle,keyTitle.innerText=rawTotalSwitch(e).title,getMinMax(countriesList,e)}function getMinMax(e,t){const a=mapData(e,t);var n="casesPerMil"==t?a[1]:Math.max.apply(null,a),s=1<Math.min.apply(null,a.filter(Boolean))?1:Math.min.apply(null,a.filter(Boolean));const r=s.countDecimals();s=1>s?1/Math.pow(10,r):s,globalRangeList="percRecovered"===t||"percActive"===t||"percCritical"===t||"percVacc"===t||"percFullyVacc"===t?getPercRangeList(n,s):globalRangeList=getRangeList(n,s),makeLegend(globalRangeList),matchData(countriesList,t,globalRangeList),showSortedList(countriesList)}function mapData(e,t){const a=e.map(e=>(e[t]=0>e[t]?0:e[t],e[t]));return a.sort((e,t)=>e<t?1:-1)}function getPercRangeList(e,t){const a=[],n=1>t?5:6;e=1<=Math.floor(e/n)?Math.floor(e/n):1;let s=t;for(let n=0;n<rangeLimit;n++)a.push(s),s=1>s?1:1===s&&2<=e?s+(e-1):s+e;return a}function getRangeList(e,t){const a=[];for(var n,s=0;s<rangeLimit;)n=0|Math.log(e)*Math.LOG10E+1,e=3>=n&&1===s?Math.floor(e):Math.floor(e/Math.pow(10,n-1))*Math.pow(10,n-1),1<=e?(5===s&&(e=t),a.push(e)):1>t&&(a.push(t),s=rangeLimit),e=5>=n&&0===s||"percDeaths"===prop?e/2:e==Math.ceil((e+1)/Math.pow(10,n+1))*Math.pow(10,n-1)?e/10:Math.ceil((e+1)/Math.pow(10,n+1))*Math.pow(10,n-1),s++;return a.reverse(),a}function changeLegendColors(e){const t=legendColors.querySelectorAll(".color"),a=toggleSwitchCases(e).colors.reverse();for(let n=0;n<t.length-1;n++)t[n].style.backgroundColor=a[n]}function makeLegend(e){const t=keys.querySelectorAll(".data-range"),a=legendColors.querySelectorAll(".color");for(let a=0;a<t.length;a++)t[a].classList.add("no-display");for(let t=0;t<a.length;t++)a[t].classList.add("no-display"),a[t].style.borderTopRightRadius="0px",a[t].style.borderTopLeftRadius="0px",a[t].style.borderBottomRightRadius="0px";for(let n=1;3>n;n++)t[t.length-n].classList.remove("no-display"),a[a.length-n].classList.remove("no-display");onLegendResize(e)}function onLegendResize(e){const t=keys.querySelectorAll(".data-range"),a=legendColors.querySelectorAll(".color");t[t.length-1].innerText=768>=window.innerWidth?"No Data":"No Reported Data",0===e.length&&(a[a.length-2].style.borderTopRightRadius="3px",768>=window.innerWidth?a[a.length-2].style.borderBottomRightRadius="3px":a[a.length-2].style.borderTopLeftRadius="3px");for(let n=0;n<e.length;n++){const s=t.length-(3+n),r=e[n].countDecimals(),l=1>=e[n]?0:"percRecovered"===prop||"percActive"===prop||"percCritical"===prop||"percDeaths"===prop||"percVacc"===prop||"percFullyVacc"===prop?.1:1,o=1>e[n]&&1===e[n+1]?1/Math.pow(10,r):0;t[s].classList.remove("no-display"),a[s].classList.remove("no-display"),n==e.length-1?(a[s].style.borderTopRightRadius="3px",t[s].firstElementChild.innerText=`> ${e[n].commaSplit()}`,768>=window.innerWidth?a[s].style.borderBottomRightRadius="3px":a[s].style.borderTopLeftRadius="3px"):t[s].firstElementChild.innerText=768>=window.innerWidth?`${e[n].commaSplit()}`:`${(e[n]+l).commaSplit()} – ${(e[n+1]-o).commaSplit()}`}const n=a[a.length-2].getBoundingClientRect().width,s=768>=window.innerWidth?-(n/2+.5)+"px":"0px";for(let a=0;a<t.length;a++)t[a].style.width=768>=window.innerWidth?`${n}px`:"auto",a!=t.length-1&&t[a].style.setProperty("--trans",s)}function matchData(e,t,a){for(let n=0;n<pathCountries.length;n++)if(pathCountries[n].getAttribute("data-name")){let s=pathCountries[n].getAttribute("data-name");const r=e.findIndex(e=>e.country===s);if(-1!=r){const s=e[r][t];pathCountries[n].style.fill=0<=s&&null!=s?"deaths"===switchValue?val2color(s,a,!0):val2color(s,a):"#9c9c9c"}else pathCountries[n].style.fill="#9c9c9c"}}function val2color(e,t){const a=toggleSwitchCases(switchValue).colors;let n="";for(let s=0;s<t.length-1;s++)0===e&&(n=a[0]),0==s?e>=t[s]&&e<=t[s+1]&&(n=a[s+1]):e>t[s]&&e<=t[s+1]?n=a[s+1]:e>t[t.length-1]&&(n=a[s+2]);return n}function sortList(e,t){t||(t=prop);var a=[];e.forEach(e=>{null!=e[t]&&(e[t]=0>e[t]?0:e[t],a.push(e))}),a.sort((e,a)=>e[t]<a[t]?1:-1);let n=0,s=0;return a.forEach((e,r)=>{0<r?a[r][t]===a[r-1][t]?s=s:s++:s++,"casesPerMil"!=t&&"testsPerMil"!=t&&"deathsPerMil"!=t&&"population"!=t&&"percDeaths"!=t?(n=100*(e[t]/e.population),.1<=n?(e.perc=roundVal(n,2),e.perMill=null):(e.perMill=roundVal(1e4*n,2),e.perc=null)):(e.perc=null,e.perMill=null),e.rank=s,r===a.length-1&&(e.rankMax=s)}),a}function showSortedList(e){const t=toggleSwitchCases(switchValue).color,a=_("worldList");let n="";sortList(e).forEach(e=>{let t=dataSVG.find(t=>t.country===e.country);n+=`
            <div class='stats-flex' data-country='${e.country}'>
                <p class='inline-count'>${e.rank}</p>
                <div class='bckg-img inline-flag' style='background-image:url(https://flagcdn.com/60x45/${t.id}.png);'></div>
                <p class='inline-p'>${e.country}</p>
                <p class='inline-stat'>${e[prop].commaSplit()}</p>
            </div> `});const s=rawTotalSwitch(prop).title;a.innerHTML=`
        <h2 id='rankTitle' class='global-cases-title' style='color:${t};'>Global Ranks</h2>
        <p class='ranks-title gray'>${s}</p>
        ${n}`}worldList.addEventListener("mouseup",function(t){if("stats-flex"===t.target.parentNode.className){let e=t.target.parentNode.dataset.country;clearPage(),clearHighlights();const a=dataSVG.find(t=>t.path.getAttribute("data-name")===e);zoomToCountryNoAnim(a.path)}});function addPopupListeners(e){countryAnim=!1;for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&(e&&(pathCountries[t].getAttribute("data-name")===e?pathCountries[t].classList.remove("light-path"):pathCountries[t].classList.remove("dark-path")),is_touch_device||pathCountries[t].addEventListener("mouseover",pathHover,!1));is_touch_device||document.addEventListener("mousemove",pathMove,!1)}function removePopupListeners(){countryAnim=!0;for(let e=0;e<pathCountries.length;e++)pathCountries[e].getAttribute("data-name")&&(is_touch_device||pathCountries[e].removeEventListener("mouseover",pathHover));is_touch_device||document.removeEventListener("mousemove",pathMove),popup.style.display="none"}function onPathClick(){if(!mouseMove){cancelAnimationFrame(fadeZoom);let e=this.getAttribute("data-name");countriesList.find(t=>t.country===e)&&goToCountry(this)}}function pathHover(){if(this.addEventListener("mouseup",onPathClick,!1),this.addEventListener("mouseout",pathNoHover,!1),0!=countriesList.length&&""!=prop){let e=this.getAttribute("data-name");getPopupInfo(e)}}function rawTotalSwitch(e){let t,a,n;return"casesPerMil"===e?(t="totalCases",a="Cases/Million",n=""):"newCasesPerMil"===e?(t="newCases",a="New Cases/Million",n=""):"percRecovered"===e?(t="totalRecovered",a="% Recovered",n=""):"percActive"===e?(t="activeCases",a="% Active",n=""):"percCritical"===e?(t="seriousCritical",a="% Critical",n=""):"deathsPerMil"===e?(t="totalDeaths",a="Deaths/Million",n=""):"newDeathsPerMil"===e?(t="newDeaths",a="New Deaths/Million",n="red"):"percDeaths"===e?(t="totalDeaths",a="Case Fatality Rate",n="red"):"testsPerMil"===e?(t="totalTests",a="Tests/Million",n="yellow-test"):"totalTests"===e?(t="totalTests",a="Total Tests",n=""):"population"===e?(t="population",a="population",n=""):"totalVaccinations"===e?(t="totalVaccinations",a="Total Vaccinations",n="green"):"percVacc"===e?(t="partiallyVaccinated",a="% Partially Vaccinated",n="green"):"percFullyVacc"===e?(t="peopleFullyVaccinated",a="% Fully Vaccinated",n="green"):void 0,{totalProp:t,title:a,colorClass:n}}function getPopupInfo(e){let t="",a="",n="";const s=dataSVG.find(t=>t.country===e),r="ic"===s.id?`images/ic.png`:`https://flagcdn.com/h40/${s.id}.png`,l=sortList(countriesList).find(t=>t.country===e);if(l){const e=l.rank,s=l[prop].commaSplit(),r=rawTotalSwitch(prop).totalProp,o=rawTotalSwitch(prop).title,d=l[r].commaSplit();t=`<p class='popup-big white'><strong>${s}</strong></p><p class='popup-small gray'>${o}</p><br>`,a=`<p class='popup-big white'><strong>${e}</strong></p><p class='popup-small gray'>Rank</p><br>`,n="testsPerMil"===prop||"totalTests"===prop||"population"===prop||"totalVaccinations"===prop?"":`<p class='popup-big white'><strong>${d}</strong></p><p class='popup-small gray'>Raw Total</p>`}else t="<p class='popup-small yellow'>No Reported Data</p><br>";popup.innerHTML=`
        <div class='flag bckg-img' style='background-image:url(${r});'></div>
        <p class='popup country white'>${e}</p><br>
        ${t}
        ${a}
        ${n}`}function pathMove(t){if(mouseMove)return void(popup.style.display="none");var a,n,s;if(t=t||window.e,is_touch_device?(t.pageX=t.center.x,t.pageY=t.center.y):null==t.pageX&&null!=t.clientX&&(a=t.target&&t.target.ownerDocument||document,n=a.documentElement,s=a.body,t.pageX=t.clientX+(n&&n.scrollLeft||s&&s.scrollLeft||0)-(n&&n.clientLeft||s&&s.clientLeft||0),t.pageY=t.clientY+(n&&n.scrollTop||s&&s.scrollTop||0)-(n&&n.clientTop||s&&s.clientTop||0)),t.target.parentNode===zoomEl||t.target===popup){popup.style.display="block";const e=t.pageX+popup.offsetWidth+10,a=t.pageY+popup.offsetHeight,n=e>window.innerWidth?`${Math.max(t.pageX-popup.offsetWidth-5,0)}px`:`${t.pageX+5}px`,s=a>window.innerHeight?`${Math.max(t.pageY-popup.offsetHeight-5,0)}px`:`${t.pageY+5}px`;popup.style.msTransform=`translate(${n}, ${s})`,popup.style.webkitTransform=`translate(${n}, ${s})`,popup.style.MozTransform=`translate(${n}, ${s})`,popup.style.OTransform=`translate(${n}, ${s})`,popup.style.transform=`translate(${n}, ${s})`}else popup.style.display="none"}function pathNoHover(){this.removeEventListener("mouseup",onPathClick),this.removeEventListener("mouseout",pathNoHover)}function resultsTransform(){resultsWrapper.style.width=`${getOffsets(searchWrapper).width}px`,resultsWrapper.style.msTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.webkitTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.MozTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.OTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.transform=`translateX(${getOffsets(searchWrapper).left}px)`}function showCountryPopup(e,t){countryPopup.scrollTo(0,0),countryPopup.classList.remove("transform"),closePopup.style.visibility="visible",closePopup.style.marginLeft="-5px",closePopup.setAttribute("data-country",e),setTimeout(()=>{resultsTransform()},300);const a=["Daily New Cases","Daily New Deaths","Case Fatality Rate","Recovered","Active","Critical","Tests","Partially Vaccinated","Fully Vaccinated","Vaccinations"],n=dataSVG.find(t=>t.country===e);let s,r=[];["casesPerMil","deathsPerMil","population"].forEach(t=>{const a=sortList(countriesList,t);s=a.find(t=>t.country===e),r.push(s.rank)});var l="";["newCasesPerMil","newDeathsPerMil","percDeaths","percRecovered","percActive","percCritical","testsPerMil","percVacc","percFullyVacc","totalVaccinations"].forEach((e,t)=>{const n=rawTotalSwitch(e).title,r=rawTotalSwitch(e).totalProp,o=rawTotalSwitch(e).colorClass,d="totalVaccinations"===e?"stats-column-flex-100":"",c=dropDownSwitch(e);l+=`
            <div class='stats-column-flex ${d}'>
                <div class="help-tip-stats help-tip"><p>${c}</p></div>
                <p class='prop-title ${o}'>${a[t]}</p>
                ${getRecord(s.country,e,n,r)}
            </div>`}),countryPopup.innerHTML=`
            <div id='countryWrapper'>
                <div class='country-container'>
                    <div class='flag-big bckg-img' style='background-image:url(https://flagcdn.com/h240/${n.id}.png);'></div>
                    <p class='country-big'>${s.country}</p>
                    <p class='stats'>${s.population.commaSplit()}</p>
                    <p class='stats-titles dark-gray'>Population</p>
                </div>
                <div class='stats-column'>
                    <p class='prop-title-main blue'>Cases</p>
                    <p class='stats blue'>${s.casesPerMil.commaSplit()}</p>
                    <p class='stats-titles white'>Cases/Million</p>
                    <p class='stats blue'>${r[0]}</p>
                    <p class='stats-titles white'>Rank</p>
                    <p class='stats dark-gray'>${s.totalCases.commaSplit()}</p>
                    <p class='stats-titles dark-gray'>Raw Total</p>
                </div>
                <div class='stats-column'>
                    <p class='prop-title-main red'>Deaths</p>
                    <p class='stats red'>${s.deathsPerMil.commaSplit()}</p>
                    <p class='stats-titles white'>Deaths/Million</p>
                    <p class='stats red'>${r[1]}</p>
                    <p class='stats-titles white'>Rank</p>
                    <p class='stats dark-gray'>${s.totalDeaths.commaSplit()}</p>
                    <p class='stats-titles dark-gray'>Raw Total</p>
                </div>
            </div>
            <div class='flex-stats-container'>
                ${l}
                <div id="chart"><svg id='chartLoader' xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.0" width="64px" height="64px" viewBox="0 0 128 128" xml:space="preserve"><g><path d="M122.5 69.25H96.47a33.1 33.1 0 0 0 0-10.5h26.05a5.25 5.25 0 0 1 0 10.5z" fill="#000000" fill-opacity="1"/><path d="M112.04 97.83L89.47 84.8a33.1 33.1 0 0 0 5.25-9.1l22.57 13.03a5.25 5.25 0 0 1-5.28 9.1z" fill="#b2b2b2" fill-opacity="0.3"/><path d="M88.68 117.35L75.65 94.78a33.1 33.1 0 0 0 9.1-5.25l13.02 22.57a5.25 5.25 0 1 1-9.1 5.25z" fill="#b2b2b2" fill-opacity="0.3"/><path d="M58.7 122.57V96.5a33.1 33.1 0 0 0 10.5 0v26.07a5.25 5.25 0 0 1-10.5 0z" fill="#b2b2b2" fill-opacity="0.3"/><path d="M30.1 112.1l13.04-22.57a33.1 33.1 0 0 0 9.1 5.25L39.2 117.35a5.25 5.25 0 1 1-9.1-5.25z" fill="#b2b2b2" fill-opacity="0.3"/><path d="M10.6 88.74L33.16 75.7a33.1 33.1 0 0 0 5.25 9.1L15.88 97.83a5.25 5.25 0 1 1-5.25-9.1z" fill="#b2b2b2" fill-opacity="0.3"/><path d="M5.37 58.75h26.06a33.1 33.1 0 0 0 0 10.5H5.37a5.25 5.25 0 0 1 0-10.5z" fill="#999999" fill-opacity="0.4"/><path d="M15.85 30.17L38.4 43.2a33.1 33.1 0 0 0-5.24 9.1L10.6 39.25a5.25 5.25 0 1 1 5.25-9.1z" fill="#7f7f7f" fill-opacity="0.5"/><path d="M39.2 10.65l13.03 22.57a33.1 33.1 0 0 0-9.1 5.25l-13-22.57a5.25 5.25 0 1 1 9.1-5.25z" fill="#666666" fill-opacity="0.6"/><path d="M69.2 5.43V31.5a33.1 33.1 0 0 0-10.5 0V5.42a5.25 5.25 0 1 1 10.5 0z" fill="#4c4c4c" fill-opacity="0.7"/><path d="M97.77 15.9L84.75 38.47a33.1 33.1 0 0 0-9.1-5.25l13.03-22.57a5.25 5.25 0 1 1 9.1 5.25z" fill="#333333" fill-opacity="0.8"/><path d="M117.3 39.26L94.7 52.3a33.1 33.1 0 0 0-5.25-9.1l22.57-13.03a5.25 5.25 0 0 1 5.25 9.1z" fill="#191919" fill-opacity="0.9"/><animateTransform attributeName="transform" type="rotate" values="0 64 64;30 64 64;60 64 64;90 64 64;120 64 64;150 64 64;180 64 64;210 64 64;240 64 64;270 64 64;300 64 64;330 64 64" calcMode="discrete" dur="1080ms" repeatCount="indefinite"></animateTransform></g></svg></div>
            </div>`;fadeIn(_("chartLoader")),socket.emit("getCountryData",t),socket.emit("getLatestData",{alpha2:t,country:e}),setTimeout(()=>{addHeader()},300),countryPopup.addEventListener("scroll",onCountryPopupScroll,!1)}function onCountryPopupScroll(){768>=window.innerWidth&&addHeader()}function getLatestData(e,t){let a,n;const s=t?dataAPI.find(e=>"World"===e.country):sortList(countriesList,"newCases").find(t=>t.country===e.country);let r=e.latest.data1.new_cases!=s.newCases&&0!=e.latest.data1.new_cases?"data1":!!(e.latest.data2&&e.latest.data2.new_cases!=s.newCases&&0!=e.latest.data2.new_cases)&&"data2";if(r){const t=0<e.latest[r].new_cases?e.latest[r].new_cases:1;a=100*((s.newCases-(e.latest[r].new_cases||0))/t),a=roundVal(a,2)}else a=!1;if(r=e.latest.data1.new_deaths!=s.newDeaths&&0!=e.latest.data1.new_deaths?"data1":!!(e.latest.data2&&e.latest.data2.new_deaths!=s.newDeaths&&0!=e.latest.data2.new_deaths)&&"data2",r){const t=0<e.latest[r].new_deaths?e.latest[r].new_deaths:1;n=100*((s.newDeaths-(e.latest[r].new_deaths||0))/t),n=roundVal(n,2)}else n=!1;return{perc:a,percDeaths:n}}function addPercNew(e,t){const a=t?2:1,n=countryPopup.querySelector(`.flex-stats-container .stats-column-flex:nth-child(${a})`),s=document.createElement("div");s.setAttribute("class","flex-stat"),s.setAttribute("style","opacity:0;");const r=1===Math.sign(e)?"dark"===mode?"#f6584C":"#B13507":"dark"===mode?"#6dff71":"#209222",l=-1===Math.sign(e)?"\u25BC":"\u25B2",o=1===Math.sign(e)?"+":"";s.innerHTML=`
        <p class='stats' style='color: ${r};font-size:1em;'>${l}</p>
        <p class='stats-titles' style='color: ${r};'>${o+e}%</p>`,n.appendChild(s),fadeIn(s,!0)}function addPercNewWorld(e){const t=worldStats.querySelectorAll(`.worldStats-flex`)[0],a=t.querySelector(".flex-stat");a.style.opacity=0;const n=1===Math.sign(e)?"#f6584C":"#6dff71",s=-1===Math.sign(e)?"\u25BC":"\u25B2",r=1===Math.sign(e)?"+":"";a.innerHTML=`
        <p class='stats' style='color: ${n}; font-size:1em;'>${s}</p>
        <p class='stats-titles' style='color: ${n};'>${r+e}%</p>`,fadeIn(a,!0)}function getPiePerc(e,t,a){const n=a?25:30,s=a?118:141,r=a?157:188,l=a?2:5,o=a?"width:60px; height:70px; margin-top:0;":"",d="totalRecovered"===t||"percRecovered"===t||"percVacc"===t||"percFullyVacc"===t?"dark"===mode||a?"#f6584C":"#B13507":"dark"===mode||a?"#6dff71":"#209222",c="#f6584C"===d||"#B13507"===d?"dark"===mode||a?"#6dff71":"#209222":"dark"===mode||a?"#f6584C":"#B13507",p="percCritical"===t||"seriousCritical"===t?"% of Active":"percVacc"===t||"percFullyVacc"===t?"% of Pop":"% of Cases",h=a?"none":"block";let u=`
    <div class="pie-wrapper" style='${o}' title='${a?p:""}'>
        <svg class="circle">
            <circle r="${n}" cx="50%" cy="50%" stroke="${d}" fill="none" stroke-width="${l}" stroke-linecap="round" stroke-dasharray="${s}, ${r}" stroke-opacity="0.2"></circle>
            <circle r="${n}" cx="50%" cy="50%" stroke="${c}" fill="none" stroke-width="${l}" stroke-linecap="round" stroke-dasharray="${e/100*s}, 188"></circle>
        </svg>
        <div class="circle-info circle-perc" style="color:${c};">${e}</div>
        <div class="circle-info" style="color:${c}; display:${h};">${p}</div>
    </div>`;return u}function getRecord(e,t,a,n){const s=sortList(countriesList,t),r=s.find(t=>t.country===e);let l="",o="",d="",c="";if(r){o=`
            <p class='stats'>${r.rank}</p>
            <p class='stats-titles dark-gray'>Rank</p>`,d="totalVaccinations"==t?`
            <div class='flex-stat'>
                <p class='stats text-center font-vw'>${r.vaccines}</p>
                <p class='stats-titles dark-gray text-center'>Vaccines</p>
            </div> `:`
            <div class='flex-stat'>
                <p class='stats'>${r[n].commaSplit()}</p>
                <p class='stats-titles dark-gray text-center'>Raw Total</p>
            </div> `;let s;return"percDeaths"===t?s=countriesList.find(t=>t.country===e).percDeaths:"percRecovered"===t?s=countriesList.find(t=>t.country===e).percRecovered:"percActive"===t?s=countriesList.find(t=>t.country===e).percActive:"percCritical"===t?s=countriesList.find(t=>t.country===e).percCritical:"percVacc"===t?s=countriesList.find(t=>t.country===e).percVacc:"percFullyVacc"===t?s=countriesList.find(t=>t.country===e).percFullyVacc:void 0,c=0<=s&&null!=s?getPiePerc(s,t):`<div class='flex-stat'>
                <p class='stats'>${r[t].commaSplit()}</p>
                <p class='stats-titles dark-gray'>${a}</p>
            </div>`,l=`
            ${c} 
            <div class='flex-stat'>
                ${o}
            </div>
            ${d}       
        `,l}return l=`<p class='stats yellow-test text-center'>No Reported Data</p>`,l}function onClosePopup(){onCloseSearch(),clearPopup(),setPrevMapState(),showPage(),addPopupListeners(this.dataset.country),addZoomTapListeners(),chartOn&&(removeChartListeners(),removeGlobalChartListeners(),chartOn=!1)}function addZoomTapListeners(){is_touch_device||(svgEl.addEventListener("mousedown",onMouseDown,!1),svgEl.addEventListener("dblclick",tapZoomHandler,!1),svgEl.addEventListener("onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll",zoomHandler,!1)),is_touch_device&&(taptime.on("tap",onDocTap),hammertime.on("pinch",onPinchZoom),hammertime.on("tap",onTapZoom),presstime.on("tap",onTapPopup),hammertime.on("press",onPress),hammertime.on("pan",onPan),hammertime.on("panend",onPanEnd),currentData.addEventListener("touchend",addRemoveHeader,!1)),addLegendListeners(),centerBtn.addEventListener("click",centerMap,!1)}function removeZoomTapListeners(){is_touch_device||(svgEl.removeEventListener("mousedown",onMouseDown),svgEl.removeEventListener("dblclick",tapZoomHandler),svgEl.removeEventListener("onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll",zoomHandler)),is_touch_device&&(taptime.off("tap",onDocTap),hammertime.off("pinch",onPinchZoom),hammertime.off("tap",onTapZoom),presstime.off("tap",onTapPopup),hammertime.off("press",onPress),hammertime.off("pan",onPan),hammertime.off("panend",onPanEnd),currentData.removeEventListener("touchend",addRemoveHeader)),removeLegendListeners(),centerBtn.removeEventListener("click",centerMap)}function addLegendListeners(){const e=legendColors.querySelectorAll(".color"),t=keys.querySelectorAll(".data-range");for(let t=0;t<e.length;t++)is_touch_device?e[t].addEventListener("touchend",onColorTouch,!1):e[t].addEventListener("mouseover",onColorOver,!1);for(let e=0;e<t.length;e++)is_touch_device?t[e].addEventListener("touchend",onColorTouch,!1):t[e].addEventListener("mouseover",onColorOver,!1)}function removeLegendListeners(){const e=keys.querySelectorAll(".data-range"),t=legendColors.querySelectorAll(".color");for(let e=0;e<t.length;e++)is_touch_device?t[e].removeEventListener("touchend",onColorTouch):t[e].removeEventListener("mouseover",onColorOver);for(let t=0;t<e.length;t++)is_touch_device?e[t].removeEventListener("touchend",onColorTouch):e[t].removeEventListener("mouseover",onColorOver)}function clearLegendHover(){const e=legendColors.querySelectorAll(".color"),t=keys.querySelectorAll(".data-range");for(let t=0;t<e.length;t++)e[t].classList.remove("on-color-hover");for(let e=0;e<t.length;e++)t[e].style.opacity=1;clearHighlights()}function onColorTouch(t){clearLegendHover();const e="color"===t.target.className?this:getLegendTarget(this).elem,a=keys.querySelectorAll(".data-range");for(let e=0;e<a.length;e++)a[e].style.opacity=e===getLegendTarget(this).index?1:.3;e.classList.add("on-color-hover"),highlightRangeCountries(e.style.backgroundColor)}function onColorOver(t){this.addEventListener("mouseout",onColorOut,!1);const e="color"===t.target.className?this:getLegendTarget(this).elem,a=keys.querySelectorAll(".data-range");for(let e=0;e<a.length;e++)a[e].style.opacity=e===getLegendTarget(this).index?1:.3;e.classList.add("on-color-hover"),highlightRangeCountries(e.style.backgroundColor)}function getLegendTarget(t){const e=t.parentNode,a=Array.prototype.indexOf.call(e.children,t);return{elem:legendColors.querySelectorAll(".color")[a],index:a}}function highlightRangeCountries(e){for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&pathCountries[t].style.fill!=e&&pathCountries[t].classList.add("dark-path")}function onColorOut(t){const e="color"===t.target.className?this:getLegendTarget(this).elem,a=keys.querySelectorAll(".data-range");for(let e=0;e<a.length;e++)a[e].style.opacity=1;e.classList.remove("on-color-hover"),clearHighlights(),this.removeEventListener("mouseout",onColorOut)}function addChartListeners(){const e=_("svgChart"),t=e.querySelector(".plot-lines"),a=e.querySelectorAll(".chart-label");for(let e=0;e<a.length;e++)a[e].addEventListener("mouseover",onChartLabelHover,!1);t.addEventListener("mouseover",onChartHover,!1),document.addEventListener("mousemove",onChartMove,!1),window.addEventListener("resize",onChartResize,!1)}function removeChartListeners(){const e=_("svgChart"),t=e.querySelector(".plot-lines"),a=e.querySelectorAll(".chart-label");for(let e=0;e<a.length;e++)a[e].removeEventListener("mouseover",onChartLabelHover);t.removeEventListener("mouseover",onChartHover),document.removeEventListener("mousemove",onChartMove),window.removeEventListener("resize",onChartResize)}function addGlobalChartListeners(){const e=_("chart"),t=e.querySelectorAll(".chart-btns");for(let e=0;e<t.length;e++)t[e].addEventListener("mouseup",onChartOptClick,!1);const a=_("testsCheckBox");a.addEventListener("change",onChartCheckBox,!1);const n=_("chartDropDown");n.addEventListener("mouseup",onChartDropDown,!1)}function removeGlobalChartListeners(){const e=_("chart"),t=e.querySelectorAll(".chart-btns");for(let e=0;e<t.length;e++)t[e].removeEventListener("mouseup",onChartOptClick);const a=_("testsCheckBox");a.removeEventListener("change",onChartCheckBox);const n=_("chartDropDown");n.removeEventListener("mouseup",onChartDropDown)}function getOffsets(t){const e={width:t.offsetWidth,left:t.offsetLeft};return e}function getSearchResults(e){let t=[];const a=countryCodes.filter(t=>t.name.toLowerCase().includes(e)||t.country.toLowerCase().includes(e)||t.alpha2.toLowerCase().includes(e)||t.alpha3.toLowerCase().includes(e));return a.forEach(e=>{const a=countriesList.find(t=>t.country.toLowerCase()===e.country.toLowerCase());a&&t.push(a)}),t}function handleKeysOnSearch(t){switch(t.key){case"ArrowDown":onArrowsEnterSearch();break;case"ArrowUp":onArrowsEnterSearch(!0);break;case"Enter":onArrowsEnterSearch(!1,!0);}}function removeResultFocus(){const e=resultsWrapper.querySelectorAll(".results-flex");for(let t=0;t<e.length;t++)e[t].classList.remove("results-flex-focus")}function onArrowsEnterSearch(e,t){const a=resultsWrapper.querySelectorAll(".results-flex");let n=0;for(let s=0;s<a.length;s++)1<a[s].classList.length&&(a[s].classList.remove("results-flex-focus"),t?(onResultClick(a[s]),n=s):n=e?0===s?0:s-1:s===a.length-1?a.length-1:s+1);const s=a[n].offsetTop;resultsWrapper.scrollTop=s,a[n].classList.add("results-flex-focus")}function onResultClick(t){t=t.pageX?this:t,removeResultFocus(),t.classList.add("results-flex-focus");let a=t.dataset.country;clearPage(),clearHighlights();const n=dataSVG.find(e=>e.path.getAttribute("data-name")===a);zoomToCountryNoAnim(n.path,!0)}searchInput.addEventListener("keyup",function(t){if(t.preventDefault(),"ArrowDown"==t.key||"ArrowUp"==t.key||"Enter"==t.key||"ArrowLeft"==t.key||"ArrowRight"==t.key){const e=resultsWrapper.querySelectorAll(".results-flex");0<e.length&&handleKeysOnSearch(t)}else if(resultsWrapper.innerHTML="",0!=countriesList.length){let e=this.value.toLowerCase().trim();if(e=e.replace(/[^a-zA-Z ]/g,""),""!=e){const t=getSearchResults(e);if(closeSearch.style.visibility="visible",closeSearch.addEventListener("mouseup",onCloseSearch,!1),0!=t.length){resultsWrapper.style.visibility="visible";let e="";t.forEach(t=>{let a=dataSVG.find(e=>e.country===t.country);e+=`
                            <div class='results-flex' data-country='${t.country}'>
                                <div class='bckg-img inline-flag' style='background-image:url(https://flagcdn.com/h40/${a.id}.png);'></div>
                                <p class='inline-p'>${t.country}</p>
                            </div>`}),resultsTransform(),resultsWrapper.innerHTML=e;const a=resultsWrapper.querySelectorAll(".results-flex");for(let e=0;e<a.length;e++)a[e].addEventListener("mouseup",onResultClick,!1)}else resultsWrapper.style.visibility="hidden",resultsWrapper.innerHTML=""}else onCloseSearch()}});function onCloseSearch(){resultsWrapper.style.visibility="hidden",resultsWrapper.innerHTML="",searchInput.value="",closeSearch.style.visibility="hidden",closeSearch.removeEventListener("mouseup",onCloseSearch)}var hammertime,presstime,prevScale=0,prevP=worldMap.createSVGPoint(),touchTrail=worldMap.createSVGPoint();touchTrail.x=touchTrail.y=prevP.x=prevP.y=0;function getTouchPoint(t){const e=svgEl.createSVGPoint();return e.x=t.center.x,e.y=t.center.y,e}function onPinchZoom(t){popup.style.display="none";const e=getTouchPoint(t),a=0===prevScale?t.scale-prevScale:t.scale-prevScale+1;prevScale=t.scale;const n=setMatrix(e,a);setCTM(zoomEl.getScreenCTM().multiply(n));const s=zoomEl.transform.baseVal.getItem(0).matrix;.1>s.a-initialScale?(768>=window.innerWidth&&addHeader(),globalInstructions.classList.remove("transform-y-220"),globalHelpTip.style.top=1<globalInstructions.classList.length?"50px":"70px"):(768>=window.innerWidth&&removeHeader(),globalInstructions.classList.add("transform-y-220"))}function onTapZoom(t){2!==t.tapCount||countryAnim||(768>=window.innerWidth&&removeHeader(),globalInstructions.classList.add("transform-y-220"),tapP=getTouchPoint(t),maxScale=2*zoomEl.transform.baseVal.getItem(0).matrix.a,maxScale=maxScale>maxZoom?maxZoom:maxScale,fadeZoom(),popup.style.display="none")}function onTapPopup(t){if(1===t.tapCount){let e=t.target.getAttribute("data-name");getPopupInfo(e),pathMove(t)}}function onPan(t){const e=zoomEl.transform.baseVal.getItem(0).matrix;let a=svgEl.createSVGPoint();a.x=(t.deltaX-prevP.x)/e.a,a.y=(t.deltaY-prevP.y)/e.d,prevP.x=t.deltaX,prevP.y=t.deltaY,touchTrail.x=a.x,touchTrail.y=a.y;const n=setPanMatrix(a);setCTM(zoomEl.getScreenCTM().multiply(n))}function onPanEnd(t){return 1<t.maxPointers?void(touchTrail.x=touchTrail.y=prevP.x=prevP.y=0):void fadeTouchPan()}function fadeTouchPan(){const e=.06;if(touchTrail.x*=1-e,touchTrail.y*=1-e,0!=Math.floor(Math.abs(touchTrail.x))||0!=Math.floor(Math.abs(touchTrail.y))){const e=setPanMatrix(touchTrail);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadeTouchPan)}else cancelAnimationFrame,touchTrail.x=touchTrail.y=prevP.x=prevP.y=0}function onPress(t){let e=t.target.getAttribute("data-name");countriesList.find(t=>t.country===e)&&(popup.style.display="none",clearLegendHover(),cancelAnimationFrame(fadeTouchPan),zoomToCountry(t.target))}function onDocTap(t){1<=t.tapCount&&clearLegendHover()}function touchEvents(){taptime=new Hammer(document),hammertime=new Hammer(svgEl),hammertime.get("pinch").set({enable:!0}),hammertime.on("pinchend",function(){prevScale=0}),hammertime.on("panstart",function(){popup.style.display="none",touchTrail.x=touchTrail.y=prevP.x=prevP.y=0,cancelAnimationFrame(fadeTouchPan)}),presstime=new Hammer(zoomEl),popuptime=new Hammer(popup),popuptime.on("tap",function(){popup.style.display="none"}),768>=window.innerWidth&&closeSideBar()}function addRemoveHeader(){768>=window.innerWidth&&(1===header.classList.length?removeHeader():addHeader())}function addHeader(){[header,currentData,globalHelpTip,toggle,toggleDark,keyBtn,centerBtn].forEach(t=>{t.classList.remove("transform-y-50")})}function removeHeader(){[header,currentData,globalHelpTip,toggle,toggleDark,keyBtn,centerBtn].forEach(t=>{t.classList.add("transform-y-50")}),globalInstructions.classList.add("transform-y-220"),globalHelpTip.style.top="50px",0===mobileNav.classList.length&&(mobileNav.classList.add("transform-y-220"),hamburger.classList.toggle("change")),768>=window.innerWidth&&onCloseSearch()}function removeHover(){closeKeys.classList.add("no-hover"),closeDash.classList.add("white")}function clearHighlights(){for(let e=0;e<pathCountries.length;e++)pathCountries[e].getAttribute("data-name")&&(pathCountries[e].classList.remove("light-path"),pathCountries[e].classList.remove("dark-path"))}function closeSideBar(){sideBar.className="transform",toggle.style.opacity=1}function toggleSideBar(){0===sideBar.classList.length?(sideBar.className="transform",toggle.style.opacity=1):(sideBar.className="",toggle.style.opacity=0,popup.style.display="none")}toggle.addEventListener("mouseup",toggleSideBar,!1),closeDash.addEventListener("mouseup",closeSideBar,!1);function onToggleSVGResize(){let e=_("testsTitle"),t=_("deathsTitle"),a=_("vaccTitle");const n=switchWrapper.offsetWidth,s=768>=window.innerWidth?(n-64)/2:118;switchG.setAttributeNS(null,"transform",`matrix(1, 0, 0, 1, ${s}, 42)`);const r=n/2;e.setAttribute("x",r),t.setAttribute("x",n-12),a.setAttribute("x",r)}function toggleSwitchCases(e){let t,a,n,s,r,l,o,d,c;return"cases"===e?(t=10,a=32,n="#54cbf2",s=casesMenu,r="casesPerMil",l="Cases/Million",o="240px",d=".cases-btns",c=["#d6f5ff","#96dcf4","#54cbf2","#04abe3","#038ebc","#035e79","#013544"]):"tests"===e?(t=32,a=10,n="#f4bc68",s=testsMenu,r="testsPerMil",l="Tests/Million",o="160px",d=".tests-btns",c=["#fbebd1","#f9d7a4","#f4bc68","#f9ad3b","#ff9700","#c57603","#844f01"]):"deaths"===e?(t=54,a=32,n="#f6584c",s=deathsMenu,r="deathsPerMil",l="Deaths/Million",o="160px",d=".deaths-btns",c=["#ffe9e7","#fcd2cd","#ffada6","#fd8177","#f6584c","#bd4137","#9e251b"]):"vaccines"===e?(t=32,a=54,n="#4cf6af",s=vaccMenu,r="percVacc",l="Partially Vaccinated",o="160px",d=".vacc-btns",c=["#e2fdf1","#bafbdf","#89f9ca","#4cf6af","#33a976","#1f6949","#0e2f20"]):void 0,{cx:t,cy:a,color:n,menu:s,property:r,title:l,height:o,btns:d,colors:c}}switchToggle.addEventListener("mouseup",function(t){if("switch-titles"===t.target.className.baseVal||"switch-target-circles"===t.target.className.baseVal){const e=t.target.getAttribute("data-cat");if(switchValue!=e){switchValue=e;const t=toggleSwitchCases(e).color;switchG.setAttribute("fill",t);const a=toggleSwitchCases(e).cx,n=toggleSwitchCases(e).cy,s=parseInt(switchCircle.getAttribute("cx")),r=parseInt(switchCircle.getAttribute("cy"));switchCircle.setAttribute("cx",32),switchCircle.setAttribute("cy",32),s===a||r===n?(switchCircle.setAttribute("cx",a),switchCircle.setAttribute("cy",n)):setTimeout(()=>{switchCircle.setAttribute("cx",a),switchCircle.setAttribute("cy",n)},200);const l=switchToggle.querySelectorAll(".switch-titles");for(let t=0;t<l.length;t++)l[t].style.opacity=l[t].getAttribute("data-cat")===e?1:.4;const o=toggleSwitchCases(e).menu;handleOptionsMenu(o),currentData.style.backgroundColor=t,prop=toggleSwitchCases(e).property,currentTitle=toggleSwitchCases(e).title,changeLegendColors(e),buttonsHandler(prop),worldData(dataAPI),statsWrapper.scrollTop=0,removeLegendListeners(),addLegendListeners();const d=toggleSwitchCases(e).height;40<optionsDiv.offsetHeight&&(optionsDiv.style.height=d),globalHelpTipHandler()}}});function handleOptionsMenu(t){const e=[casesMenu,testsMenu,deathsMenu,vaccMenu];for(let a=0;a<e.length;a++)e[a].style.display=e[a]===t?"block":"none"}function openDropDown(){const e=toggleSwitchCases(switchValue).height,t=_("dropDownArrow");optionsDiv.style.overflowY="scroll",optionsDiv.style.height=e,t.classList.add("transform-rotate"),sideBar.style.height="100%"}function closeDropDown(){const e=_("dropDownArrow");optionsDiv.scrollTo(0,0),optionsDiv.style.height="40px",optionsDiv.style.overflowY="hidden",e.classList.remove("transform-rotate")}dropDown.addEventListener("click",()=>{statsWrapper.style.overflowY="hidden",statsWrapper.removeEventListener("scroll",onStatsScroll),"40px"===optionsDiv.style.height||""===optionsDiv.style.height?openDropDown():closeDropDown(),setTimeout(()=>{statsWrapper.style.overflowY="scroll",statsWrapper.addEventListener("scroll",onStatsScroll,!1)},400),sideBar.className=""});function dropDownSwitch(e){let t="";return"casesPerMil"===e?t="This is the reported total cumulative count of detected, laboratory, and sometimes (depending on the country reporting them and the criteria adopted at the time) also clinical cases. Depending on the country reporting standards, this number can also include presumptive, suspect, or probable cases of detected infection.":"newCasesPerMil"===e?t="Every country reports their daily new cases at different times in the day. The daily data by all reporting countries resets every day after midnight GMT.":"percRecovered"===e?t="This is the percent of cases that have recovered from the disease. This statistic is highly imperfect, because reporting can be missing, incomplete, incorrect, based on different definitions, or dated (or a combination of all of these) for many governments, both at the local and national level, sometimes with differences between states within the same country or counties within the same state. ":"percActive"===e?t="This figure represents the current number of people detected and confirmed to be infected with the virus. This figure can increase or decrease, and represents an important metric for public health and emergency response authorities when assessing hospitalization needs versus capacity.":"percCritical"===e?t=`This is the percent of current active cases that are in critical condition. This statistic is imperfect, for many reasons. When 99% of the cases were in China, the figure pretty much corresponded to the Chinese NHC's reported number of "severe" cases. Today, it represents for the most part the number of patients currently being treated in Intensive Care Unit (ICU), if and when this figure is reported.`:"testsPerMil"===e||"totalTests"===e?t=`This statistic is imperfect, because some countries report tests performed, while others report the individuals tested.`:"deathsPerMil"===e?t="This is the reported total cumulative count of deaths caused by COVID-19. Due to limited testing, challenges in the attribution of the cause of death, and varying methods of reporting in some countries, this is an imperfect statistic. ":"newDeathsPerMil"===e?t="Every country reports their daily new deaths at different times in the day. The daily data by all reporting countries resets every day after midnight GMT.":"percDeaths"===e?t=`The Case Fatality rate (CFR) represents the proportion of cases who eventually die from the disease. This statistic for each country is imperfect, since it is based on both the total number of reported cases and deaths, both of which depend on the respective countries' reporting criteria. Globally, the WHO has estimated the coronavirus' CFR at <strong>2%</strong>. For comparison, the CFR for SARS was <strong>10%</strong>, and for MERS <strong>34%</strong>.`:"percVacc"===e?t="This is the percent of population that received at least one vaccine dose, but has <strong>NOT</strong> received all doses presribed by the vaccination protocol.":"percFullyVacc"===e?t="This is the percent of population that received all doses prescribed by the vaccination protocol.":"totalVaccinations"===e?t="This figure represents the total number of doses administered, it does <strong>NOT</strong> represent the total number of people vaccinated.":void 0,t}function globalHelpTipHandler(){const e=dropDownSwitch(prop);if(""!=e){globalHelpTip.style.display="block";const t=globalHelpTip.querySelector("p");t.innerHTML=e}else globalHelpTip.style.display="none";is_touch_device&&768>=window.innerWidth&&(globalHelpTip.style.top=1<globalInstructions.classList.length?"50px":"70px")}function legendHelpTipHandler(){let e=is_touch_device?"Tap color to isolate countries in specific range.":"Hover mouse over color to isolate countries in specific range.";const t=legendHelpTip.querySelector("p");t.innerText=e,t.style.width=is_touch_device?"300px":"370px"}var bckColorLDM="#3d3c3a",colorLDM="#faebd7";const buttons=document.querySelectorAll("button");for(let e=0;e<buttons.length;e++)buttons[e].dataset.prop&&buttons[e].addEventListener("mouseup",function(){if(0!=countriesList.length){prop=this.dataset.prop,currentTitle=this.innerText;const e=toggleSwitchCases(switchValue).btns,t=document.querySelectorAll(e);for(let e=0;e<t.length;e++)t[e].style.backgroundColor=bckColorLDM,t[e].style.color=colorLDM;this.style.backgroundColor=toggleSwitchCases(switchValue).color,this.style.color="#000",globalHelpTipHandler(),currentData.innerText=dropDownTitle.innerText=currentTitle,keyTitle.innerText=rawTotalSwitch(prop).title,getMinMax(countriesList,prop,rangeLimit),768>=window.innerWidth&&(0<sideBar.classList.length?(statsWrapper.style.overflowY="hidden",statsWrapper.removeEventListener("scroll",onStatsScroll),sideBar.className="",setTimeout(()=>{closeSideBar(),statsWrapper.style.overflowY="scroll",statsWrapper.addEventListener("scroll",onStatsScroll,!1)},400)):closeSideBar())}});var lastScrollTop=0;statsWrapper.addEventListener("scroll",onStatsScroll,!1);function onStatsScroll(){var e=this.scrollTop;e===lastScrollTop||(0>=e?(sideBar.className="",e>lastScrollTop?sideBar.style.height="100%":setTimeout(()=>{sideBar.style.height="100%"},300)):500<e?(sideBar.className="transform-y-178",e>lastScrollTop?sideBar.style.height=window.innerHeight+178+"px":setTimeout(()=>{sideBar.style.height=window.innerHeight+178+"px"},300)):(sideBar.className="transform-y-30",e>lastScrollTop?sideBar.style.height=window.innerHeight+30+"px":setTimeout(()=>{sideBar.style.height=window.innerHeight+30+"px"},300)),lastScrollTop=0>=e?0:e)}function changeNavColor(){const e="dark"===mode?"#54cbf2":"#9c9c9c",t="dark"===mode?"#faebd7":"#000";_("mapBtn").style.color=e,_("aboutBtn").style.color=t,_("mapBtnMobile").style.color=e,_("aboutBtnMobile").style.color=t}function onToggleDark(){"dark"===mode?(mode="light",this.setAttribute("title","Toggle Dark Mode"),bckColorLDM="#fff",colorLDM="#000",html.classList.add("light"),2===searchWrapper.classList.length&&(searchWrapper.style.backgroundColor="#e6e6e6"),buttonsHandler(prop)):(mode="dark",this.setAttribute("title","Toggle Light Mode"),bckColorLDM="#3d3c3a",colorLDM="#faebd7",html.classList.remove("light"),2===searchWrapper.classList.length&&(searchWrapper.style.backgroundColor="#282828"),buttonsHandler(prop)),changeNavColor()}toggleDark.addEventListener("mouseup",onToggleDark,!1);function toggleLegend(){"visible"===keys.style.visibility||"550px"===keys.style.maxHeight?closeLegend():openLegend()}function openLegend(){keys.style.visibility="visible",keys.style.maxHeight="550px"}function closeLegend(){keys.style.maxHeight="0px",keys.style.visibility="hidden"}keyBtn.addEventListener("click",toggleLegend,!1),closeKeys.addEventListener("click",closeLegend,!1),hamburger.addEventListener("mouseup",()=>{1===mobileNav.classList.length?mobileNav.classList.remove("transform-y-220"):mobileNav.classList.add("transform-y-220"),hamburger.classList.toggle("change"),popup.style.display="none"});function showSearch(){768>=window.innerWidth?1===searchWrapper.classList.length?expandSearch():collapseSearch():searchInput.focus()}function expandSearch(){const e="dark"===mode?"#282828":"#e6e6e6";searchWrapper.classList.add("flex-1"),closeSearch.style.display="block",searchInput.style.visibility="visible",searchWrapper.style.backgroundColor=e,searchWrapper.style.marginRight="45px",headerTitle.style.display="none"}function collapseSearch(){searchWrapper.classList.remove("flex-1"),closeSearch.style.display="none",searchInput.style.visibility="hidden",searchWrapper.style.backgroundColor="transparent",searchWrapper.style.marginRight="30px",setTimeout(()=>{headerTitle.style.display="block"},300)}searchIcon.addEventListener("mouseup",showSearch,!1);function clearPage(){toggle.style.display="none",toggleDark.style.display="none",sideBar.style.display="none",currentDataWrapper.style.display="none",centerBtn.style.display="none",keyBtn.style.display="none",keys.style.display="none",globalInstructions.style.display="none","block"===about.style.display&&(changeNavColor(),about.style.display="none")}function showPage(){const e=["-webkit-box","-ms-flexbox","flex"];for(let t=0;t<e.length;t++)sideBar.style.display=e[t],currentDataWrapper.style.display=e[t];toggle.style.display="block",toggleDark.style.display="block",centerBtn.style.display="block",keyBtn.style.display="block",keys.style.display="block",is_touch_device&&(768>=window.innerWidth&&(globalHelpTip.style.top=1<globalInstructions.classList.length?"50px":"70px"),globalInstructions.style.display="block"),onToggleSVGResize()}function clearPopup(){countryPopup.style.overflow="hidden",countryPopup.scrollTo(0,0),countryPopup.removeEventListener("scroll",onCountryPopupScroll),closePopup.removeEventListener("mouseup",onClosePopup),setTimeout(()=>{countryPopup.classList.add("transform"),closePopup.style.marginLeft="-30px",countryPopup.style.overflow=""},10),setTimeout(()=>{closePopup.style.visibility="hidden",resultsTransform()},500)}function setPrevMapState(){const e=`matrix(${prevMatrix.scale}, 0, 0, ${prevMatrix.scale}, ${prevMatrix.x}, ${prevMatrix.y})`;zoomEl.setAttributeNS(null,"transform",e),pathStrokeHandler()}document.querySelectorAll(".menu-btns").forEach(e=>{e.addEventListener("mouseup",function(){mobileNav.classList.add("transform-y-220"),hamburger.classList.remove("change");let e=this.dataset.link;const t="dark"===mode?"#54cbf2":"#9c9c9c",a="dark"===mode?"#faebd7":"#000";if(document.querySelectorAll(".menu-btns").forEach(e=>{e.style.color=a}),this.style.color=t,"about"===e?(removeZoomTapListeners(),clearPage(),clearPopup(),about.style.display="block"):(removeZoomTapListeners(),addZoomTapListeners(),clearPopup(),showPage(),about.style.display="none"),closePopup.dataset.country){let e=closePopup.dataset.country;removePopupListeners(),addPopupListeners(e),chartOn&&(removeChartListeners(),removeGlobalChartListeners(),chartOn=!1)}else removePopupListeners(),addPopupListeners();onResize(),onCloseSearch(),popup.style.display="none"})});function fadeOut(t){t.style.opacity=1,function e(){0>(t.style.opacity-=.1)?t.style.display="none":setTimeout(e,40)}()}function fadeIn(t,e){e||(t.style.display="block");let a=0;var n=setInterval(()=>{1>a?(a+=.1,t.style.opacity=a):clearInterval(n)},40)}function formatTime(){var e=new Date,t=1==e.getHours().toString().length?"0"+e.getHours():e.getHours(),a=1==e.getMinutes().toString().length?"0"+e.getMinutes():e.getMinutes(),n=1==e.getSeconds().toString().length?"0"+e.getSeconds():e.getSeconds();return t+":"+a+":"+n}function formatDate(e,t){e=e.split("-");var a=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];return t?a[e[1]-1]+" "+ +e[2]:a[e[1]-1]+" "+ +e[2]+", "+e[0]}String.prototype.commaSplit=function(){return this.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},Number.prototype.commaSplit=String.prototype.commaSplit,Number.prototype.countDecimals=function(){return Math.floor(this.valueOf())===this.valueOf()?0:this.toString().split(".")[1].length||0};var xyPlots,currentProp,propArr=[],propTitle=[],ratio=1,yListLength=1,headerHeight=0,firstXTextWidth=0,labelMaxWidth=0,xTextPadding=20,initialX=0,dataHist=[],chartArray=[];function makePropList(e){const t=propArr.filter(t=>0===getMax(e,t));t.forEach(e=>{const t=propArr.findIndex(t=>t===e);propArr.splice(t,1),propTitle.splice(t,1)});const a=_("testsCheckBox"),n=_("testsCheckBoxWrapper");if(0===propArr.length&&(a.disabled=!0,n.style.opacity="0.5"),0<propArr.length&&(propArr[0].includes("cases")||propArr[0].includes("deaths"))){const t=testsSwitch(propArr[0]).testProp;0===getMax(e,t)?(a.disabled=!0,n.style.opacity="0.5"):(a.disabled=!1,n.style.opacity="1")}return propArr.length}function getMax(e,t){const a=getDataList(e,t),n=Math.max.apply(null,a);return n}function getDataList(e,t){const a=e.map(e=>(e[t]=0<=e[t]?e[t]:null,e[t]));return a}function createChartArray(e,t){const a=[];let n;return e.forEach(e=>{e.hasOwnProperty(t)&&(n=e.hasOwnProperty("new_tests_smoothed")&&"new_vaccinations_smoothed"!=t&&"stringency_index"!=t?{date:e.date,[t]:e[t],new_tests_smoothed:e.new_tests_smoothed}:{date:e.date,[t]:e[t]},a.push(n))}),0===getMax(a,t)&&(a.length=0),a}function roundVal(e,t){const a=Math.pow(10,t||0);return Math.ceil(e*a)/a}function floorVal(e,t){const a=Math.pow(10,t||0);return Math.floor(e*a)/a}function getYList(e){const t=[],a=[];for(let t=0;t<propArr.length;t++)a.push(getMax(e,propArr[t]));a.sort((e,t)=>e<t?1:-1);let n=Math.max.apply(null,a),s=0|Math.log(n)*Math.LOG10E+1;n=0<s?floorVal(n,-(s-2)):1,ratio=n/5,n=0<n?n:1,s=0|Math.log(ratio)*Math.LOG10E+1,ratio/=Math.pow(10,s-1),1<=ratio&&1.5>=ratio?ratio=1:1.5<ratio&&4>ratio?ratio=2:4<=ratio&&7.5>=ratio?ratio=5:7.5<ratio&&10>ratio&&(ratio=10),ratio*=Math.pow(10,s-1);let r=0;for(ratio=0<ratio?ratio:1;r<=n;){let e=floorVal(r,1).commaSplit();t.push(e),r+=ratio}return yListLength=t.length,t}function getXList(e){const t=[];let a="";const n=e.length,s=1<e.length?Math.floor(n/2):1,r=768<window.innerWidth?Math.min(6,s):Math.min(3,s),l=Math.floor(n/r);for(i=0;i<=r;i++)a=i===r?formatDate(e[e.length-1].date):0===i?formatDate(e[i*l].date):formatDate(e[i*l].date,!0),t.push(a);const o=_("svgChart"),d=document.createElementNS("http://www.w3.org/2000/svg","g");d.setAttribute("style","visibility:hidden");let c=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='end'>${t[0]}</text>`;return d.innerHTML=c,o.appendChild(d),firstXTextWidth=Math.ceil(d.getBBox().width),{xList:t,xIncrFactor:l}}function getTextWidth(e){const t=_("svgChart"),a=document.createElementNS("http://www.w3.org/2000/svg","g"),n=document.createElementNS("http://www.w3.org/2000/svg","g");a.setAttribute("style","visibility:hidden"),n.setAttribute("style","visibility:hidden");let s=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='end'>${e[e.length-1]}</text>`;a.innerHTML=s,n.innerHTML=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='middle'>Stringency Index</text>`,t.appendChild(a),t.appendChild(n);const r=Math.ceil(a.getBBox().width);return labelMaxWidth=Math.ceil(n.getBBox().width)+10,firstXTextWidth=Math.max(r,firstXTextWidth/2),t.removeChild(a),t.removeChild(n),firstXTextWidth}function getBoundValues(){const e=_("chart"),t=e.offsetHeight-80-headerHeight,a=e.offsetWidth-40-labelMaxWidth,n={yBound:t,xBound:a,yIncr:t/yListLength-1,xIncr:(a-initialX)/(chartArray.length-1)};return n}function makeXYAxis(e){const t=_("svgChart"),a=getYList(e),n=getXList(e).xList,s=document.createElementNS("http://www.w3.org/2000/svg","g"),r=document.createElementNS("http://www.w3.org/2000/svg","g"),l=document.createElementNS("http://www.w3.org/2000/svg","g");s.setAttribute("class","y-axis"),r.setAttribute("class","x-axis"),l.setAttribute("class","horizontal-lines");const o=getTextWidth(a),d=getBoundValues().yBound,c=getBoundValues().xBound;let p=d,h=o+10;initialX=h;const u=getBoundValues().xIncr*getXList(e).xIncrFactor,y=getBoundValues().yIncr;let f="",m="",g="";for(let t=0;t<a.length;t++)f+=`<text class='chart-text' x='${o}', y='${p}' dominant-baseline='middle' text-anchor='end'>${a[t]}</text>`,m+=0==t?`<line class='chart-horiz-lines' x1="${o+10}" x2="${c}" y1="${p}" y2="${p}"></line>`:`<line class='chart-horiz-lines' x1="${o+10}" x2="${c}" y1="${p}" y2="${p}" stroke-dasharray='3,2'></line>`,p-=y;for(let t=0;t<n.length;t++)g+=t==n.length-1?`
            <text class='chart-text' x='${c}', y='${d+xTextPadding}' dominant-baseline='middle' text-anchor='middle'>${n[t]}</text>
            <line class='chart-lines' x1="${c}" x2="${c}" y1="${d}" y2="${d+4}"></line>`:`<text class='chart-text' x='${h}', y='${d+xTextPadding}' dominant-baseline='middle' text-anchor='middle'>${n[t]}</text>
            <line class='chart-lines' x1="${h}" x2="${h}" y1="${d}" y2="${d+4}"></line>`,h+=u;s.innerHTML=f,r.innerHTML=g,l.innerHTML=m,t.appendChild(s),t.appendChild(r),t.appendChild(l)}function plotData(e){const t=_("svgChart");xyPlots=[];const a=getBoundValues().yBound,n=getBoundValues().xBound,s=getBoundValues().yIncr,r=document.createElementNS("http://www.w3.org/2000/svg","g");r.setAttribute("class","plot-lines");const l=[],o=[];let d=initialX,c=0;const p=getBoundValues().xIncr;for(let t=0;t<e.length;t++){let n=[],r=[];propArr.forEach(l=>{null==e[t][l]?(n.push(null),r.push(null)):(c=a-e[t][l]/ratio*s,n.push(c),r.push(e[t][l]))}),xyPlots.push({x:d,y1:n[0],y2:n[1],date:e[t].date,value1:r[0],value2:r[1]}),null!=n[0]&&l.push(`${d}, ${n[0]}`),null!=n[1]&&o.push(`${d}, ${n[1]}`),d+=p}const h="dark"===mode?"#ffc82a":"#967000",u=propSwitch(currentProp);let y=`
        <rect x='${initialX}' y='${0}' width='${n-initialX}' height='${a}' fill='#000' opacity='0'></rect>
        <polyline class='polyline' stroke='${u}' points='${l}'></polyline>
        <polyline class='polyline' stroke='${h}' points='${o}'></polyline>`;r.innerHTML=y,t.appendChild(r)}function getLastNonNull(e,t){let a=e.length-1;for(;null===e[a][t];)a--;return e[a][t]}function propSwitch(e){let t;return"new_cases_smoothed"===e?t="dark"===mode?"#54cbf2":"#038ebc":"new_deaths_smoothed"===e?t="dark"===mode?"#f44336":"#B13507":"new_vaccinations_smoothed"===e?t="dark"===mode?"#4cf6af":"#33a976":"stringency_index"===e?t="dark"===mode?"#ffc82a":"#967000":void 0,t}function makeChartLabels(){const e=_("svgChart"),t=document.createElementNS("http://www.w3.org/2000/svg","g");t.setAttribute("class","chart-labels");const a=xyPlots[xyPlots.length-1].x+10;let n=getLastNonNull(xyPlots,"y1"),s=getLastNonNull(xyPlots,"y2");20>Math.abs(n-s)&&(n>s?s-=20:n-=20);const r=[n,s],l=propSwitch(currentProp),o="dark"===mode?"#ffc82a":"#967000";let d="";for(i=0;i<propArr.length;i++)d+=`<text class='chart-label' x='${a}', y='${Math.max(r[i],10)}' fill="${0===i?l:o}" dominant-baseline='middle' text-anchor='start'>${propTitle[i]}</text>`;t.innerHTML=d,e.appendChild(t)}function appendHoverG(){const e=_("chart"),t=_("svgChart"),a=document.createElementNS("http://www.w3.org/2000/svg","g");a.setAttribute("class","hover-info"),t.appendChild(a);const n=document.createElement("div");n.setAttribute("class","chart-popup"),e.appendChild(n)}function makeChartDiv(){const e=_("chart");e.innerHTML="\n        <div class='chart-header'>\n            <h2>CHART: NO DATA</h2>\n            <div class=\"help-tip\"><p></p></div>\n            <div id='chartInfo'><p></p></div>\n            <div id='testsCheckBoxWrapper' class='yellow-test'>\n                <input id='testsCheckBox' type='checkbox'></input>\n                <label for='testsCheckBox'>Tests</label>\n            </div>\n            <div class=\"chart-options-wrapper\" class=\"ease-out\">\n                <div id=\"chartDropDown\">\n                    <span class=\"flex-span\" id=\"chartOptionTitle\">Daily Cases</span>\n                    <span class=\"flex-span bckg-sprite\" id=\"chartOptionArrow\"></span> \n                </div>\n                <div id=\"chartMenu\">\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"new_cases_smoothed\">Daily Cases</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"new_deaths_smoothed\">Daily Deaths</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"new_vaccinations_smoothed\">Vaccinations</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"stringency_index\">Stringency Index</button>\n                </div>\n            </div> \n        </div>\n        <svg id='svgChart' width='100%' height='100%'></svg>"}function updateChartInfo(){const e=_("chart"),t=e.querySelector(".chart-header .help-tip"),a=e.querySelector("h2"),n=_("chartInfo"),s=n.querySelector("p");let r="",l="";if(t.style.display="none",t.style.opacity=0,0<propTitle.length){for(i=0;i<propTitle.length;i++)r=0<i?r+" AND ":r,r+=propTitle[i];propArr[0].includes("smoothed")?(l="Daily data is smoothed out using a 7-day rolling average.","new_vaccinations_smoothed"===currentProp&&(t.innerHTML="<p>This chart shows the daily number of doses administered, it does <strong>NOT</strong> represent the number of people vaccinated.</p>",fadeIn(t))):propArr[0].includes("stringency")?(l="Scaled to a value from 0 to 100 (100 = strictest).",t.innerHTML="<p>Published by the Oxford Coronavirus Government Response Tracker (OxCGRT), the <strong><em>stringency index</em></strong> measures the severity of the lockdown measures. This metric should not be interpreted as an indication of how appropriate or effective a country\u2019s response was to the pandemic.</p>",fadeIn(t)):l="Due to limited testing and challenges in the cause of death, confirmed cases and deaths shown below might be lower."}else r="NO DATA";s.innerText=l;const o=propSwitch(currentProp);a.style.color=o,a.innerText=`CHART: ${r}`;const d=_("svgChart"),c=e.querySelector(".chart-header"),p=document.querySelector(".chart-options-wrapper");headerHeight="150px"===p.style.height?c.offsetHeight-120:c.offsetHeight,d.setAttribute("style",`height:calc(100% - ${headerHeight}px)`),d.style.top=headerHeight+"px"}function onChartOptClick(){const e=_("testsCheckBox"),t=this.innerText,a=this.dataset.chartprop;currentProp=a,chartArray=createChartArray(dataHist,currentProp),propArr=[],propTitle=[],propArr.push(a),propTitle.push(t);const n=_("testsCheckBoxWrapper");if("stringency_index"===a||"new_vaccinations_smoothed"===a)e.disabled=!0,n.style.opacity="0.5";else{e.disabled=!1,n.style.opacity="1";const t=!!e.checked;if(t){const e=testsSwitch(a).testProp,t=testsSwitch(a).testTitle;propArr.push(e),propTitle.push(t)}}resetChart();const s=_("chartOptionTitle");s.innerText=t,closeChartDropDown()}function testsSwitch(e){let t="",a="";return"new_cases_smoothed"===e||"new_deaths_smoothed"===e?(t="new_tests_smoothed",a="Daily Tests"):void 0,{testProp:t,testTitle:a}}function onChartCheckBox(){const e=!!this.checked,t=propArr[0];if(e){const e=testsSwitch(t).testProp,a=testsSwitch(t).testTitle;propArr.push(e),propTitle.push(a)}else{const e=propArr.findIndex(e=>e.includes("tests"));propArr.splice(e,1),propTitle.splice(e,1)}resetChart()}function onChartDropDown(){const e=document.querySelector(".chart-options-wrapper");"30px"===e.style.height||""===e.style.height?openChartDropDown():closeChartDropDown()}function openChartDropDown(){const e=_("chartOptionArrow"),t=document.querySelector(".chart-options-wrapper");t.style.height="150px",e.classList.add("transform-rotate")}function closeChartDropDown(){const e=_("chartOptionArrow"),t=document.querySelector(".chart-options-wrapper");t.style.height="30px",e.classList.remove("transform-rotate")}function makeChart(){makePropList(chartArray);updateChartInfo(),makeXYAxis(chartArray),plotData(chartArray),makeChartLabels(),appendHoverG()}function removeChart(){const e=_("chart"),t=_("svgChart");t.querySelectorAll("g").forEach(e=>{t.removeChild(e)});const a=e.querySelector(".chart-popup");e.removeChild(a)}function onNoChartData(){chartOn=!1,propArr=[],propTitle=[],updateChartInfo();const e=_("testsCheckBox"),t=_("testsCheckBoxWrapper");e.disabled=!0,t.style.opacity="0.5"}function resetChart(){chartOn&&(removeChartListeners(),removeChart()),1<chartArray.length?(chartOn=!0,makeChart(),addChartListeners()):onNoChartData()}function onChartHover(t){getChartData(t)}function getChartData(t){var e=t.layerX;const a=_("chart"),n=_("svgChart"),s=n.querySelector(".hover-info"),r=a.querySelector(".chart-popup"),l=getBoundValues().xIncr;let o=xyPlots.find(t=>Math.abs(t.x-e)<=l/2);o=o?o:xyPlots[xyPlots.length-1];const d=propSwitch(currentProp),c="dark"===mode?"#ffc82a":"#967000";let p=`<line class='hover-line' x1="${o.x}" x2="${o.x}" y1="${0}" y2="${getBoundValues().yBound}" stroke-width='1px'></line>`,h=null==o.y1?"hidden":"visible";p+=`<circle class='hover-dot' cx="${o.x}" cy="${null==o.y1?0:o.y1}" r="5" fill='${d}' style='visibility:${h};'></circle>`,h=null==o.y2?"hidden":"visible",p+=`<circle class='hover-dot' cx="${o.x}" cy="${null==o.y2?0:o.y2}" r="5" fill='${c}' style='visibility:${h};'></circle>`,s.innerHTML=p,r.innerHTML=popupHtml(o),s.style.display="none",r.style.display="none"}function popupHtml(e){const t=["value1","value2"],a=propSwitch(currentProp),n="dark"===mode?"#ffc82a":"#967000",s=[a,n];let r=`<p class='chart-popup-date'>${formatDate(e.date)}</p>`,l=0;for(i=0;i<propArr.length;i++)if(null!=e[t[i]]){e[t[i]]=999<e[t[i]]?Math.round(e[t[i]]):e[t[i]];let a="Vaccinations"===propTitle[i]?"Daily":"";r+=`<div class='chart-popup-wrapper'>   
                    <div class='chart-popup-flex'>
                        <svg width='12px' height='12px'>
                            <circle cx="${5}" cy="${7}" r="5" fill='${s[i]}'></circle>
                        </svg>
                        <p class='chart-popup-text'>${a} ${propTitle[i]}</p>
                    </div>
                    <div class='chart-popup-flex'>
                        <p class='chart-popup-text'>${e[t[i]].commaSplit()}</p>
                    </div>
                </div>`}else l++;return l===propArr.length&&(r+=`<p class='chart-popup-text'>No Data</p>`),r}function onChartMove(t){var e=t.layerX;const a=_("chart"),n=_("svgChart"),s=n.querySelector(".plot-lines"),r=n.querySelector(".hover-info"),l=n.querySelector(".hover-line"),o=n.querySelectorAll(".hover-dot"),d=a.querySelector(".chart-popup");if(t.target.parentNode===s||t.target.parentNode===r){const t=getBoundValues().xIncr;let a=xyPlots.find(a=>Math.abs(a.x-e)<=t/2);a=a?a:xyPlots[xyPlots.length-1],r.style.display="block",d.style.display="block",l.setAttribute("x1",a.x),l.setAttribute("x2",a.x);const n=["y1","y2"];let s=0;o.forEach(e=>{e.setAttribute("cx",a.x),null==a[n[s]]?e.style.visibility="hidden":(e.setAttribute("cy",a[n[s]]),e.style.visibility="visible"),s++}),d.innerHTML=popupHtml(a);const c=e+d.offsetWidth+10;let p=768<window.innerWidth?c>getBoundValues().xBound+20+labelMaxWidth?a.x-d.offsetWidth+15+"px":a.x+25+"px":firstXTextWidth+30+"px";const h=768<window.innerWidth?headerHeight+70+"px":headerHeight+30+"px";d.setAttribute("style",`-o-transform: translate(${p}, ${h}); -moz-transform: translate(${p}, ${h}); -ms-transform: translate(${p}, ${h}); -webkit-transform: translate(${p}, ${h}); transform: translate(${p}, ${h}); display: block;`)}else r.style.display="none",d.style.display="none"}function onChartResize(){resetChart()}function onChartLabelHover(){this.addEventListener("mouseout",onChartLabelOut,!1);const e=_("svgChart"),t=e.querySelector(".plot-lines"),a=t.querySelectorAll("polyline"),n=e.querySelectorAll(".chart-label"),s=this.getAttribute("fill");a.forEach(e=>{e.getAttribute("stroke")!=s&&e.classList.add("stroke-gray")}),n.forEach(e=>{this!=e&&e.classList.add("fill-gray")})}function onChartLabelOut(){const e=_("svgChart"),t=e.querySelector(".plot-lines"),a=t.querySelectorAll("polyline"),n=e.querySelectorAll(".chart-label");a.forEach(e=>{e.classList.remove("stroke-gray")}),n.forEach(e=>{e.classList.remove("fill-gray")}),this.removeEventListener("mouseout",onChartLabelOut)}const svgEl=_("worldMap"),zoomEl=_("gOuter"),VBWidth=2e3,VBHeight=1001,maxZoom=20;var initialScale=0,mouseMove=!1,countryAnim=!1,prevMatrix={};function getWheelDelta(t){const e=-(t.deltaY?t.deltaY:t.wheelDeltaY?t.wheelDeltaY:t.detail);return 0==e%1?Math.pow(1.2,e/360):(t.preventDefault(),Math.pow(10,e/360))}function getCursorPt(t){const e=svgEl.createSVGPoint();return e.x=t.clientX,e.y=t.clientY,e}function setMatrix(e,t){e=e.matrixTransform(zoomEl.getScreenCTM().inverse()),e.x=Math.min(e.x,VBWidth),e.y=Math.min(e.y,VBHeight);const a=svgEl.createSVGMatrix().translate(e.x,e.y).scale(t).translate(-e.x,-e.y);return a}function setCTM(e){const t=window.innerWidth-e.a*VBWidth,a=window.innerHeight-e.a*VBHeight;if(e.e=0<=e.e?0>t?0:t/2:0<t?t:Math.max(e.e,t),e.f=0<=e.f?0>a?0:a/2:0<a?a/2:Math.max(e.f,a),e.a<=maxZoom&&e.a>=initialScale){const t=`matrix(${e.a},${e.b},${e.c},${e.d},${e.e},${e.f})`;zoomEl.setAttributeNS(null,"transform",t)}pathStrokeHandler()}function pathStrokeHandler(){const e=zoomEl.transform.baseVal.getItem(0).matrix.a;for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&pathCountries[t].style.setProperty("--zoom",e)}function zoomHandler(t){const e=getWheelDelta(t),a=getCursorPt(t),n=setMatrix(a,e);setCTM(zoomEl.getScreenCTM().multiply(n))}var tapP,maxScale;function tapZoomHandler(t){countryAnim||(tapP=getCursorPt(t),maxScale=2*zoomEl.transform.baseVal.getItem(0).matrix.a,maxScale=maxScale>maxZoom?maxZoom:maxScale,fadeZoom())}function fadeZoom(){const e=zoomEl.transform.baseVal.getItem(0).matrix.a,t=Math.floor(100*(e/maxScale));if(90>t){const e=setMatrix(tapP,1.05);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadeZoom)}else cancelAnimationFrame}function getPanPos(t){const e=zoomEl.transform.baseVal.getItem(0).matrix,a=svgEl.createSVGPoint();return a.x=t.movementX/e.a,a.y=t.movementY/e.d,a}function setPanMatrix(e){const t=svgEl.createSVGMatrix().translate(e.x,e.y);return t}var trail=svgEl.createSVGPoint();function fadePan(){const e=.06;if(trail.x*=1-e,trail.y*=1-e,0!=Math.floor(Math.abs(trail.x))||0!=Math.floor(Math.abs(trail.y))){const e=setPanMatrix(trail);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadePan)}else cancelAnimationFrame}function onMouseDown(){cancelAnimationFrame(fadePan),trail.x=0,trail.y=0,document.body.addEventListener("mousemove",onMouseMove),document.body.addEventListener("mouseup",onMouseUp),svgEl.addEventListener("mouseleave",onMouseUp,!1)}function onMouseMove(t){mouseMove=!0;const e=getPanPos(t);trail.x=e.x,trail.y=e.y;const a=setPanMatrix(e);setCTM(zoomEl.getScreenCTM().multiply(a))}function onMouseUp(){mouseMove=!1,document.body.removeEventListener("mousemove",onMouseMove),document.body.removeEventListener("mouseup",onMouseUp),svgEl.removeEventListener("mouseleave",onMouseUp),fadePan()}function goToCountry(t){cancelAnimationFrame(fadePan),popup.style.display="none",removePopupListeners();zoomToCountry(t)}function zoomToCountry(t){clearPage(),onCloseSearch(),trail.x=trail.y=touchTrail.x=touchTrail.y=0,getPrevMatrix(),removeZoomTapListeners();const e=t.getBBox(),a=t.getAttribute("data-name"),n=t.getAttribute("data-id");highlightCountry(a);const s=zoomEl.transform.baseVal.getItem(0).matrix,r=Math.min(window.innerWidth-s.a*e.width,window.innerHeight-s.a*e.height),l=Math.sign(r),o=e.x*s.a-(window.innerWidth-e.width*s.a)/2,d=e.y*s.a-(window.innerHeight-e.height*s.a)/2,c=Math.min(Math.min((window.innerHeight-120)/e.height,(window.innerWidth-20)/e.width),maxZoom);panToCountry(s,o,d);const h=-1===l?.85:1.15;setTimeout(function t(){zoomEl.classList.remove("ease-out");const a=zoomEl.transform.baseVal.getItem(0).matrix,n=svgEl.createSVGPoint();n.x=(e.x+e.width/2)*a.a+a.e,n.y=(e.y+e.height/2)*a.d+a.f;const s=zoomEl.getScreenCTM().multiply(setMatrix(n,h));if(-1===l){if(s.a>=c){const e=`matrix(${s.a},${s.b},${s.c},${s.d},${s.e},${s.f})`;zoomEl.setAttributeNS(null,"transform",e),requestAnimationFrame(t)}else cancelAnimationFrame,pathStrokeHandler(),closePopup.addEventListener("mouseup",onClosePopup,!1);}else if(s.a<=c){const e=`matrix(${s.a},${s.b},${s.c},${s.d},${s.e},${s.f})`;zoomEl.setAttributeNS(null,"transform",e),requestAnimationFrame(t)}else cancelAnimationFrame,pathStrokeHandler(),closePopup.addEventListener("mouseup",onClosePopup,!1)},350),setTimeout(()=>{showCountryPopup(a,n)},500)}function highlightCountry(e){for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&(pathCountries[t].getAttribute("data-name")===e?pathCountries[t].classList.add("light-path"):pathCountries[t].classList.add("dark-path"))}function panToCountry(e,t,a){const n=`matrix(${e.a},${e.b},${e.c},${e.d},${-t},${-a})`;zoomEl.classList.add("ease-out"),zoomEl.setAttributeNS(null,"transform",n)}function zoomToCountryNoAnim(t,e){trail.x=trail.y=touchTrail.x=touchTrail.y=0,cancelAnimationFrame(fadePan),e||getPrevMatrix(),removeZoomTapListeners(),removePopupListeners();const a=t.getBBox(),n=t.getAttribute("data-name"),s=t.getAttribute("data-id");highlightCountry(n);const r=Math.min(Math.min((window.innerHeight-120)/a.height,(window.innerWidth-20)/a.width),maxZoom),l=a.x*r-(window.innerWidth-a.width*r)/2,o=a.y*r-(window.innerHeight-a.height*r)/2;zoomEl.setAttributeNS(null,"transform",`matrix(${r},${0},${0},${r},${-l},${-o})`),pathStrokeHandler(),clearPage(),chartOn&&(removeChartListeners(),removeGlobalChartListeners(),chartOn=!1),showCountryPopup(n,s),closePopup.addEventListener("mouseup",onClosePopup,!1)}function getPrevMatrix(){const e=zoomEl.transform.baseVal.getItem(0).matrix;prevMatrix.scale=e.a,prevMatrix.x=e.e,prevMatrix.y=e.f}function centerMap(){const e=window.innerWidth-initialScale*VBWidth,t=window.innerHeight-initialScale*VBHeight,a=zoomEl.transform.baseVal.getItem(0).matrix,n=svgEl.createSVGPoint();n.x=e/2,n.y=t/2;const s=setMatrix(n,.9);setCTM(zoomEl.getScreenCTM().multiply(s)),.1<a.a-initialScale?(removePopupListeners(),removeZoomTapListeners(),requestAnimationFrame(centerMap)):(onResize(),addHeader(),cancelAnimationFrame,removeZoomTapListeners(),addZoomTapListeners(),removePopupListeners(),addPopupListeners(),showGlInstructions())}function onResize(){const e=window.innerWidth/VBWidth,t=window.innerHeight/VBHeight;initialScale=Math.min(e,t),prevMatrix.scale=initialScale;const a=Math.abs((window.innerWidth-initialScale*VBWidth)/2),n=Math.abs((window.innerHeight-initialScale*VBHeight)/2);prevMatrix.x=a,prevMatrix.y=n;const s=`matrix(${initialScale}, 0, 0, ${initialScale}, ${a}, ${n})`;zoomEl.setAttributeNS(null,"transform",s),768<window.innerWidth?globalHelpTip.style.top="unset":(globalHelpTip.style.top=is_touch_device?"70px":"50px",0<resultsWrapper.innerText.length&&expandSearch()),resultsTransform(),addHeader(),pathStrokeHandler(),onLegendResize(globalRangeList),onToggleSVGResize()}onResize(),fadeIn(mapDiv),window.addEventListener("resize",onResize,!1);