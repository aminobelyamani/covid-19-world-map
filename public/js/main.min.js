function _(e){return document.getElementById(e)}var pathCountries=[],countryCodes=[];const dataSVG=[];var dataAPI=[];const countriesList=[];var globalRangeList=[],prop="casesPerMil",currentTitle="Cases/Million";const rangeLimit=6;var is_touch_device,switchValue="cases",mode="dark",html=_("html"),header=_("header"),headerTitle=_("headerTitle"),loader=_("loader"),mobileNav=_("mobileNav"),hamburger=_("hamburger"),mapDiv=_("mapDiv"),worldMap=_("worldMap"),about=_("about"),currentDataWrapper=_("currentDataWrapper"),globalHelpTip=_("globalHelpTip"),currentData=_("currentData"),toggleDark=_("toggleDark"),centerBtn=_("centerBtn"),keyBtn=_("keyBtn"),keys=_("keys"),closeKeys=_("closeKeys"),keyTitle=_("keyTitle"),blues=_("blues"),reds=_("reds"),toggle=_("toggleSideBar"),closeDash=_("closeDash"),sideBar=_("sideBar"),timeStamp=_("timeStamp"),switchToggle=_("switchToggle"),switchSpan=_("switch"),optionsDiv=_("optionsDiv"),dropDown=_("dropDown"),dropDownTitle=_("dropDownTitle"),statsWrapper=_("statsWrapper"),searchWrapper=_("searchWrapper"),searchIcon=_("searchIcon"),searchInput=_("searchInput"),closeSearch=_("closeSearch"),resultsWrapper=_("resultsWrapper"),countryPopup=_("countryPopup"),closePopup=_("closePopup"),popup=_("popup");let socket;var chartOn=!1;function onPageLoad(e){_("overlay").style.display="none",sideBar.style.visibility="visible",currentData.innerText=currentTitle,currentDataWrapper.style.visibility="visible",fadeOut(loader),is_touch_device="ontouchstart"in document.documentElement,is_touch_device?(touchEvents(),addZoomTapListeners(),removeHover()):addZoomTapListeners(),openLegend(),addPopupListeners(),e.emit("getCountryCodes"),socketListeners(e),switchToggle.checked=!1}function onDOMLoaded(){socket=io(),parseSVG(),pathStrokeHandler(),fetch("https://api.apify.com/v2/key-value-stores/SmuuI0oebnTWjRTUh/records/LATEST?disableRedirect=true").then(e=>{if(e.ok)return e.json()}).then(e=>{e?(getData(e.regionData),timeStamp.innerText=`Updated at ${formatTime()} EST`,onPageLoad(socket)):(socket.emit("getFetchFromServer"),socket.on("getFetchFromServer",e=>{getData(e.regionData),timeStamp.innerText=`Updated at ${formatTime()} EST`}),onPageLoad(socket))}),setInterval(()=>{fetchAPI()},3e5)}function socketListeners(e){e.on("getCountryCodes",e=>{countryCodes=e}),e.on("getCountryData",e=>{e?(dataHist=e,propArr=["new_cases_smoothed"],propTitle=["New Cases"],makeChartDiv(),makeChart(),fadeIn(_("chart")),chartOn&&removeChartListeners(),addChartListeners(),chartOn=!0):chartOn=!1}),e.on("getLatestData",e=>{if(e.latest){const t=getLatestData(e),s=t.perc,n=t.percDeaths;s&&0!=s&&addPercNew(s),n&&0!=n&&addPercNew(n,!0)}}),e.on("getLatestWorldData",e=>{if(e.latest){const t=getLatestData(e,!0),s=t.perc,n=t.percDeaths;"cases"===switchValue?s&&0!=s&&addPercNewWorld(s):n&&0!=n&&addPercNewWorld(n,!0)}})}function parseSVG(){pathCountries=document.querySelectorAll("path");for(let e=0;e<pathCountries.length;e++)if(pathCountries[e].getAttribute("data-id")){let t=pathCountries[e].getAttribute("data-id").toLowerCase(),s=pathCountries[e].getAttribute("data-name");dataSVG.push({path:pathCountries[e],id:t,country:s})}}function fetchAPI(){fetch("https://api.apify.com/v2/key-value-stores/SmuuI0oebnTWjRTUh/records/LATEST?disableRedirect=true").then(e=>{if(e.ok)return e.json()}).then(e=>{e?(getData(e.regionData),timeStamp.innerText=`Updated at ${formatTime()} EST`):socket.emit("getFetchFromServer")})}function displayFetchError(){fadeOut(loader),_("overlayMsg").innerText="Failed to fetch data"}function getData(e){dataAPI=e,countriesList.length=0,dataSVG.forEach(t=>{const s=e.findIndex(e=>e.country===t.country);-1!=s&&(e[s].alpha2=t.id,countriesList.push(e[s]))}),calcData(countriesList),buttonsHandler(prop),worldData(dataAPI)}function calcData(e){const t=["totalDeaths","totalRecovered","activeCases"];var s=[];e.forEach(e=>{t.forEach((t,n)=>{s[n]=null==e[t]?null:roundVal(100*(e[t]/e.totalCases),1)}),e.percDeaths=s[0],e.percRecovered=s[1],e.percActive=s[2],null!=e.activeCases&&(e.percCritical=roundVal(100*(e.seriousCritical/e.activeCases),1))})}function worldData(e){const t=e.find(e=>"World"===e.country),s=roundVal(100*(t.totalRecovered/t.totalCases),1),n=roundVal(100*(t.activeCases/t.totalCases),1),a=roundVal(100*(t.totalDeaths/t.totalCases),1),r=roundVal(100*(t.seriousCritical/t.activeCases),1);let l=_("worldStats");l.innerHTML="cases"===switchValue?`
            <h2 class='global-cases-title'>Global Stats</h2>
            <p class='stats white'>${t.totalCases.commaSplit()}</p>
            <p class='stats-titles gray'>Confirmed Cases</p>
            <p class='stats white'>${t.casesPerMil.commaSplit()}</p>
            <p class='stats-titles gray'>Cases/Million</p>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.newCases.commaSplit()}</p>
                    <p class='stats-titles gray'>New Cases</p>
                </div>
                <div class='flex-stat' style='width:60px; height:70px;margin:0;'></div>
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.totalRecovered.commaSplit()}</p>
                    <p class='stats-titles gray'>Total Recovered</p>
                </div>
                ${getPiePerc(s,"totalRecovered",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.activeCases.commaSplit()}</p>
                    <p class='stats-titles gray'>Active Cases</p>
                </div>
                ${getPiePerc(n,"activeCases",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.seriousCritical.commaSplit()}</p>
                    <p class='stats-titles gray'>Critical Cases</p>
                </div>
                ${getPiePerc(r,"seriousCritical",!0)}
            </div>`:`
            <h2 class='global-deaths-title'>Global Stats</h2>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.totalDeaths.commaSplit()}</p>
                    <p class='stats-titles gray'>Total Deaths</p>
                </div>
                ${getPiePerc(a,"totalDeaths",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${t.newDeaths.commaSplit()}</p>
                    <p class='stats-titles gray'>New Deaths</p>
                </div>
                <div class='flex-stat' style='width:60px; height:70px;margin:0;'></div>
            </div>
            <p class='stats white'>${t.deathsPerMil.commaSplit()}</p>
            <p class='stats-titles gray'>Deaths/Million</p>`;socket.emit("getLatestWorldData","OWID_WRL")}function buttonsHandler(e){const t=document.querySelectorAll(".cases-btns"),s=document.querySelectorAll(".deaths-btns");for(let s=0;s<t.length;s++)t[s].dataset.prop===e?(t[s].style.backgroundColor="#08aae3",t[s].style.color=colorLDM,blues.classList.remove("no-display"),reds.classList.add("no-display")):(t[s].style.backgroundColor=bckColorLDM,t[s].style.color=colorLDM);for(let t=0;t<s.length;t++)s[t].dataset.prop===e?(s[t].style.backgroundColor="#f6584c",s[t].style.color=colorLDM,blues.classList.add("no-display"),reds.classList.remove("no-display")):(s[t].style.backgroundColor=bckColorLDM,s[t].style.color=colorLDM);currentData.innerText=dropDownTitle.innerText=keyTitle.innerText=currentTitle,getMinMax(countriesList,e)}function getMinMax(e,t){const s=mapData(e,t);var n="casesPerMil"==t?s[1]:Math.max.apply(null,s),a=1<Math.min.apply(null,s.filter(Boolean))?1:Math.min.apply(null,s.filter(Boolean));const r=a.countDecimals();a=1>a?1/Math.pow(10,r):a,globalRangeList=getRangeList(n,a),makeLegend(globalRangeList),matchData(countriesList,t,globalRangeList),showSortedList(countriesList)}function mapData(e,t){const s=e.map(e=>(e[t]=0>e[t]?0:e[t],e[t]));return s.sort((e,t)=>e<t?1:-1)}function getRangeList(e,t){const s=[];for(var n,a=0;a<rangeLimit;)n=0|Math.log(e)*Math.LOG10E+1,e=3>=n&&1===a?Math.floor(e):Math.floor(e/Math.pow(10,n-1))*Math.pow(10,n-1),1<=e?(5===a&&(e=t),s.push(e)):1>t&&(s.push(t),a=rangeLimit),e=5>=n&&0===a||"percDeaths"===prop?e/2:e==Math.ceil((e+1)/Math.pow(10,n+1))*Math.pow(10,n-1)?e/10:Math.ceil((e+1)/Math.pow(10,n+1))*Math.pow(10,n-1),a++;return s.reverse(),s}function makeLegend(e){const t="deaths"===switchValue?reds:blues,s=keys.querySelectorAll(".data-range"),n=t.querySelectorAll(".color");for(let t=0;t<s.length;t++)s[t].classList.add("no-display");for(let t=0;t<n.length;t++)n[t].classList.add("no-display"),n[t].style.borderTopRightRadius="0px",n[t].style.borderTopLeftRadius="0px",n[t].style.borderBottomRightRadius="0px";for(let t=1;3>t;t++)s[s.length-t].classList.remove("no-display"),n[n.length-t].classList.remove("no-display");onLegendResize(e)}function onLegendResize(e){const t="deaths"===switchValue?reds:blues,s=keys.querySelectorAll(".data-range"),n=t.querySelectorAll(".color");s[s.length-1].innerText=768>=window.innerWidth?"No Data":"No Reported Data",0===e.length&&(n[n.length-2].style.borderTopRightRadius="3px",768>=window.innerWidth?n[n.length-2].style.borderBottomRightRadius="3px":n[n.length-2].style.borderTopLeftRadius="3px");for(let t=0;t<e.length;t++){const a=s.length-(3+t),r=e[t].countDecimals(),l=1>=e[t]?0:"percDeaths"===prop?.1:1,o=1>e[t]&&1===e[t+1]?1/Math.pow(10,r):0;s[a].classList.remove("no-display"),n[a].classList.remove("no-display"),t==e.length-1?(n[a].style.borderTopRightRadius="3px",s[a].firstElementChild.innerText=`> ${e[t].commaSplit()}`,768>=window.innerWidth?n[a].style.borderBottomRightRadius="3px":n[a].style.borderTopLeftRadius="3px"):s[a].firstElementChild.innerText=768>=window.innerWidth?`${e[t].commaSplit()}`:`${(e[t]+l).commaSplit()} â€“ ${(e[t+1]-o).commaSplit()}`}const a=n[n.length-2].getBoundingClientRect().width,r=768>=window.innerWidth?-(a/2+.5)+"px":"0px";for(let t=0;t<s.length;t++)s[t].style.width=768>=window.innerWidth?`${a}px`:"auto",t!=s.length-1&&s[t].style.setProperty("--trans",r)}function matchData(e,t,s){for(let n=0;n<pathCountries.length;n++)if(pathCountries[n].getAttribute("data-name")){let a=pathCountries[n].getAttribute("data-name");const r=e.findIndex(e=>e.country===a);if(-1!=r){const a=e[r][t];pathCountries[n].style.fill=0<=a&&null!=a?"deaths"===switchValue?val2color(a,s,!0):val2color(a,s):"#ffc82a"}else pathCountries[n].style.fill="#ffc82a"}}function val2color(e,t,s){const n=s?["#ffe9e7","#fcd2cd","#ffada6","#fd8177","#f6584c","#bd4137","#9e251b"]:["#d6f5ff","#96dcf4","#54cbf2","#04abe3","#038ebc","#035e79","#013544"];let a="";for(let r=0;r<t.length-1;r++)0===e&&(a=n[0]),0==r?e>=t[r]&&e<=t[r+1]&&(a=n[r+1]):e>t[r]&&e<=t[r+1]?a=n[r+1]:e>t[t.length-1]&&(a=n[r+2]);return a}function sortList(e,t){t||(t=prop);var s=[];e.forEach(e=>{null!=e[t]&&(e[t]=0>e[t]?0:e[t],s.push(e))}),s.sort((e,s)=>e[t]<s[t]?1:-1);let n=0,a=0;return s.forEach((e,r)=>{0<r?s[r][t]===s[r-1][t]?a=a:a++:a++,"casesPerMil"!=t&&"testsPerMil"!=t&&"deathsPerMil"!=t&&"population"!=t&&"percDeaths"!=t?(n=100*(e[t]/e.population),.1<=n?(e.perc=roundVal(n,2),e.perMill=null):(e.perMill=roundVal(1e4*n,2),e.perc=null)):(e.perc=null,e.perMill=null),e.rank=a,r===s.length-1&&(e.rankMax=a)}),s}function showSortedList(e){let t="";t="totalDeaths"===prop||"newDeaths"===prop||"deathsPerMil"===prop||"percDeaths"===prop?"color:#f6584c":"color:#96dcf4";const s=_("worldList");let n="";sortList(e).forEach(e=>{let t=dataSVG.find(t=>t.country===e.country);n+=`
            <div class='stats-flex' data-country='${e.country}'>
                <p class='inline-count'>${e.rank}</p>
                <div class='bckg-img inline-flag' style='background-image:url(https://flagcdn.com/60x45/${t.id}.png);'></div>
                <p class='inline-p'>${e.country}</p>
                <p class='inline-stat'>${e[prop].commaSplit()}</p>
            </div> `}),s.innerHTML=`
        <h2 id='rankTitle' class='global-cases-title' style='${t}'>Global Ranks</h2>
        <p class='ranks-title gray'>${currentTitle}</p>
        ${n}`;const a=s.querySelectorAll(".stats-flex");for(let t=0;t<a.length;t++)a[t].addEventListener("mouseup",function(){let e=this.dataset.country;clearPage(),clearHighlights();const t=dataSVG.find(t=>t.path.getAttribute("data-name")===e);zoomToCountryNoAnim(t.path)})}function addPopupListeners(e){countryAnim=!1;for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&(e&&(pathCountries[t].getAttribute("data-name")===e?pathCountries[t].classList.remove("light-path"):pathCountries[t].classList.remove("dark-path")),is_touch_device||pathCountries[t].addEventListener("mouseover",pathHover,!1));is_touch_device||document.addEventListener("mousemove",pathMove,!1)}function removePopupListeners(){countryAnim=!0;for(let e=0;e<pathCountries.length;e++)pathCountries[e].getAttribute("data-name")&&(is_touch_device||pathCountries[e].removeEventListener("mouseover",pathHover));is_touch_device||document.removeEventListener("mousemove",pathMove),popup.style.display="none"}function onPathClick(){if(!mouseMove){cancelAnimationFrame(fadeZoom);let e=this.getAttribute("data-name");countriesList.find(t=>t.country===e)&&goToCountry(this)}}function pathHover(){if(this.addEventListener("mouseup",onPathClick,!1),this.addEventListener("mouseout",pathNoHover,!1),0!=countriesList.length&&""!=prop){let e=this.getAttribute("data-name");getPopupInfo(e)}}function getPopupInfo(e){let t="",s="",n="";const a=dataSVG.find(t=>t.country===e),r="ic"===a.id?`images/ic.png`:`https://flagcdn.com/h40/${a.id}.png`,l=sortList(countriesList).find(t=>t.country===e);if(l){const e=l.rank,a=sortList(countriesList),r=l[prop].commaSplit();if(0<=l.perc&&null!=l.perc){const e=l.perc;n=`<p class='popup-big white'><strong>${e.commaSplit()}</strong></p><p class='popup-small gray'>% of Pop.</p>`}if(0<=l.perMill&&null!=l.perMill){const e=l.perMill;n=`<p class='popup-big white'><strong>${e.commaSplit()}</strong></p><p class='popup-small gray'>Per Million</p>`}t=`<p class='popup-big white'><strong>${r}</strong></p><p class='popup-small gray'>${currentTitle}</p><br>`,s=`<p class='popup-big white'><strong>${e}</strong></p><p class='popup-small gray'>Rank</p><br>`}else t="<p class='popup-small yellow'>No Reported Data</p><br>";popup.innerHTML=`
        <div class='flag bckg-img' style='background-image:url(${r});'></div>
        <p class='popup country white'>${e}</p><br>
        ${t}
        ${s}
        ${n}`}function pathMove(t){if(mouseMove)return void(popup.style.display="none");var s,n,a;if(t=t||window.e,is_touch_device?(t.pageX=t.center.x,t.pageY=t.center.y):null==t.pageX&&null!=t.clientX&&(s=t.target&&t.target.ownerDocument||document,n=s.documentElement,a=s.body,t.pageX=t.clientX+(n&&n.scrollLeft||a&&a.scrollLeft||0)-(n&&n.clientLeft||a&&a.clientLeft||0),t.pageY=t.clientY+(n&&n.scrollTop||a&&a.scrollTop||0)-(n&&n.clientTop||a&&a.clientTop||0)),t.target.parentNode===zoomEl){popup.style.display="block";const e=t.pageX+popup.offsetWidth+10,s=t.pageY+popup.offsetHeight,n=e>window.innerWidth?`${Math.max(t.pageX-popup.offsetWidth-5,0)}px`:`${t.pageX+5}px`,a=s>window.innerHeight?`${Math.max(t.pageY-popup.offsetHeight-5,0)}px`:`${t.pageY+5}px`;popup.style.msTransform=`translate(${n}, ${a})`,popup.style.webkitTransform=`translate(${n}, ${a})`,popup.style.MozTransform=`translate(${n}, ${a})`,popup.style.OTransform=`translate(${n}, ${a})`,popup.style.transform=`translate(${n}, ${a})`}else popup.style.display="none"}function pathNoHover(){this.removeEventListener("mouseup",onPathClick),this.removeEventListener("mouseout",pathNoHover)}function resultsTransform(){resultsWrapper.style.width=`${getOffsets(searchWrapper).width}px`,resultsWrapper.style.msTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.webkitTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.MozTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.OTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.transform=`translateX(${getOffsets(searchWrapper).left}px)`}function showCountryPopup(e,t){countryPopup.scrollTo(0,0),countryPopup.classList.remove("transform"),closePopup.style.marginLeft="-5px",closePopup.setAttribute("data-country",e),setTimeout(()=>{resultsTransform()},300);const s=["Total Cases","New Cases","New Deaths","Total Deaths","Recovered","Active","Critical","Tests","Tests/Million"],n=dataSVG.find(t=>t.country===e);let a,r=[];["casesPerMil","deathsPerMil","population"].forEach(t=>{const s=sortList(countriesList,t);a=s.find(t=>t.country===e),r.push(a.rank)});var l="";["totalCases","newCases","newDeaths","totalDeaths","totalRecovered","activeCases","seriousCritical","totalTests","testsPerMil"].forEach((e,t)=>{l+="totalDeaths"!=e&&"newDeaths"!=e?`
                    <div class='stats-column-flex'>
                        <p class='prop-title'>${s[t]}</p>
                        ${getRecord(a.country,e,"Total")}
                    </div>`:`
                    <div class='stats-column-flex'>
                        <p class='prop-title red'>${s[t]}</p>
                        ${getRecord(a.country,e,"Total")}
                    </div>`}),countryPopup.innerHTML=`
            <div id='countryWrapper'>
                <div class='country-container'>
                    <div class='flag-big bckg-img' style='background-image:url(https://flagcdn.com/h240/${n.id}.png);'></div>
                    <p class='country-big'>${a.country}</p>
                    <p class='stats'>${a.population.commaSplit()}</p>
                    <p class='stats-titles dark-gray'>Population</p>
                </div>
                <div class='stats-column'>
                    <p class='prop-title blue'>Cases/Million</p>
                    <p class='stats blue'>${a.casesPerMil.commaSplit()}</p>
                    <p class='stats-titles white'>Total</p>
                    <p class='stats blue'>${r[0]}</p>
                    <p class='stats-titles white'>Rank</p>
                </div>
                <div class='stats-column'>
                    <p class='prop-title red'>Deaths/Million</p>
                    <p class='stats red'>${a.deathsPerMil.commaSplit()}</p>
                    <p class='stats-titles white'>Deaths</p>
                    <p class='stats red'>${r[1]}</p>
                    <p class='stats-titles white'>Rank</p>
                </div>
            </div>
            <div class='flex-stats-container'>
                ${l}
            </div>`;socket.emit("getCountryData",t),socket.emit("getLatestData",{alpha2:t,country:e}),setTimeout(()=>{addHeader()},300),countryPopup.addEventListener("scroll",onCountryPopupScroll,!1)}function onCountryPopupScroll(){768>=window.innerWidth&&addHeader()}function getLatestData(e,t){let s,n;const a=t?dataAPI.find(e=>"World"===e.country):sortList(countriesList,"newCases").find(t=>t.country===e.country);let r=e.latest.data1.new_cases==a.newCases?!!e.latest.data2&&"data2":"data1";if(r){const t=0<e.latest[r].new_cases?e.latest[r].new_cases:1;s=100*((a.newCases-(e.latest[r].new_cases||0))/t),s=roundVal(s,2)}else s=!1;if(r=e.latest.data1.new_deaths==a.newDeaths?!!e.latest.data2&&"data2":"data1",r){const t=0<e.latest[r].new_deaths?e.latest[r].new_deaths:1;n=100*((a.newDeaths-(e.latest[r].new_deaths||0))/t),n=roundVal(n,2)}else n=!1;return{perc:s,percDeaths:n}}function addPercNew(e,t){const s=t?3:2,n=countryPopup.querySelector(`.flex-stats-container .stats-column-flex:nth-child(${s})`),a=document.createElement("div");a.setAttribute("class","flex-stat"),a.setAttribute("style","opacity:0;");const r=1===Math.sign(e)?"dark"===mode?"#f6584C":"#B13507":"dark"===mode?"#6dff71":"#209222",l=-1===Math.sign(e)?"\u25BC":"\u25B2",o=1===Math.sign(e)?"+":"";a.innerHTML=`
        <p class='stats' style='color: ${r};font-size:1em;'>${l}</p>
        <p class='stats-titles' style='color: ${r};'>${o+e}%</p>`,n.appendChild(a),fadeIn(a,!0)}function addPercNewWorld(e,t){const s=t?1:0,n=worldStats.querySelectorAll(`.worldStats-flex`)[s],a=n.querySelector(".flex-stat");a.style.opacity=0;const r=1===Math.sign(e)?"#f6584C":"#6dff71",l=-1===Math.sign(e)?"\u25BC":"\u25B2",o=1===Math.sign(e)?"+":"";a.innerHTML=`
        <p class='stats' style='color: ${r}; font-size:1em;'>${l}</p>
        <p class='stats-titles' style='color: ${r};'>${o+e}%</p>`,fadeIn(a,!0)}function getPiePerc(e,t,s){const n=s?25:30,a=s?118:141,r=s?157:188,l=s?2:5,o=s?"width:60px; height:70px; margin-top:0;":"",d="totalRecovered"===t?"dark"===mode||s?"#f6584C":"#B13507":"dark"===mode||s?"#6dff71":"#209222",c="#f6584C"===d||"#B13507"===d?"dark"===mode||s?"#6dff71":"#209222":"dark"===mode||s?"#f6584C":"#B13507",p="seriousCritical"===t?"% of Active":"totalDeaths"===t?"Case Fatality Rate":"% of Cases",h=s?"none":"block";return`
    <div class="pie-wrapper" style='${o}'>
        <svg class="circle">
            <circle r="${n}" cx="50%" cy="50%" stroke="${d}" fill="none" stroke-width="${l}" stroke-linecap="round" stroke-dasharray="${a}, ${r}" stroke-opacity="0.2"></circle>
            <circle r="${n}" cx="50%" cy="50%" stroke="${c}" fill="none" stroke-width="${l}" stroke-linecap="round" stroke-dasharray="${e/100*a}, 188"></circle>
        </svg>
        <div class="circle-info circle-perc" style="color:${c};">${e}</div>
        <div class="circle-info" style="color:${c}; display:${h};">${p}</div>
    </div>`}function getRecord(e,t,s){const n=sortList(countriesList,t),a=n.find(t=>t.country===e);let r="",l="",o="",d="";if(a){l=`
            <p class='stats'>${a.rank}</p>
            <p class='stats-titles dark-gray'>Rank</p>`,"testsPerMil"!=t&&(0<=a.perc&&null!=a.perc&&(o=`
                    <div class='flex-stat'>
                        <p class='stats'>${a.perc.commaSplit()}</p>
                        <p class='stats-titles dark-gray text-center'>% of Population</p>
                    </div> `),0<=a.perMill&&null!=a.perMill&&(o=`
                    <div class='flex-stat'> 
                        <p class='stats'>${a.perMill.commaSplit()}</p>
                        <p class='stats-titles dark-gray text-center'>Per Million</p>
                    </div> `));let n;return"totalDeaths"===t?n=countriesList.find(t=>t.country===e).percDeaths:"totalRecovered"===t?n=countriesList.find(t=>t.country===e).percRecovered:"activeCases"===t?n=countriesList.find(t=>t.country===e).percActive:"seriousCritical"===t?n=countriesList.find(t=>t.country===e).percCritical:void 0,d=0<=n&&null!=n?getPiePerc(n,t):"",r=`
            <div class='flex-stat'>
                <p class='stats'>${a[t].commaSplit()}</p>
                <p class='stats-titles dark-gray'>${s}</p>
            </div>
            <div class='flex-stat'>
                ${l}
            </div>
            ${o}
            ${d}     
        `,r}return r=`<p class='stats yellow text-center'>No Reported Data</p>`,r}function onClosePopup(){onCloseSearch(),clearPopup(),setPrevMapState(),showPage(),addPopupListeners(this.dataset.country),addZoomTapListeners(),chartOn&&(removeChartListeners(),chartOn=!1)}function addZoomTapListeners(){is_touch_device||(svgEl.addEventListener("mousedown",onMouseDown,!1),svgEl.addEventListener("dblclick",tapZoomHandler,!1),svgEl.addEventListener("onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll",zoomHandler,!1)),is_touch_device&&(taptime.on("tap",onDocTap),hammertime.on("pinch",onPinchZoom),hammertime.on("tap",onTapZoom),presstime.on("tap",onTapPopup),hammertime.on("press",onPress),hammertime.on("pan",onPan),hammertime.on("panend",onPanEnd),currentData.addEventListener("touchend",addRemoveHeader,!1)),addLegendListeners(),centerBtn.addEventListener("click",centerMap,!1)}function removeZoomTapListeners(){is_touch_device||(svgEl.removeEventListener("mousedown",onMouseDown),svgEl.removeEventListener("dblclick",tapZoomHandler),svgEl.removeEventListener("onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll",zoomHandler)),is_touch_device&&(taptime.off("tap",onDocTap),hammertime.off("pinch",onPinchZoom),hammertime.off("tap",onTapZoom),presstime.off("tap",onTapPopup),hammertime.off("press",onPress),hammertime.off("pan",onPan),hammertime.off("panend",onPanEnd),currentData.removeEventListener("touchend",addRemoveHeader)),removeLegendListeners(),centerBtn.removeEventListener("click",centerMap)}function addLegendListeners(){const e="cases"===switchValue?blues:reds,t=e.querySelectorAll(".color"),s=keys.querySelectorAll(".data-range");for(let e=0;e<t.length;e++)is_touch_device?t[e].addEventListener("touchend",onColorTouch,!1):t[e].addEventListener("mouseover",onColorOver,!1);for(let e=0;e<s.length;e++)is_touch_device?s[e].addEventListener("touchend",onColorTouch,!1):s[e].addEventListener("mouseover",onColorOver,!1)}function removeLegendListeners(){const e=[blues,reds],t=keys.querySelectorAll(".data-range");for(let t,s=0;s<e.length;s++){t=e[s].querySelectorAll(".color");for(let e=0;e<t.length;e++)is_touch_device?t[e].removeEventListener("touchend",onColorTouch):t[e].removeEventListener("mouseover",onColorOver)}for(let e=0;e<t.length;e++)is_touch_device?t[e].removeEventListener("touchend",onColorTouch):t[e].removeEventListener("mouseover",onColorOver)}function clearLegendHover(){const e="cases"===switchValue?blues:reds,t=e.querySelectorAll(".color"),s=keys.querySelectorAll(".data-range");for(let e=0;e<t.length;e++)t[e].classList.remove("on-color-hover");for(let e=0;e<s.length;e++)s[e].style.opacity=1;clearHighlights()}function onColorTouch(t){clearLegendHover();const e="color"===t.target.className?this:getLegendTarget(this).elem,s=keys.querySelectorAll(".data-range");for(let e=0;e<s.length;e++)s[e].style.opacity=e===getLegendTarget(this).index?1:.3;e.classList.add("on-color-hover"),highlightRangeCountries(e.style.backgroundColor)}function onColorOver(t){this.addEventListener("mouseout",onColorOut,!1);const e="color"===t.target.className?this:getLegendTarget(this).elem,s=keys.querySelectorAll(".data-range");for(let e=0;e<s.length;e++)s[e].style.opacity=e===getLegendTarget(this).index?1:.3;e.classList.add("on-color-hover"),highlightRangeCountries(e.style.backgroundColor)}function getLegendTarget(t){const e="cases"===switchValue?blues:reds,s=t.parentNode,n=Array.prototype.indexOf.call(s.children,t);return{elem:e.querySelectorAll(".color")[n],index:n}}function highlightRangeCountries(e){for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&pathCountries[t].style.fill!=e&&pathCountries[t].classList.add("dark-path")}function onColorOut(t){const e="color"===t.target.className?this:getLegendTarget(this).elem,s=keys.querySelectorAll(".data-range");for(let e=0;e<s.length;e++)s[e].style.opacity=1;e.classList.remove("on-color-hover"),clearHighlights(),this.removeEventListener("mouseout",onColorOut)}function addChartListeners(){const e=_("svgChart"),t=e.querySelector(".plot-lines"),s=e.querySelectorAll(".chart-label");for(let e=0;e<s.length;e++)s[e].addEventListener("mouseover",onChartLabelHover,!1);t.addEventListener("mouseover",onChartHover,!1),document.addEventListener("mousemove",onChartMove,!1),window.addEventListener("resize",onChartResize,!1);const n=_("chart"),a=n.querySelectorAll(".chart-btns");for(let e=0;e<a.length;e++)a[e].addEventListener("mouseup",onChartOptClick,!1);const r=_("testsCheckBox");r.addEventListener("change",onChartCheckBox,!1);const l=_("chartDropDown");l.addEventListener("mouseup",onChartDropDown,!1)}function removeChartListeners(){const e=_("svgChart"),t=e.querySelector(".plot-lines"),s=e.querySelectorAll(".chart-label");for(let e=0;e<s.length;e++)s[e].removeEventListener("mouseover",onChartLabelHover);t.removeEventListener("mouseover",onChartHover),document.removeEventListener("mousemove",onChartMove),window.removeEventListener("resize",onChartResize);const n=_("chart"),a=n.querySelectorAll(".chart-btns");for(let e=0;e<a.length;e++)a[e].removeEventListener("mouseup",onChartOptClick);const r=_("testsCheckBox");r.removeEventListener("change",onChartCheckBox);const l=_("chartDropDown");l.removeEventListener("mouseup",onChartDropDown)}function getOffsets(t){const e={width:t.offsetWidth,left:t.offsetLeft};return e}function getSearchResults(e){let t=[];const s=countryCodes.filter(t=>t.name.toLowerCase().includes(e)||t.country.toLowerCase().includes(e)||t.alpha2.toLowerCase().includes(e)||t.alpha3.toLowerCase().includes(e));return s.forEach(e=>{const s=countriesList.find(t=>t.country.toLowerCase()===e.country.toLowerCase());s&&t.push(s)}),t}function handleKeysOnSearch(t){switch(t.key){case"ArrowDown":onArrowsEnterSearch();break;case"ArrowUp":onArrowsEnterSearch(!0);break;case"Enter":onArrowsEnterSearch(!1,!0);}}function removeResultFocus(){const e=resultsWrapper.querySelectorAll(".results-flex");for(let t=0;t<e.length;t++)e[t].classList.remove("results-flex-focus")}function onArrowsEnterSearch(e,t){const s=resultsWrapper.querySelectorAll(".results-flex");let n=0;for(let a=0;a<s.length;a++)1<s[a].classList.length&&(s[a].classList.remove("results-flex-focus"),t?(onResultClick(s[a]),n=a):n=e?0===a?0:a-1:a===s.length-1?s.length-1:a+1);const a=s[n].offsetTop;resultsWrapper.scrollTop=a,s[n].classList.add("results-flex-focus")}function onResultClick(t){t=t.pageX?this:t,removeResultFocus(),t.classList.add("results-flex-focus");let s=t.dataset.country;clearPage(),clearHighlights();const n=dataSVG.find(e=>e.path.getAttribute("data-name")===s);zoomToCountryNoAnim(n.path,!0)}searchInput.addEventListener("keyup",function(t){if(t.preventDefault(),"ArrowDown"==t.key||"ArrowUp"==t.key||"Enter"==t.key||"ArrowLeft"==t.key||"ArrowRight"==t.key){const e=resultsWrapper.querySelectorAll(".results-flex");0<e.length&&handleKeysOnSearch(t)}else if(resultsWrapper.innerHTML="",0!=countriesList.length){let e=this.value.toLowerCase().trim();if(e=e.replace(/[^a-zA-Z ]/g,""),""!=e){const t=getSearchResults(e);if(closeSearch.style.visibility="visible",closeSearch.addEventListener("mouseup",onCloseSearch,!1),0!=t.length){resultsWrapper.style.visibility="visible";let e="";t.forEach(t=>{let s=dataSVG.find(e=>e.country===t.country);e+=`
                            <div class='results-flex' data-country='${t.country}'>
                                <div class='bckg-img inline-flag' style='background-image:url(https://flagcdn.com/h40/${s.id}.png);'></div>
                                <p class='inline-p'>${t.country}</p>
                            </div>`}),resultsTransform(),resultsWrapper.innerHTML=e;const s=resultsWrapper.querySelectorAll(".results-flex");for(let e=0;e<s.length;e++)s[e].addEventListener("mouseup",onResultClick,!1)}else resultsWrapper.style.visibility="hidden",resultsWrapper.innerHTML=""}else onCloseSearch()}});function onCloseSearch(){resultsWrapper.style.visibility="hidden",resultsWrapper.innerHTML="",searchInput.value="",closeSearch.style.visibility="hidden",closeSearch.removeEventListener("mouseup",onCloseSearch)}var hammertime,presstime,prevScale=0,prevP=worldMap.createSVGPoint(),touchTrail=worldMap.createSVGPoint();touchTrail.x=touchTrail.y=prevP.x=prevP.y=0;function getTouchPoint(t){const e=svgEl.createSVGPoint();return e.x=t.center.x,e.y=t.center.y,e}function onPinchZoom(t){popup.style.display="none";const e=getTouchPoint(t),s=0===prevScale?t.scale-prevScale:t.scale-prevScale+1;prevScale=t.scale;const n=setMatrix(e,s);setCTM(zoomEl.getScreenCTM().multiply(n));const a=zoomEl.transform.baseVal.getItem(0).matrix;.1>a.a-initialScale?addHeader():removeHeader()}function onTapZoom(t){2!==t.tapCount||countryAnim||(removeHeader(),tapP=getTouchPoint(t),maxScale=2*zoomEl.transform.baseVal.getItem(0).matrix.a,maxScale=maxScale>maxZoom?maxZoom:maxScale,fadeZoom(),popup.style.display="none")}function onTapPopup(t){if(1===t.tapCount){let e=t.target.getAttribute("data-name");getPopupInfo(e),pathMove(t)}}function onPan(t){const e=zoomEl.transform.baseVal.getItem(0).matrix;let s=svgEl.createSVGPoint();s.x=(t.deltaX-prevP.x)/e.a,s.y=(t.deltaY-prevP.y)/e.d,prevP.x=t.deltaX,prevP.y=t.deltaY,touchTrail.x=s.x,touchTrail.y=s.y;const n=setPanMatrix(s);setCTM(zoomEl.getScreenCTM().multiply(n))}function onPanEnd(t){return 1<t.maxPointers?void(touchTrail.x=touchTrail.y=prevP.x=prevP.y=0):void fadeTouchPan()}function fadeTouchPan(){const e=.06;if(touchTrail.x*=1-e,touchTrail.y*=1-e,0!=Math.floor(Math.abs(touchTrail.x))||0!=Math.floor(Math.abs(touchTrail.y))){const e=setPanMatrix(touchTrail);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadeTouchPan)}else cancelAnimationFrame,touchTrail.x=touchTrail.y=prevP.x=prevP.y=0}function onPress(t){let e=t.target.getAttribute("data-name");countriesList.find(t=>t.country===e)&&(popup.style.display="none",clearLegendHover(),cancelAnimationFrame(fadeTouchPan),zoomToCountry(t.target))}function onDocTap(t){1<=t.tapCount&&clearLegendHover()}function touchEvents(){taptime=new Hammer(document),hammertime=new Hammer(svgEl),hammertime.get("pinch").set({enable:!0}),hammertime.on("pinchend",function(){prevScale=0}),hammertime.on("panstart",function(){popup.style.display="none",touchTrail.x=touchTrail.y=prevP.x=prevP.y=0,cancelAnimationFrame(fadeTouchPan)}),presstime=new Hammer(zoomEl),popuptime=new Hammer(popup),popuptime.on("tap",function(){popup.style.display="none"}),768>=window.innerWidth&&closeSideBar()}function addRemoveHeader(){1===header.classList.length?removeHeader():addHeader()}function addHeader(){[header,currentData,globalHelpTip,toggle,toggleDark,keyBtn,centerBtn].forEach(t=>{t.classList.remove("transform-y-50")})}function removeHeader(){[header,currentData,globalHelpTip,toggle,toggleDark,keyBtn,centerBtn].forEach(t=>{t.classList.add("transform-y-50")}),0===mobileNav.classList.length&&(mobileNav.classList.add("transform-y-220"),hamburger.classList.toggle("change")),768>=window.innerWidth&&onCloseSearch()}function removeHover(){keyBtn.classList.add("no-hover"),centerBtn.classList.add("no-hover"),toggle.classList.add("no-hover"),toggleDark.classList.add("no-hover"),closeKeys.classList.add("no-hover"),closeDash.classList.add("white")}function clearHighlights(){for(let e=0;e<pathCountries.length;e++)pathCountries[e].getAttribute("data-name")&&(pathCountries[e].classList.remove("light-path"),pathCountries[e].classList.remove("dark-path"))}function closeSideBar(){sideBar.className="transform",toggle.style.opacity=1}function toggleSideBar(){0===sideBar.classList.length?(sideBar.className="transform",toggle.style.opacity=1):(statsWrapper.addEventListener("scroll",onStatsScroll,!1),sideBar.className="",toggle.style.opacity=0,popup.style.display="none")}toggle.addEventListener("mouseup",toggleSideBar,!1),closeDash.addEventListener("mouseup",closeSideBar,!1),switchToggle.addEventListener("change",function(){let e=_("casesTitle"),t=_("deathsTitle"),s=_("casesMenu"),n=_("deathsMenu");this.checked?(switchSpan.setAttribute("title","Toggle Cases"),switchValue="deaths",t.style.opacity="1",e.style.opacity="0.4",s.style.display="none",n.style.display="block",currentData.style.backgroundColor="#f6584c",prop="deathsPerMil",currentTitle="Deaths/Million",buttonsHandler(prop),worldData(dataAPI),removeLegendListeners(),addLegendListeners()):(switchSpan.setAttribute("title","Toggle Deaths"),switchValue="cases",t.style.opacity="0.4",e.style.opacity="1",s.style.display="block",n.style.display="none",currentData.style.backgroundColor="#68d0f4",prop="casesPerMil",currentTitle="Cases/Million",buttonsHandler(prop),worldData(dataAPI),removeLegendListeners(),addLegendListeners()),optionsDiv.style.height="40px",globalHelpTip.style.display="none"});function openDropDown(){const e="cases"===switchValue?"400px":"200px",t=_("dropDownArrow");optionsDiv.style.overflowY="scroll",optionsDiv.style.height=e,t.classList.add("transform-rotate"),sideBar.style.height="100%"}function closeDropDown(){const e=_("dropDownArrow");optionsDiv.scrollTo(0,0),optionsDiv.style.height="40px",optionsDiv.style.overflowY="hidden",e.classList.remove("transform-rotate")}dropDown.addEventListener("click",()=>{"40px"===optionsDiv.style.height||""===optionsDiv.style.height?openDropDown():closeDropDown(),sideBar.className=""});function dropDownSwitch(e){let t="";return"newCases"===e?t="Every country reports their daily new cases at different times in the day. The daily data by all reporting countries resets every day after midnight GMT.":"totalCases"===e?t="This is the reported total cumulative count of detected and laboratory cases (and sometimes, depending on the country reporting them and the criteria adopted at the time, also clinical cases). Depending on the country reporting standards, this number can also include presumptive, suspect, or probable cases of detected infection.":"totalRecovered"===e?t="This statistic is highly imperfect, because reporting can be missing, incomplete, incorrect, based on different definitions, or dated (or a combination of all of these) for many governments, both at the local and national level, sometimes with differences between states within the same country or counties within the same state. ":"activeCases"===e?t="This figure represents the current number of people detected and confirmed to be infected with the virus. This figure can increase or decrease, and represents an important metric for Public Health and Emergency response authorities when assessing hospitalization needs versus capacity.":"seriousCritical"===e?t=`This statistic is imperfect, for many reasons. When 99% of the cases were in China, the figure pretty much corresponded to the Chinese NHC's reported number of "severe" cases. Today, it represents for the most part the number of patients currently being treated in Intensive Care Unit (ICU), if and when this figure is reported.`:"totalTests"===e?t=`This statistic is imperfect, because some countries report tests performed, while others report the individuals tested.`:"newDeaths"===e?t="Every country reports their daily new deaths at different times in the day. The daily data by all reporting countries resets every day after midnight GMT.":"totalDeaths"===e?t="This is the reported total cumulative count of deaths caused by COVID-19. Due to limited testing, challenges in the attribution of the cause of death, and varying methods of reporting in some countries, this is an imperfect statistic. ":"percDeaths"===e?t=`The Case Fatality rate (CFR) represents the proportion of cases who eventually die from the disease. This statistic for each country is imperfect, since it is based on both the total number of reported cases and deaths, both of which depend on the respective countries' reporting criteria. Globally, the WHO has estimated the coronavirus' CFR at 2%. For comparison, the CFR for SARS was 10%, and for MERS 34%.`:void 0,t}var casesColor="#08aae3",deathsColor="#f6584c",bckColorLDM="#3d3c3a",colorLDM="#faebd7";const buttons=document.querySelectorAll("button");for(let e=0;e<buttons.length;e++)buttons[e].dataset.prop&&buttons[e].addEventListener("mouseup",function(){if(statsWrapper.removeEventListener("scroll",onStatsScroll),0!=countriesList.length){if(prop=this.dataset.prop,currentTitle="percDeaths"===prop&&768>=window.innerWidth?"CFR":this.innerText,"cases"===this.dataset.category){const e=document.querySelectorAll(".cases-btns");for(let t=0;t<e.length;t++)e[t].style.backgroundColor=bckColorLDM,e[t].style.color=colorLDM;this.style.backgroundColor=casesColor,blues.classList.remove("no-display"),reds.classList.add("no-display")}else{const e=document.querySelectorAll(".deaths-btns");for(let t=0;t<e.length;t++)e[t].style.backgroundColor=bckColorLDM,e[t].style.color=colorLDM;this.style.backgroundColor=deathsColor,blues.classList.add("no-display"),reds.classList.remove("no-display")}const e=dropDownSwitch(prop);if(""!=e){globalHelpTip.style.display="block";const t=globalHelpTip.querySelector("p");t.innerText=e}else globalHelpTip.style.display="none";this.style.color="#fff",currentData.innerText=dropDownTitle.innerText=keyTitle.innerText=currentTitle,getMinMax(countriesList,prop,rangeLimit),768>=window.innerWidth&&closeSideBar()}});statsWrapper.addEventListener("scroll",onStatsScroll,!1);function onStatsScroll(){768>=window.innerWidth&&(0>=this.scrollTop?(sideBar.className="",sideBar.style.height="100%"):(500<this.scrollTop?(sideBar.className="transform-y-140",sideBar.style.height=window.innerHeight+140+"px"):(sideBar.className="transform-y-70",sideBar.style.height=window.innerHeight+70+"px"),("200px"===optionsDiv.style.height||"400px"===optionsDiv.style.height)&&(sideBar.className="",sideBar.style.height="100%")))}function changeNavColor(){const e="dark"===mode?"#54cbf2":"#9c9c9c",t="dark"===mode?"#faebd7":"#000";_("mapBtn").style.color=e,_("aboutBtn").style.color=t,_("mapBtnMobile").style.color=e,_("aboutBtnMobile").style.color=t}function onToggleDark(){"dark"===mode?(mode="light",this.setAttribute("title","Toggle Dark Mode"),bckColorLDM="#fff",colorLDM="#000",html.classList.add("light"),2===searchWrapper.classList.length&&(searchWrapper.style.backgroundColor="#e6e6e6"),buttonsHandler(prop)):(mode="dark",this.setAttribute("title","Toggle Light Mode"),bckColorLDM="#3d3c3a",colorLDM="#faebd7",html.classList.remove("light"),2===searchWrapper.classList.length&&(searchWrapper.style.backgroundColor="#282828"),buttonsHandler(prop)),changeNavColor()}toggleDark.addEventListener("mouseup",onToggleDark,!1);function toggleLegend(){"visible"===keys.style.visibility||"550px"===keys.style.maxHeight?closeLegend():openLegend()}function openLegend(){keys.style.visibility="visible",keys.style.maxHeight="550px"}function closeLegend(){keys.style.maxHeight="0px",keys.style.visibility="hidden"}keyBtn.addEventListener("click",toggleLegend,!1),closeKeys.addEventListener("click",closeLegend,!1),hamburger.addEventListener("mouseup",()=>{1===mobileNav.classList.length?mobileNav.classList.remove("transform-y-220"):mobileNav.classList.add("transform-y-220"),hamburger.classList.toggle("change"),popup.style.display="none"});function showSearch(){const e="dark"===mode?"#282828":"#e6e6e6";768>=window.innerWidth?1===searchWrapper.classList.length?(searchWrapper.classList.add("flex-1"),closeSearch.style.display="block",searchInput.style.visibility="visible",searchWrapper.style.backgroundColor=e,searchWrapper.style.marginRight="45px",headerTitle.style.display="none"):(searchWrapper.classList.remove("flex-1"),closeSearch.style.display="none",searchInput.style.visibility="hidden",searchWrapper.style.backgroundColor="transparent",searchWrapper.style.marginRight="30px",setTimeout(()=>{headerTitle.style.display="block"},300)):searchInput.focus()}searchIcon.addEventListener("mouseup",showSearch,!1);function clearPage(){toggle.style.display="none",toggleDark.style.display="none",sideBar.style.display="none",currentDataWrapper.style.display="none",centerBtn.style.display="none",keyBtn.style.display="none",keys.style.display="none","block"===about.style.display&&(changeNavColor(),about.style.display="none")}function showPage(){const e=["-webkit-box","-ms-flexbox","flex"];for(let t=0;t<e.length;t++)sideBar.style.display=e[t],currentDataWrapper.style.display=e[t];toggle.style.display="block",toggleDark.style.display="block",centerBtn.style.display="block",keyBtn.style.display="block",keys.style.display="block"}function clearPopup(){countryPopup.style.overflow="hidden",countryPopup.scrollTo(0,0),countryPopup.removeEventListener("scroll",onCountryPopupScroll),closePopup.removeEventListener("mouseup",onClosePopup),setTimeout(()=>{countryPopup.classList.add("transform"),closePopup.style.marginLeft="-30px",countryPopup.style.overflow=""},10),setTimeout(()=>{resultsTransform()},500)}function setPrevMapState(){const e=`matrix(${prevMatrix.scale}, 0, 0, ${prevMatrix.scale}, ${prevMatrix.x}, ${prevMatrix.y})`;zoomEl.setAttributeNS(null,"transform",e),pathStrokeHandler(),sideBarState?(sideBar.className="",toggle.style.opacity=0):(sideBar.className="transform",toggle.style.opacity=1)}document.querySelectorAll(".menu-btns").forEach(e=>{e.addEventListener("mouseup",function(){mobileNav.classList.add("transform-y-220"),hamburger.classList.remove("change");let e=this.dataset.link;const t="dark"===mode?"#54cbf2":"#9c9c9c",s="dark"===mode?"#faebd7":"#000";if(document.querySelectorAll(".menu-btns").forEach(e=>{e.style.color=s}),this.style.color=t,"about"===e?(removeZoomTapListeners(),clearPage(),clearPopup(),about.style.display="block"):(removeZoomTapListeners(),addZoomTapListeners(),clearPopup(),showPage(),768>=window.innerWidth&&closeSideBar(),about.style.display="none"),closePopup.dataset.country){let e=closePopup.dataset.country;removePopupListeners(),addPopupListeners(e),chartOn&&(removeChartListeners(),chartOn=!1)}else removePopupListeners(),addPopupListeners();onResize(),popup.style.display="none"})});function fadeOut(t){t.style.opacity=1,function e(){0>(t.style.opacity-=.1)?t.style.display="none":setTimeout(e,40)}()}function fadeIn(t,e){e||(t.style.display="block");let s=0;var n=setInterval(()=>{1>s?(s+=.1,t.style.opacity=s):clearInterval(n)},40)}function formatTime(){var e=new Date,t=1==e.getHours().toString().length?"0"+e.getHours():e.getHours(),s=1==e.getMinutes().toString().length?"0"+e.getMinutes():e.getMinutes(),n=1==e.getSeconds().toString().length?"0"+e.getSeconds():e.getSeconds();return t+":"+s+":"+n}function formatDate(e,t){e=e.split("-");var s=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];return t?s[e[1]-1]+" "+ +e[2]:s[e[1]-1]+" "+ +e[2]+", "+e[0]}String.prototype.commaSplit=function(){return this.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},Number.prototype.commaSplit=String.prototype.commaSplit,Number.prototype.countDecimals=function(){return Math.floor(this.valueOf())===this.valueOf()?0:this.toString().split(".")[1].length||0};var xyPlots,propArr=[],propTitle=[],ratio=1,yListLength=1,headerHeight=0,firstXTextWidth=0,labelMaxWidth=0,xTextPadding=20,initialX=0,dataHist=[];function makePropList(e){const t=propArr.filter(t=>0===getMax(e,t));t.forEach(e=>{const t=propArr.findIndex(t=>t===e);propArr.splice(t,1),propTitle.splice(t,1)});const s=_("testsCheckBox"),n=_("testsCheckBoxWrapper");if(0===propArr.length&&(s.disabled=!0,n.style.opacity="0.5"),0<propArr.length&&(propArr[0].includes("cases")||propArr[0].includes("deaths"))){const t=testsSwitch(propArr[0]).testProp;0===getMax(e,t)?(s.disabled=!0,n.style.opacity="0.5"):(s.disabled=!1,n.style.opacity="1")}return propArr.length}function getMax(e,t){const s=getDataList(e,t),n=Math.max.apply(null,s);return n}function getDataList(e,t){const s=e.map(e=>(e[t]=0<=e[t]?e[t]:null,e[t]));return s}function roundVal(e,t){const s=Math.pow(10,t||0);return Math.floor(e*s)/s}function getYList(e){const t=[],s=[];for(let t=0;t<propArr.length;t++)s.push(getMax(e,propArr[t]));s.sort((e,t)=>e<t?1:-1);let n=Math.max.apply(null,s),a=0|Math.log(n)*Math.LOG10E+1;n=0<a?roundVal(n,-(a-2)):1,ratio=n/5,n=0<n?n:1,a=0|Math.log(ratio)*Math.LOG10E+1,ratio/=Math.pow(10,a-1),1<=ratio&&1.5>=ratio?ratio=1:1.5<ratio&&4>ratio?ratio=2:4<=ratio&&7.5>=ratio?ratio=5:7.5<ratio&&10>ratio&&(ratio=10),ratio*=Math.pow(10,a-1);let r=0;for(ratio=0<ratio?ratio:1;r<=n;){let e=roundVal(r,1).commaSplit();t.push(e),r+=ratio}return yListLength=t.length,t}function getXList(e){const t=[];let s="";const n=e.length,a=768<window.innerWidth?6:3,r=Math.floor(n/a);for(i=0;i<=a;i++)s=i===a?formatDate(e[e.length-1].date):0===i?formatDate(e[i*r].date):formatDate(e[i*r].date,!0),t.push(s);const l=_("svgChart"),o=document.createElementNS("http://www.w3.org/2000/svg","g");o.setAttribute("style","visibility:hidden");let d=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='end'>${t[0]}</text>`;return o.innerHTML=d,l.appendChild(o),firstXTextWidth=Math.ceil(o.getBBox().width),{xList:t,xIncrFactor:r}}function getTextWidth(e){const t=_("svgChart"),s=document.createElementNS("http://www.w3.org/2000/svg","g"),n=document.createElementNS("http://www.w3.org/2000/svg","g");s.setAttribute("style","visibility:hidden"),n.setAttribute("style","visibility:hidden");let a=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='end'>${e[e.length-1]}</text>`;s.innerHTML=a,n.innerHTML=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='middle'>Stringency Index</text>`,t.appendChild(s),t.appendChild(n);const r=Math.ceil(s.getBBox().width);return labelMaxWidth=Math.ceil(n.getBBox().width)+10,firstXTextWidth=Math.max(r,firstXTextWidth/2),t.removeChild(s),t.removeChild(n),firstXTextWidth}function getBoundValues(){const e=_("chart"),t=e.offsetHeight-80-headerHeight,s=e.offsetWidth-40-labelMaxWidth,n={yBound:t,xBound:s,yIncr:t/yListLength-1,xIncr:(s-initialX)/dataHist.length};return n}function makeXYAxis(e){const t=_("svgChart"),s=getYList(e),n=getXList(e).xList,a=document.createElementNS("http://www.w3.org/2000/svg","g"),r=document.createElementNS("http://www.w3.org/2000/svg","g"),l=document.createElementNS("http://www.w3.org/2000/svg","g");a.setAttribute("class","y-axis"),r.setAttribute("class","x-axis"),l.setAttribute("class","horizontal-lines");const o=getTextWidth(s),d=getBoundValues().yBound,c=getBoundValues().xBound;let p=d,h=o+10;initialX=h;const u=getBoundValues().xIncr*getXList(e).xIncrFactor,y=getBoundValues().yIncr;let f="",m="",g="";for(let t=0;t<s.length;t++)f+=`<text class='chart-text' x='${o}', y='${p}' dominant-baseline='middle' text-anchor='end'>${s[t]}</text>`,m+=0==t?`<line class='chart-horiz-lines' x1="${o+10}" x2="${c-getBoundValues().xIncr}" y1="${p}" y2="${p}"></line>`:`<line class='chart-horiz-lines' x1="${o+10}" x2="${c-getBoundValues().xIncr}" y1="${p}" y2="${p}" stroke-dasharray='3,2'></line>`,p-=y;for(let t=0;t<n.length;t++)g+=t==n.length-1?`
            <text class='chart-text' x='${c-getBoundValues().xIncr}', y='${d+xTextPadding}' dominant-baseline='middle' text-anchor='middle'>${n[t]}</text>
            <line class='chart-lines' x1="${c-getBoundValues().xIncr}" x2="${c-getBoundValues().xIncr}" y1="${d}" y2="${d+4}"></line>`:`<text class='chart-text' x='${h}', y='${d+xTextPadding}' dominant-baseline='middle' text-anchor='middle'>${n[t]}</text>
            <line class='chart-lines' x1="${h}" x2="${h}" y1="${d}" y2="${d+4}"></line>`,h+=u;a.innerHTML=f,r.innerHTML=g,l.innerHTML=m,t.appendChild(a),t.appendChild(r),t.appendChild(l)}function plotData(e){const t=_("svgChart");xyPlots=[];const s=getBoundValues().yBound,n=getBoundValues().xBound,a=getBoundValues().yIncr,r=document.createElementNS("http://www.w3.org/2000/svg","g");r.setAttribute("class","plot-lines");const l=[],o=[];let d=initialX,c=0;const p=getBoundValues().xIncr;for(let t=0;t<e.length;t++){let n=[],r=[];propArr.forEach(l=>{null==e[t][l]?(n.push(null),r.push(null)):(c=s-e[t][l]/ratio*a,n.push(c),r.push(e[t][l]))}),xyPlots.push({x:d,y1:n[0],y2:n[1],date:e[t].date,value1:r[0],value2:r[1]}),null!=n[0]&&l.push(`${d}, ${n[0]}`),null!=n[1]&&o.push(`${d}, ${n[1]}`),d+=p}const h=0<propArr.length&&propArr[0].includes("cases")?"dark"===mode?"#54cbf2":"#038ebc":"dark"===mode?"#f44336":"#B13507",u="dark"===mode?"#ffc82a":"#967000";let y=`
        <rect x='${initialX}' y='${0}' width='${n-initialX}' height='${s}' fill='#000' opacity='0'></rect>
        <polyline class='polyline' stroke='${h}' points='${l}'></polyline>
        <polyline class='polyline' stroke='${u}' points='${o}'></polyline>`;r.innerHTML=y,t.appendChild(r)}function getLastNonNull(e,t){let s=e.length-1;for(;null===e[s][t];)s--;return e[s][t]}function makeChartLabels(){const e=_("svgChart"),t=document.createElementNS("http://www.w3.org/2000/svg","g");t.setAttribute("class","chart-labels");const s=xyPlots[xyPlots.length-1].x+10;let n=getLastNonNull(xyPlots,"y1"),a=getLastNonNull(xyPlots,"y2");20>Math.abs(n-a)&&(n>a?a-=20:n-=20);const r=[n,a],l=0<propArr.length&&propArr[0].includes("cases")?"dark"===mode?"#54cbf2":"#038ebc":"dark"===mode?"#f44336":"#B13507",o="dark"===mode?"#ffc82a":"#967000";let d="";for(i=0;i<propArr.length;i++)d+=`<text class='chart-label' x='${s}', y='${Math.max(r[i],10)}' fill="${0===i?l:o}" dominant-baseline='middle' text-anchor='start'>${propTitle[i]}</text>`;t.innerHTML=d,e.appendChild(t)}function appendHoverG(){const e=_("chart"),t=_("svgChart"),s=document.createElementNS("http://www.w3.org/2000/svg","g");s.setAttribute("class","hover-info"),t.appendChild(s);const n=document.createElement("div");n.setAttribute("class","chart-popup"),e.appendChild(n)}function makeChartDiv(){const e=countryPopup.querySelector(".flex-stats-container"),t=document.createElement("div");t.setAttribute("id","chart");t.innerHTML="\n        <div class='chart-header'>\n            <h2>NO DATA</h2>\n            <div class=\"help-tip\">\n                <p>Published by the Oxford Coronavirus Government Response Tracker (OxCGRT), the <strong><em>stringency index</em></strong> measures the severity of the lockdown measures. This metric should not be interpreted as an indication of how appropriate or effective a country\u2019s response was to the pandemic.</p>\n            </div>\n            <div id='chartInfo'>\n                <p></p>\n            </div>\n            <div id='testsCheckBoxWrapper' class='yellow-test'>\n                <input id='testsCheckBox' type='checkbox'></input>\n                <label for='testsCheckBox'>Tests</label>\n            </div>\n            <div class=\"chart-options-wrapper\" class=\"ease-out\">\n                <div id=\"chartDropDown\">\n                    <span class=\"flex-span\" id=\"chartOptionTitle\">New Cases</span>\n                    <span class=\"flex-span bckg-sprite\" id=\"chartOptionArrow\"></span> \n                </div>\n                <div id=\"chartMenu\">\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"new_cases_smoothed\">New Cases</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"new_deaths_smoothed\">New Deaths</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"total_cases\">Total Cases</button>  \n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"total_deaths\">Total Deaths</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"total_cases_per_million\">Cases/Million</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"total_deaths_per_million\">Deaths/Million</button>\n                    <button type=\"button\" class=\"chart-btns\" data-chartprop=\"stringency_index\">Stringency Index</button>\n                </div>\n            </div> \n        </div>\n        <svg id='svgChart' width='100%' height='100%'></svg>",e.appendChild(t)}function updateChartInfo(){const e=_("chart"),t=e.querySelector(".chart-header .help-tip"),s=e.querySelector("h2"),n=_("chartInfo"),a=n.querySelector("p");let r="",l="";if(t.style.display="none",t.style.opacity=0,0<propTitle.length){for(i=0;i<propTitle.length;i++)r=0<i?r+" AND ":r,r+=propTitle[i];propArr[0].includes("smoothed")?l="Daily data is smoothed out using a 7-day rolling average.":propArr[0].includes("stringency")?(l="Scaled to a value from 0 to 100 (100 = strictest).",fadeIn(t)):l="Due to limited testing and challenges in the cause of death, confirmed cases and deaths shown below might be lower."}else r="NO DATA";a.innerText=l,s.innerText=r;const o=_("svgChart"),d=e.querySelector(".chart-header"),c=document.querySelector(".chart-options-wrapper");headerHeight="240px"===c.style.height?d.offsetHeight-210:d.offsetHeight,o.setAttribute("style",`height:calc(100% - ${headerHeight}px)`),o.style.top=headerHeight+"px"}function onChartOptClick(){const e=_("testsCheckBox"),t=this.innerText,s=this.dataset.chartprop;propArr=[],propTitle=[],propArr.push(s),propTitle.push(t);const n=_("testsCheckBoxWrapper");if("stringency_index"===s)e.disabled=!0,n.style.opacity="0.5";else{e.disabled=!1,n.style.opacity="1";const t=!!e.checked;if(t){const e=testsSwitch(s).testProp,t=testsSwitch(s).testTitle;propArr.push(e),propTitle.push(t)}}resetChart();const a=_("chartOptionTitle");a.innerText=t,closeChartDropDown()}function testsSwitch(e){let t="",s="";return"new_cases_smoothed"===e||"new_deaths_smoothed"===e?(t="new_tests_smoothed",s="New Tests"):"total_cases"===e||"total_deaths"===e?(t="total_tests",s="Total Tests"):"total_cases_per_million"===e||"total_deaths_per_million"===e?(t="total_tests_per_thousand",s="Tests/Thousand"):void 0,{testProp:t,testTitle:s}}function onChartCheckBox(){const e=!!this.checked,t=propArr[0];if(e){const e=testsSwitch(t).testProp,s=testsSwitch(t).testTitle;propArr.push(e),propTitle.push(s)}else{const e=propArr.findIndex(e=>e.includes("tests"));propArr.splice(e,1),propTitle.splice(e,1)}resetChart()}function onChartDropDown(){const e=document.querySelector(".chart-options-wrapper");"30px"===e.style.height||""===e.style.height?openChartDropDown():closeChartDropDown()}function openChartDropDown(){const e=_("chartOptionArrow"),t=document.querySelector(".chart-options-wrapper");t.style.height="240px",e.classList.add("transform-rotate")}function closeChartDropDown(){const e=_("chartOptionArrow"),t=document.querySelector(".chart-options-wrapper");t.style.height="30px",e.classList.remove("transform-rotate")}function makeChart(){makePropList(dataHist);updateChartInfo(),makeXYAxis(dataHist),plotData(dataHist),makeChartLabels(),appendHoverG()}function removeChart(){const e=_("chart"),t=_("svgChart");t.querySelectorAll("g").forEach(e=>{t.removeChild(e)});const s=e.querySelector(".chart-popup");e.removeChild(s)}function resetChart(){removeChartListeners(),removeChart(),makeChart(),addChartListeners()}function onChartHover(t){getChartData(t)}function getChartData(t){var e=t.layerX;const s=_("chart"),n=_("svgChart"),a=n.querySelector(".hover-info"),r=s.querySelector(".chart-popup"),l=getBoundValues().xIncr;let o=xyPlots.find(t=>Math.abs(t.x-e)<=l/2);o=o?o:xyPlots[xyPlots.length-1];const d=0<propArr.length&&propArr[0].includes("cases")?"dark"===mode?"#54cbf2":"#038ebc":"dark"===mode?"#f44336":"#B13507",c="dark"===mode?"#ffc82a":"#967000";let p=`<line class='hover-line' x1="${o.x}" x2="${o.x}" y1="${0}" y2="${getBoundValues().yBound}" stroke-width='1px'></line>`,h=null==o.y1?"hidden":"visible";p+=`<circle class='hover-dot' cx="${o.x}" cy="${null==o.y1?0:o.y1}" r="5" fill='${d}' style='visibility:${h};'></circle>`,h=null==o.y2?"hidden":"visible",p+=`<circle class='hover-dot' cx="${o.x}" cy="${null==o.y2?0:o.y2}" r="5" fill='${c}' style='visibility:${h};'></circle>`,a.innerHTML=p,r.innerHTML=popupHtml(o),a.style.display="none",r.style.display="none"}function popupHtml(e){const t=["value1","value2"],s=0<propArr.length&&propArr[0].includes("cases")?"dark"===mode?"#54cbf2":"#038ebc":"dark"===mode?"#f44336":"#B13507",n="dark"===mode?"#ffc82a":"#967000",a=[s,n];let r=`<p class='chart-popup-date'>${formatDate(e.date)}</p>`,l=0;for(i=0;i<propArr.length;i++)if(null!=e[t[i]]){e[t[i]]=999<e[t[i]]?Math.round(e[t[i]]):e[t[i]];let s="New Cases"===propTitle[i]||"New Deaths"===propTitle[i]||"New Tests"===propTitle[i]?"Daily":"Stringency Index"==propTitle[i]?"":"Cumulative";r+=`<div class='chart-popup-wrapper'>   
                    <div class='chart-popup-flex'>
                        <svg width='12px' height='12px'>
                            <circle cx="${5}" cy="${7}" r="5" fill='${a[i]}'></circle>
                        </svg>
                        <p class='chart-popup-text'>${s} ${propTitle[i]}</p>
                    </div>
                    <div class='chart-popup-flex'>
                        <p class='chart-popup-text'>${e[t[i]].commaSplit()}</p>
                    </div>
                </div>`}else l++;return l===propArr.length&&(r+=`<p class='chart-popup-text'>No Data</p>`),r}function onChartMove(t){var e=t.layerX;const s=_("chart"),n=_("svgChart"),a=n.querySelector(".plot-lines"),r=n.querySelector(".hover-info"),l=n.querySelector(".hover-line"),o=n.querySelectorAll(".hover-dot"),d=s.querySelector(".chart-popup");if(t.target.parentNode===a||t.target.parentNode===r){const t=getBoundValues().xIncr;let s=xyPlots.find(s=>Math.abs(s.x-e)<=t/2);s=s?s:xyPlots[xyPlots.length-1],r.style.display="block",d.style.display="block",l.setAttribute("x1",s.x),l.setAttribute("x2",s.x);const n=["y1","y2"];let a=0;o.forEach(e=>{e.setAttribute("cx",s.x),null==s[n[a]]?e.style.visibility="hidden":(e.setAttribute("cy",s[n[a]]),e.style.visibility="visible"),a++}),d.innerHTML=popupHtml(s);const c=e+d.offsetWidth+10;let p=768<window.innerWidth?c>getBoundValues().xBound+20+labelMaxWidth?s.x-d.offsetWidth+15+"px":s.x+25+"px":firstXTextWidth+30+"px";const h=768<window.innerWidth?headerHeight+70+"px":headerHeight+30+"px";d.setAttribute("style",`-o-transform: translate(${p}, ${h}); -moz-transform: translate(${p}, ${h}); -ms-transform: translate(${p}, ${h}); -webkit-transform: translate(${p}, ${h}); transform: translate(${p}, ${h}); display: block;`)}else r.style.display="none",d.style.display="none"}function onChartResize(){resetChart()}function onChartLabelHover(){this.addEventListener("mouseout",onChartLabelOut,!1);const e=_("svgChart"),t=e.querySelector(".plot-lines"),s=t.querySelectorAll("polyline"),n=e.querySelectorAll(".chart-label"),a=this.getAttribute("fill");s.forEach(e=>{e.getAttribute("stroke")!=a&&e.classList.add("stroke-gray")}),n.forEach(e=>{this!=e&&e.classList.add("fill-gray")})}function onChartLabelOut(){const e=_("svgChart"),t=e.querySelector(".plot-lines"),s=t.querySelectorAll("polyline"),n=e.querySelectorAll(".chart-label");s.forEach(e=>{e.classList.remove("stroke-gray")}),n.forEach(e=>{e.classList.remove("fill-gray")}),this.removeEventListener("mouseout",onChartLabelOut)}const svgEl=_("worldMap"),zoomEl=_("gOuter"),VBWidth=2e3,VBHeight=1001,maxZoom=20;var initialScale=0,mouseMove=!1,sideBarState=!0,countryAnim=!1,prevMatrix={};function getWheelDelta(t){const e=-(t.deltaY?t.deltaY:t.wheelDeltaY?t.wheelDeltaY:t.detail);return 0==e%1?Math.pow(1.2,e/360):(t.preventDefault(),Math.pow(10,e/360))}function getCursorPt(t){const e=svgEl.createSVGPoint();return e.x=t.clientX,e.y=t.clientY,e}function setMatrix(e,t){e=e.matrixTransform(zoomEl.getScreenCTM().inverse()),e.x=Math.min(e.x,VBWidth),e.y=Math.min(e.y,VBHeight);const s=svgEl.createSVGMatrix().translate(e.x,e.y).scale(t).translate(-e.x,-e.y);return s}function setCTM(e){const t=window.innerWidth-e.a*VBWidth,s=window.innerHeight-e.a*VBHeight;if(e.e=0<=e.e?0>t?0:t/2:0<t?t:Math.max(e.e,t),e.f=0<=e.f?0>s?0:s/2:0<s?s/2:Math.max(e.f,s),e.a<=maxZoom&&e.a>=initialScale){const t=`matrix(${e.a},${e.b},${e.c},${e.d},${e.e},${e.f})`;zoomEl.setAttributeNS(null,"transform",t)}pathStrokeHandler()}function pathStrokeHandler(){const e=zoomEl.transform.baseVal.getItem(0).matrix.a;for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&pathCountries[t].style.setProperty("--zoom",e)}function zoomHandler(t){const e=getWheelDelta(t),s=getCursorPt(t),n=setMatrix(s,e);setCTM(zoomEl.getScreenCTM().multiply(n))}var tapP,maxScale;function tapZoomHandler(t){countryAnim||(tapP=getCursorPt(t),maxScale=2*zoomEl.transform.baseVal.getItem(0).matrix.a,maxScale=maxScale>maxZoom?maxZoom:maxScale,fadeZoom())}function fadeZoom(){const e=zoomEl.transform.baseVal.getItem(0).matrix.a,t=Math.floor(100*(e/maxScale));if(90>t){const e=setMatrix(tapP,1.05);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadeZoom)}else cancelAnimationFrame}function getPanPos(t){const e=zoomEl.transform.baseVal.getItem(0).matrix,s=svgEl.createSVGPoint();return s.x=t.movementX/e.a,s.y=t.movementY/e.d,s}function setPanMatrix(e){const t=svgEl.createSVGMatrix().translate(e.x,e.y);return t}var trail=svgEl.createSVGPoint();function fadePan(){const e=.06;if(trail.x*=1-e,trail.y*=1-e,0!=Math.floor(Math.abs(trail.x))||0!=Math.floor(Math.abs(trail.y))){const e=setPanMatrix(trail);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadePan)}else cancelAnimationFrame}function onMouseDown(){cancelAnimationFrame(fadePan),trail.x=0,trail.y=0,document.body.addEventListener("mousemove",onMouseMove),document.body.addEventListener("mouseup",onMouseUp),svgEl.addEventListener("mouseleave",onMouseUp,!1)}function onMouseMove(t){mouseMove=!0;const e=getPanPos(t);trail.x=e.x,trail.y=e.y;const s=setPanMatrix(e);setCTM(zoomEl.getScreenCTM().multiply(s))}function onMouseUp(){mouseMove=!1,document.body.removeEventListener("mousemove",onMouseMove),document.body.removeEventListener("mouseup",onMouseUp),svgEl.removeEventListener("mouseleave",onMouseUp),fadePan()}function goToCountry(t){cancelAnimationFrame(fadePan),popup.style.display="none",removePopupListeners();zoomToCountry(t)}function zoomToCountry(t){clearPage(),onCloseSearch(),trail.x=trail.y=touchTrail.x=touchTrail.y=0,getPrevMatrix(),removeZoomTapListeners();const e=t.getBBox(),s=t.getAttribute("data-name"),n=t.getAttribute("data-id");highlightCountry(s);const a=zoomEl.transform.baseVal.getItem(0).matrix,r=Math.min(window.innerWidth-a.a*e.width,window.innerHeight-a.a*e.height),l=Math.sign(r),o=e.x*a.a-(window.innerWidth-e.width*a.a)/2,d=e.y*a.a-(window.innerHeight-e.height*a.a)/2,c=Math.min(Math.min((window.innerHeight-120)/e.height,(window.innerWidth-20)/e.width),maxZoom);panToCountry(a,o,d);const h=-1===l?.85:1.15;setTimeout(function t(){zoomEl.classList.remove("ease-out");const s=zoomEl.transform.baseVal.getItem(0).matrix,n=svgEl.createSVGPoint();n.x=(e.x+e.width/2)*s.a+s.e,n.y=(e.y+e.height/2)*s.d+s.f;const a=zoomEl.getScreenCTM().multiply(setMatrix(n,h));if(-1===l){if(a.a>=c){const e=`matrix(${a.a},${a.b},${a.c},${a.d},${a.e},${a.f})`;zoomEl.setAttributeNS(null,"transform",e),requestAnimationFrame(t)}else cancelAnimationFrame,pathStrokeHandler(),closePopup.addEventListener("mouseup",onClosePopup,!1);}else if(a.a<=c){const e=`matrix(${a.a},${a.b},${a.c},${a.d},${a.e},${a.f})`;zoomEl.setAttributeNS(null,"transform",e),requestAnimationFrame(t)}else cancelAnimationFrame,pathStrokeHandler(),closePopup.addEventListener("mouseup",onClosePopup,!1)},350),setTimeout(()=>{showCountryPopup(s,n)},500)}function highlightCountry(e){for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&(pathCountries[t].getAttribute("data-name")===e?pathCountries[t].classList.add("light-path"):pathCountries[t].classList.add("dark-path"))}function panToCountry(e,t,s){const n=`matrix(${e.a},${e.b},${e.c},${e.d},${-t},${-s})`;zoomEl.classList.add("ease-out"),zoomEl.setAttributeNS(null,"transform",n)}function zoomToCountryNoAnim(t,e){trail.x=trail.y=touchTrail.x=touchTrail.y=0,cancelAnimationFrame(fadePan),e||getPrevMatrix(),removeZoomTapListeners(),removePopupListeners();const s=t.getBBox(),n=t.getAttribute("data-name"),a=t.getAttribute("data-id");highlightCountry(n);const r=Math.min(Math.min((window.innerHeight-120)/s.height,(window.innerWidth-20)/s.width),maxZoom),l=s.x*r-(window.innerWidth-s.width*r)/2,o=s.y*r-(window.innerHeight-s.height*r)/2;zoomEl.setAttributeNS(null,"transform",`matrix(${r},${0},${0},${r},${-l},${-o})`),pathStrokeHandler(),clearPage(),chartOn&&(removeChartListeners(),chartOn=!1),showCountryPopup(n,a),closePopup.addEventListener("mouseup",onClosePopup,!1)}function getPrevMatrix(){const e=zoomEl.transform.baseVal.getItem(0).matrix;prevMatrix.scale=e.a,prevMatrix.x=e.e,prevMatrix.y=e.f,sideBarState=!(0!==sideBar.classList.length&&"transform-y-70"!==sideBar.className&&"transform-y-140"!==sideBar.className)}function centerMap(){const e=window.innerWidth-initialScale*VBWidth,t=window.innerHeight-initialScale*VBHeight,s=zoomEl.transform.baseVal.getItem(0).matrix,n=svgEl.createSVGPoint();n.x=e/2,n.y=t/2;const a=setMatrix(n,.9);setCTM(zoomEl.getScreenCTM().multiply(a)),.1<s.a-initialScale?(removePopupListeners(),removeZoomTapListeners(),requestAnimationFrame(centerMap)):(onResize(),addHeader(),cancelAnimationFrame,removeZoomTapListeners(),addZoomTapListeners(),removePopupListeners(),addPopupListeners())}function onResize(){const e=window.innerWidth/VBWidth,t=window.innerHeight/VBHeight;initialScale=Math.min(e,t),prevMatrix.scale=initialScale;const s=Math.abs((window.innerWidth-initialScale*VBWidth)/2),n=Math.abs((window.innerHeight-initialScale*VBHeight)/2);prevMatrix.x=s,prevMatrix.y=n;const a=`matrix(${initialScale}, 0, 0, ${initialScale}, ${s}, ${n})`;zoomEl.setAttributeNS(null,"transform",a),768<window.innerWidth?(addHeader(),sideBar.className="",toggle.style.opacity=0,resultsTransform()):onCloseSearch(),pathStrokeHandler(),onLegendResize(globalRangeList)}onResize(),window.addEventListener("resize",onResize,!1);