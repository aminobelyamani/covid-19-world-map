function _(e){return document.getElementById(e)}var vh,pathCountries=[],countryCodes=[],dataSVG=[],usSVG=[],dataAPI=[],dataVacc=[],countriesList=[],usData=[],globalRangeList=[],prop="casesPerMil",currentTitle="Cases/Million";const rangeLimit=6;var switchValue="cases",mode="dark",onMaps=!0,dropDownOn=!1,chartOn=!1,usOn=!1,html=_("html"),header=_("header"),headerTitle=_("headerTitle"),loader=_("loader"),mobileNav=_("mobileNav"),hamburger=_("hamburger"),mapDiv=_("mapDiv"),worldMap=_("worldMap"),about=_("about"),globalInstructions=_("globalInstructions"),currentDataWrapper=_("currentDataWrapper"),globalHelpTip=_("globalHelpTip"),currentData=_("currentData"),toggleDark=_("toggleDark"),centerBtn=_("centerBtn"),keyBtn=_("keyBtn"),keys=_("keys"),legendHelpTip=_("legendHelpTip"),closeKeys=_("closeKeys"),keyTitle=_("keyTitle"),legendColors=_("legendColors"),toggle=_("toggleSideBar"),closeDash=_("closeDash"),sideBar=_("sideBar"),timeStamp=_("timeStamp"),switchWrapper=_("switchWrapper");const switchToggle=_("switchSVG");var is_touch_device,switchG=_("switchG"),switchCircle=_("switchCircle"),optionsDiv=_("optionsDiv"),dropDown=_("dropDown"),dropDownTitle=_("dropDownTitle"),casesMenu=_("casesMenu"),testsMenu=_("testsMenu"),deathsMenu=_("deathsMenu"),vaccMenu=_("vaccMenu"),statsWrapper=_("statsWrapper"),searchWrapper=_("searchWrapper"),searchIcon=_("searchIcon"),searchInput=_("searchInput"),closeSearch=_("closeSearch"),resultsWrapper=_("resultsWrapper"),countryPopup=_("countryPopup"),closePopup=_("closePopup"),popup=_("popup");let socket;var onLoad=!0,onUsURL=!1;function onPageLoad(){statsWrapper.scrollTop=0,_("overlay").style.display="none",sideBar.style.visibility="visible",sideBar.className="",toggle.style.opacity=0,currentData.innerText=currentTitle,currentDataWrapper.style.visibility="visible",fadeOut(loader),fadeOut(_("overlayMsg")),is_touch_device="ontouchstart"in document.documentElement,is_touch_device?(switchToggle.addEventListener("touchend",onSwitchTap,!1),touchEvents(),!onUsURL&&addZoomTapListeners(),removeHover()):(switchToggle.addEventListener("mouseup",onSwitchClick,!1),!onUsURL&&addZoomTapListeners()),openLegend(),onUsURL||addPopupListeners(),showGlInstructions(),globalHelpTipHandler(),legendHelpTipHandler()}function showGlInstructions(){if(is_touch_device&&onMaps){globalInstructions.classList.remove("transform-y-260");const e=globalInstructions.querySelector("p");globalInstructions.style.display="block";const t=usOn?"state":"country";e.innerText=`Tap ${t} for info, press and hold for full ${t} profile.`}}async function onDOMLoaded(){socket=io(),socketListeners(socket),socket.emit("getCountryCodes"),dataSVG=await parseSVG(),pathStrokeHandler(),fetch("https://api.apify.com/v2/key-value-stores/SmuuI0oebnTWjRTUh/records/LATEST?disableRedirect=true").then(e=>{if(e.ok)return e.json()}).then(async e=>{if(!e)socket.emit("getFetchFromServer"),onPageLoad();else if(dataAPI=e.regionData,countriesList=await getData(dataAPI),countriesList=await calcData(countriesList),timeStamp.innerText=`Updated at ${formatTime()} EST`,window.location.pathname.includes("/usa/")){onUsURL=!0,onPageLoad();const e=await onMenuBtn("us");e&&(socket.emit("getVaccineData"),socket.emit("getUsData"))}else onPageLoad(),execProp(),loadUrl(),socket.emit("getVaccineData"),socket.emit("getUsData")}),setInterval(()=>{fetchAPI()},3e5)}function switchUrl(e){let t="";return"/reunion"===e?t="r\xE9union":"/curacao"===e?t="cura\xE7ao":"/timor-leste"===e?t="timor-leste":"/guinea-bissau"===e?t="guinea-bissau":"/s-korea"===e?t="s. korea":"/st-vincent-grenadines"===e?t="st. vincent grenadines":void 0,t}function loadUrl(){var e=window.location.pathname;const t=e.includes("/usa/")?5:1;e="/reunion"===e||"/curacao"===e||"/timor-leste"===e||"/guinea-bissau"===e||"/s-korea"===e||"/st-vincent-grenadines"===e?switchUrl(e):e.replace(/-/g," ").slice(t),e=e.replace("/",""),1<e.length&&("about"==e?onMenuBtn("about"):loadCountry(e,!0))}window.onpopstate=function(){window.location.replace("/")};function loadCountry(e,t){onUsURL=!1,clearPage(),clearHighlights();const n=usOn?usSVG:dataSVG,a=n.find(t=>t.path.getAttribute("data-name").toLowerCase()===e.toLowerCase());zoomToCountryNoAnim(a.path,t)}function socketListeners(e){e.on("getFetchFromServer",t=>{dataAPI=t.regionData,e.emit("getVaccineData"),e.emit("getUsData")}),e.on("getCountryCodes",e=>{countryCodes=e}),e.on("getLatestData",e=>{if(e.latest&&closePopup.getAttribute("data-country")===e.country){const t=getYestData(e),n=t.perc,a=t.percDeaths;n&&0!=n&&addPercNew(n),a&&0!=a&&addPercNew(a,!0)}}),e.on("getLatestWorldData",e=>{if(e.latest){const t=!("World"!==e.country),n=!("USA"!==e.country),a=getYestData(e,t,n),r=a.perc,s=a.percDeaths;"cases"===switchValue?r&&0!=r&&addPercNewWorld(r):"deaths"===switchValue&&s&&0!=s&&addPercNewWorld(s)}}),e.on("getVaccineData",async e=>{e&&(dataVacc=e,countriesList=await getData(dataAPI),countriesList=await calcData(countriesList),timeStamp.innerText=`Updated at ${formatTime()} EST`,execProp())}),e.on("getUsData",async e=>{e&&(onLoad&&(_("mapLoader")&&(fadeOut(_("mapLoader")),mapDiv.removeChild(_("mapLoader"))),onLoad=!1),usData=await calcUsData(e),usData=await calcData(usData),execProp(),onUsURL&&loadUrl())}),e.on("getCountryData",e=>{e?closePopup.getAttribute("data-alpha2").toLowerCase()===e.country.toLowerCase()&&onSocketChart(e):onSocketNoChart()}),e.on("getStateData",e=>{e?closePopup.getAttribute("data-country").toLowerCase()===e.country.toLowerCase()&&onSocketChart(e):onSocketNoChart()})}function onSocketChart(e){if(e.data){const t=_("chart");_("chartLoader")&&fadeOut(_("chartLoader")),t.style.minHeight="350px",t.style.height="calc(calc(100 * var(--vh)) - 60px)",dataHist=e.data,propArr=["new_cases_smoothed"],currentProp="new_cases_smoothed",propTitle=["Daily Cases"],chartArray=createChartArray(dataHist,currentProp),chartOn&&(removeChartListeners(),removeGlobalChartListeners()),makeChartDiv(),addGlobalChartListeners(),1<chartArray.length?(makeChart(),addChartListeners(),chartOn=!0):onNoChartData()}else onSocketNoChart()}function onSocketNoChart(){chartOn=!1;const e=_("chart");_("chartLoader")&&fadeOut(_("chartLoader")),e.innerHTML="<h2 class='chart-no-data yellow-test'>NO CHART DATA</h2>"}async function execProp(e){const t=usOn?usData:countriesList;buttonsHandler(prop),e||worldData(dataAPI),globalRangeList=await getMinMax(t,prop),makeLegend(globalRangeList),matchData(t,prop,globalRangeList),showSortedList(t)}function calcUsData(e){return new Promise(t=>{const n=[];e.forEach(e=>{e.partiallyVaccinated=Math.abs((e.peopleVaccinated||0)-(e.peopleFullyVaccinated||0)),n.push(e)}),t(n)})}function reassignProp(){execProp(),statsWrapper.scrollTop=0,globalHelpTipHandler();const e=usOn?"Search by State":"Search by Country";searchInput.setAttribute("placeholder",e)}function parseSVG(){return new Promise(e=>{pathCountries=zoomEl.querySelectorAll("path");const t=[];for(let n=0;n<pathCountries.length;n++)if(pathCountries[n].getAttribute("data-id")){let e=pathCountries[n].getAttribute("id").toLowerCase(),a=pathCountries[n].getAttribute("data-name");t.push({path:pathCountries[n],id:e,country:a})}e(t)})}function fetchAPI(){fetch("https://api.apify.com/v2/key-value-stores/SmuuI0oebnTWjRTUh/records/LATEST?disableRedirect=true").then(e=>{if(e.ok)return e.json()}).then(async e=>{e?(dataAPI=e.regionData,socket.emit("getVaccineData"),socket.emit("getUsData")):socket.emit("getFetchFromServer")})}function getData(e,t){return new Promise(n=>{const a=[],r=t?usSVG:dataSVG;r.forEach(t=>{const n=e.findIndex(e=>e.country===t.country);if(-1!=n){e[n].alpha2=t.id;const r=dataVacc.findIndex(e=>e.country===t.id);e[n].totalVaccinations=-1==r?0:dataVacc[r].totalVaccinations,e[n].peopleVaccinated=-1==r?0:dataVacc[r].peopleVaccinated,e[n].peopleFullyVaccinated=-1==r?0:dataVacc[r].peopleFullyVaccinated,e[n].partiallyVaccinated=-1==r?0:Math.abs((dataVacc[r].peopleVaccinated||0)-(dataVacc[r].peopleFullyVaccinated||0)),e[n].vaccines=-1==r?"Not Reported":dataVacc[r].vaccines,a.push(e[n])}}),n(a)})}function calcData(e){return new Promise(t=>{const n=[],a=["totalDeaths","totalRecovered","activeCases"];var r=[];e.forEach(e=>{a.forEach((t,n)=>{r[n]=null==e[t]?null:roundVal(100*(e[t]/e.totalCases),1)});const t=100*(e.newCases/e.population),s=100*(e.newDeaths/e.population),o=100*(e.partiallyVaccinated/e.population),l=100*(e.peopleFullyVaccinated/e.population);e.newCasesPerMil=roundVal(1e4*t,1),e.newDeathsPerMil=roundVal(1e4*s,1),e.percDeaths=r[0],e.percRecovered=r[1],e.percActive=r[2],e.percCritical=null===e.seriousCritical?null:null!=e.activeCases&&0!=e.activeCases?roundVal(100*(e.seriousCritical/e.activeCases),1):0;e.percVacc=roundVal(o,1),e.percFullyVacc=roundVal(l,1),n.push(e)}),t(n)})}function totalOfProp(e){let t=0;return countriesList.forEach(n=>{t+=n[e]}),t}function worldData(e){const t=usOn?"USA":"World",n=e.find(e=>e.country===t),a=usOn?n.population:totalOfProp("population"),r=usOn?n.newCasesPerMil:roundVal(1e6*(n.newCases/a),1),s=usOn?n.newDeathsPerMil:roundVal(1e6*(n.newDeaths/a),1),o=usOn?n.totalTests:totalOfProp("totalTests"),l=usOn?n.partiallyVaccinated:totalOfProp("partiallyVaccinated"),c=usOn?n.peopleFullyVaccinated:totalOfProp("peopleFullyVaccinated"),d=usOn?n.totalVaccinations:totalOfProp("totalVaccinations");n.totalTests=o,n.totalPop=a,n.totalPartialVacc=l,n.totalPplFlVacc=c,n.totalVacc=d;const p=roundVal(100*(n.totalRecovered/n.totalCases),1),u=roundVal(100*(n.activeCases/n.totalCases),1),h=roundVal(100*(n.totalDeaths/n.totalCases),1),y=roundVal(100*(n.seriousCritical/n.activeCases),1),m=roundVal(100*(n.totalPartialVacc/n.totalPop),1),f=roundVal(100*(n.totalPplFlVacc/n.totalPop),1);let g=_("worldStats");const v=usOn?"USA":"World",b=usOn?"US":"Global";"cases"===switchValue?(g.innerHTML=`
            <h2 class='global-cases-title'>${b} Stats</h2>
            <p class='stats white'>${n.casesPerMil.commaSplit()}</p>
            <p class='stats-titles gray'>Cases/Million</p>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${r.commaSplit()}</p>
                    <p class='stats-titles gray'>New Cases/Million</p>
                </div>
                <div class='flex-stat' style='width:60px; height:70px;margin:0;' title='Percent Daily Change'></div>
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${n.totalRecovered.commaSplit()}</p>
                    <p class='stats-titles gray'>Total Recovered</p>
                </div>
                ${getPiePerc(p,"totalRecovered",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${n.activeCases.commaSplit()}</p>
                    <p class='stats-titles gray'>Active Cases</p>
                </div>
                ${getPiePerc(u,"activeCases",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${n.seriousCritical.commaSplit()}</p>
                    <p class='stats-titles gray'>Critical Cases</p>
                </div>
                ${getPiePerc(y,"seriousCritical",!0)}
            </div>
            <p class='stats white'>${n.totalCases.commaSplit()}</p>
            <p class='stats-titles gray'>Confirmed Cases</p>`,socket.emit("getLatestWorldData",v)):"tests"===switchValue?g.innerHTML=`
            <h2 class='global-tests-title'>${b} Stats</h2>
            <p class='stats white'>${n.totalTests.commaSplit()}</p>
            <p class='stats-titles gray'>Total Tests</p>
            <p class='stats white'>${n.totalPop.commaSplit()}</p>
            <p class='stats-titles gray'>Population</p>`:"vaccines"===switchValue?g.innerHTML=`
            <h2 class='global-vacc-title'>${b} Stats</h2>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${n.totalPartialVacc.commaSplit()}</p>
                    <p class='stats-titles gray'>People Partially Vaccinated</p>
                </div>
                ${getPiePerc(m,"percVacc",!0)}
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${n.totalPplFlVacc.commaSplit()}</p>
                    <p class='stats-titles gray'>People Fully Vaccinated</p>
                </div>
                ${getPiePerc(f,"percFullyVacc",!0)}
            </div>
            <p class='stats white'>${n.totalVacc.commaSplit()}</p>
            <p class='stats-titles gray'>Total Vaccinations</p>`:(g.innerHTML=`
            <h2 class='global-deaths-title'>${b} Stats</h2>
            <p class='stats white'>${n.deathsPerMil.commaSplit()}</p>
            <p class='stats-titles gray'>Deaths/Million</p>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${s.commaSplit()}</p>
                    <p class='stats-titles gray'>New Deaths/Million</p>
                </div>
                <div class='flex-stat' style='width:60px; height:70px;margin:0;' title='Percent Daily Change'></div>
            </div>
            <div class='worldStats-flex'>
                <div>
                    <p class='stats white'>${n.totalDeaths.commaSplit()}</p>
                    <p class='stats-titles gray'>Total Deaths</p>
                </div>
                ${getPiePerc(h,"totalDeaths",!0)}
            </div>`,socket.emit("getLatestWorldData",v))}function buttonsHandler(e){const t=toggleSwitchCases(switchValue).btns,n=document.querySelectorAll(t),a=toggleSwitchCases(switchValue).color;for(let t=0;t<n.length;t++)n[t].dataset.prop===e?(n[t].style.backgroundColor=a,n[t].style.color="#000"):(n[t].style.backgroundColor=bckColorLDM,n[t].style.color=colorLDM);currentData.innerText=dropDownTitle.innerText=currentTitle,keyTitle.innerText=rawTotalSwitch(e).title}function getMinMax(e,t){return new Promise(n=>{const a=mapData(e,t);var r="casesPerMil"==t?a[1]:Math.max.apply(null,a),s=1<Math.min.apply(null,a.filter(Boolean))?1:Math.min.apply(null,a.filter(Boolean));const o=s.countDecimals();s=1>s?1/Math.pow(10,o):s;const l="percRecovered"===t||"percActive"===t||"percCritical"===t||"percVacc"===t||"percFullyVacc"===t?getPercRangeList(r,s):getRangeList(r,s);n(l)})}function mapData(e,t){const n=e.map(e=>(e[t]=0>e[t]?0:e[t],e[t]));return n.sort((e,t)=>e<t?1:-1)}function getPercRangeList(e,t){if(0===e)return[];const n=[],a=1>t?5:6;e=1<=Math.ceil(e/a)?Math.ceil(e/a):1;let r=t;for(let a=0;a<rangeLimit;a++)n.push(r),r=1>r?1:1===r&&2<=e?r+(e-1):r+e;return n}function getRangeList(e,t){const n=[];for(var a,r=0;r<rangeLimit;)a=0|Math.log(e)*Math.LOG10E+1,e=3>=a&&1===r?Math.floor(e):Math.floor(e/Math.pow(10,a-1))*Math.pow(10,a-1),1<=e?(5===r&&(e=t),n.push(e)):1>t&&(n.push(t),r=rangeLimit),e=5>=a&&0===r||"percDeaths"===prop?e/2:e==Math.ceil((e+1)/Math.pow(10,a+1))*Math.pow(10,a-1)?e/10:Math.ceil((e+1)/Math.pow(10,a+1))*Math.pow(10,a-1),r++;return n.reverse(),n}function changeLegendColors(e){const t=legendColors.querySelectorAll(".color"),n=toggleSwitchCases(e).colors.reverse();for(let a=0;a<t.length-1;a++)t[a].style.backgroundColor=n[a]}function makeLegend(e){const t=keys.querySelectorAll(".data-range"),n=legendColors.querySelectorAll(".color");for(let n=0;n<t.length;n++)t[n].classList.add("no-display");for(let t=0;t<n.length;t++)n[t].classList.add("no-display"),n[t].style.borderTopRightRadius="0px",n[t].style.borderTopLeftRadius="0px",n[t].style.borderBottomRightRadius="0px";for(let a=1;3>a;a++)t[t.length-a].classList.remove("no-display"),n[n.length-a].classList.remove("no-display");onLegendResize(e)}function onLegendResize(e){const t=keys.querySelectorAll(".data-range"),n=legendColors.querySelectorAll(".color");t[t.length-1].innerText=768>=window.innerWidth?"No Data":"No Reported Data",0===e.length&&(n[n.length-2].style.borderTopRightRadius="3px",768>=window.innerWidth?n[n.length-2].style.borderBottomRightRadius="3px":n[n.length-2].style.borderTopLeftRadius="3px");for(let a=0;a<e.length;a++){const r=t.length-(3+a),s=e[a].countDecimals(),o=1>=e[a]?0:"newCasesPerMil"===prop||"percRecovered"===prop||"percActive"===prop||"percCritical"===prop||"newDeathsPerMil"===prop||"percDeaths"===prop||"percVacc"===prop||"percFullyVacc"===prop?.1:1,l=1>e[a]&&1===e[a+1]?1/Math.pow(10,s):0;t[r].classList.remove("no-display"),n[r].classList.remove("no-display"),a==e.length-1?(n[r].style.borderTopRightRadius="3px",t[r].firstElementChild.innerText=`> ${e[a].commaSplit()}`,768>=window.innerWidth?n[r].style.borderBottomRightRadius="3px":n[r].style.borderTopLeftRadius="3px"):t[r].firstElementChild.innerText=768>=window.innerWidth?`${e[a].commaSplit()}`:`${(e[a]+o).commaSplit()} – ${(e[a+1]-l).commaSplit()}`}const a=n[n.length-2].getBoundingClientRect().width,r=768>=window.innerWidth?-(a/2+.5)+"px":"0px";for(let n=0;n<t.length;n++)t[n].style.width=768>=window.innerWidth?`${a}px`:"auto",n!=t.length-1&&t[n].style.setProperty("--trans",r)}function matchData(e,t,n){for(let a=0;a<pathCountries.length;a++)if(pathCountries[a].getAttribute("data-name")){let r=pathCountries[a].getAttribute("data-name");const s=e.findIndex(e=>e.country===r);if(-1!=s){const r=e[s][t];pathCountries[a].style.fill=0<=r&&null!=r?val2color(r,n):"#9c9c9c"}else pathCountries[a].style.fill="#9c9c9c"}}function val2color(e,t){const n=toggleSwitchCases(switchValue).colors;let a="";return 0===t.length||0===e?n[0]:(t.forEach((r,s)=>{0===s?e>=r&&e<=t[s+1]&&(a=n[s+1]):s===t.length-1?e>t[t.length-1]&&(a=n[s+1]):e>r&&e<=t[s+1]&&(a=n[s+1])}),a)}function sortList(e,t){t||(t=prop);var n=[];e.forEach(e=>{null!=e[t]&&(e[t]=0>e[t]?0:e[t],n.push(e))}),n.sort((e,n)=>e[t]<n[t]?1:-1);let a=0;return n.forEach((e,r)=>{a=0<r?n[r][t]===n[r-1][t]?a:a+1:a+1,e.rank=a}),n}function showSortedList(e){const t=toggleSwitchCases(switchValue).color,n=_("worldList");let a="";const r=usOn?usSVG:dataSVG;sortList(e).forEach(e=>{const t=r.find(t=>t.country===e.country).id,n="ic"===t?`/images/ic.png`:"us-dc"===t?`/images/us-dc.png`:`https://flagcdn.com/60x45/${t}.png`;a+=`
            <div class='stats-flex' data-country='${e.country}'>
                <p class='inline-count'>${e.rank}</p>
                <div class='bckg-img inline-flag' style='background-image:url(${n});'></div>
                <p class='inline-p'>${e.country}</p>
                <p class='inline-stat'>${e[prop].commaSplit()}</p>
            </div> `});const s=rawTotalSwitch(prop).title,o=usOn?"US Ranks":"Global Ranks";n.innerHTML=usOn&&"percCritical"===prop?"":`
        <h2 id='rankTitle' class='global-cases-title' style='color:${t};'>${o}</h2>
        <p class='ranks-title gray'>${s}</p>
        ${a}`}worldList.addEventListener("mouseup",function(t){if(t=t||window.event,"stats-flex"===t.target.parentNode.className){let e=t.target.parentNode.dataset.country;loadCountry(e,!1)}});function addPopupListeners(){countryAnim=!1;for(let e=0;e<pathCountries.length;e++)pathCountries[e].getAttribute("data-name")&&(is_touch_device||pathCountries[e].addEventListener("mouseover",pathHover,!1));is_touch_device||document.addEventListener("mousemove",pathMove,!1)}function removePopupListeners(){countryAnim=!0;for(let e=0;e<pathCountries.length;e++)pathCountries[e].getAttribute("data-name")&&(is_touch_device||pathCountries[e].removeEventListener("mouseover",pathHover));is_touch_device||document.removeEventListener("mousemove",pathMove),popup.style.display="none"}function onPathClick(){if(!mouseMove){cancelAnimationFrame(fadeZoom);let e=this.getAttribute("data-name");const t=usOn?usData:countriesList;t.find(t=>t.country===e)&&goToCountry(this)}}function pathHover(){const e=usOn?usData:countriesList;if(this.addEventListener("mouseup",onPathClick,!1),this.addEventListener("mouseout",pathNoHover,!1),0!=e.length&&""!=prop){let e=this.getAttribute("data-name");getPopupInfo(e)}}function rawTotalSwitch(e){let t,n,a;return"casesPerMil"===e?(t="totalCases",n="Cases/Million",a=""):"newCasesPerMil"===e?(t="newCases",n="New Cases/Million",a=""):"percRecovered"===e?(t="totalRecovered",n="% Recovered",a=""):"percActive"===e?(t="activeCases",n="% Active",a=""):"percCritical"===e?(t="seriousCritical",n="% Critical",a=""):"deathsPerMil"===e?(t="totalDeaths",n="Deaths/Million",a=""):"newDeathsPerMil"===e?(t="newDeaths",n="New Deaths/Million",a="red"):"percDeaths"===e?(t="totalDeaths",n="Case Fatality Rate",a="red"):"testsPerMil"===e?(t="totalTests",n="Tests/Million",a="yellow-test"):"totalTests"===e?(t="totalTests",n="Total Tests",a=""):"population"===e?(t="population",n="Population",a=""):"totalVaccinations"===e?(t="totalVaccinations",n="Total Vaccinations",a="green"):"percVacc"===e?(t="partiallyVaccinated",n="% Partially Vaccinated",a="green"):"percFullyVacc"===e?(t="peopleFullyVaccinated",n="% Fully Vaccinated",a="green"):void 0,{totalProp:t,title:n,colorClass:a}}function getPopupInfo(e){let t="",n="",a="";const r=usOn?usSVG:dataSVG,s=r.find(t=>t.country===e).id,o="ic"===s?`/images/ic.png`:"us-dc"===s?`/images/us-dc.png`:`https://flagcdn.com/h40/${s}.png`,l=usOn?usData:countriesList,c=sortList(l).find(t=>t.country===e);if(c){const e=c.rank,r=c[prop].commaSplit(),s=rawTotalSwitch(prop).totalProp,o=rawTotalSwitch(prop).title,l=c[s].commaSplit();t=`
            <div class='popup-flex'>
                <p class='popup-small gray'>${o}</p><p class='popup-big white'>${r}</p>
            </div>`,n=`
            <div class='popup-flex'>
                <p class='popup-small gray'>Rank</p><p class='popup-big white'>${e}</p>
            </div>`,a="testsPerMil"===prop||"totalTests"===prop||"population"===prop||"totalVaccinations"===prop?"":`
            <div class='popup-flex'>
                <p class='popup-small gray'>Raw Total</p><p class='popup-big white'>${l}</p>
            </div>`}else t="<p class='popup-small yellow'>No Reported Data</p>";popup.innerHTML=`
        <div class='flag bckg-img' style='background-image:url(${o});'></div>
        <p class='popup country white'>${e}</p>
        ${t}
        ${n}
        ${a}`}function pathMove(t){if(mouseMove)return void(popup.style.display="none");var n,a,r;if(t=t||window.event,is_touch_device?(t.pageX=t.center.x,t.pageY=t.center.y):null==t.pageX&&null!=t.clientX&&(n=t.target&&t.target.ownerDocument||document,a=n.documentElement,r=n.body,t.pageX=t.clientX+(a&&a.scrollLeft||r&&r.scrollLeft||0)-(a&&a.clientLeft||r&&r.clientLeft||0),t.pageY=t.clientY+(a&&a.scrollTop||r&&r.scrollTop||0)-(a&&a.clientTop||r&&r.clientTop||0)),t.target.parentNode===zoomEl){popup.style.display="block";const e=t.pageX+popup.offsetWidth+10,n=t.pageY+popup.offsetHeight,a=e>window.innerWidth?`${Math.max(t.pageX-popup.offsetWidth-5,0)}px`:`${t.pageX+5}px`,r=n>window.innerHeight?`${Math.max(t.pageY-popup.offsetHeight-5,0)}px`:`${t.pageY+5}px`;popup.style.msTransform=`translate(${a}, ${r})`,popup.style.webkitTransform=`translate(${a}, ${r})`,popup.style.MozTransform=`translate(${a}, ${r})`,popup.style.OTransform=`translate(${a}, ${r})`,popup.style.transform=`translate(${a}, ${r})`}else popup.style.display="none"}function pathNoHover(){this.removeEventListener("mouseup",onPathClick),this.removeEventListener("mouseout",pathNoHover)}function resultsTransform(){resultsWrapper.style.width=`${getOffsets(searchWrapper).width}px`,resultsWrapper.style.msTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.webkitTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.MozTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.OTransform=`translateX(${getOffsets(searchWrapper).left}px)`,resultsWrapper.style.transform=`translateX(${getOffsets(searchWrapper).left}px)`}function cleanUrl(e){return"R\xE9union"!=e&&"Cura\xE7ao"!=e?(e=e.replace(/\s/g,"-").toLowerCase(),e=e.replace(/[^a-zA-Z/-]/g,"").toLowerCase(),e):"R\xE9union"===e?"reunion":"Cura\xE7ao"===e?"curacao":void 0}function replaceURL(e){const t=`${e} | COVID-19 WORLD-MAP`,n=cleanUrl(e),a=usOn?`/usa/${n}`:`/${n}`;window.history.pushState(a,t,a),document.title=t}async function showCountryPopup(e,t){replaceURL(e),onMaps=!1;let n="us"===t.toLowerCase()?`<button class="us-btn" onMouseUp="onMenuBtn('us');">50 STATE MAP</button>`:"";countryPopup.scrollTo(0,0),countryPopup.classList.remove("transform"),closePopup.style.visibility="visible",closePopup.style.marginLeft="-5px",closePopup.setAttribute("data-alpha2",t),closePopup.setAttribute("data-country",e),setTimeout(()=>{resultsTransform()},300);const a=usOn?["newCasesPerMil","newDeathsPerMil","percDeaths","percRecovered","percActive","testsPerMil","percVacc","percFullyVacc","totalVaccinations"]:["newCasesPerMil","newDeathsPerMil","percDeaths","percRecovered","percActive","percCritical","testsPerMil","percVacc","percFullyVacc","totalVaccinations"],r=usOn?["Daily New Cases","Daily New Deaths","Case Fatality Rate","Recovered","Active","Tests","Partially Vaccinated","Fully Vaccinated","Vaccinations"]:["Daily New Cases","Daily New Deaths","Case Fatality Rate","Recovered","Active","Critical","Tests","Partially Vaccinated","Fully Vaccinated","Vaccinations"],s=usOn?usSVG:dataSVG,o=s.find(t=>t.country===e).id,l="ic"===o?`/images/ic.png`:"us-dc"===o?`/images/us-dc.png`:`https://flagcdn.com/h240/${o}.png`;let c,d=[];const u=usOn?usData:countriesList;["casesPerMil","deathsPerMil","population"].forEach(t=>{const n=sortList(u,t);c=n.find(t=>t.country===e),d.push(c.rank)});var h="";a.forEach((e,t)=>{const n=rawTotalSwitch(e).title,a=rawTotalSwitch(e).totalProp,s=rawTotalSwitch(e).colorClass,o="totalVaccinations"!==e||usOn?"":"stats-column-flex-100",l=dropDownSwitch(e);h+=`
            <div class='stats-column-flex ${o}'>
                <button class="help-tip-stats help-tip"><p>${l}</p></button>
                <p class='prop-title ${s}'>${r[t]}</p>
                ${getRecord(c.country,e,n,a)}
            </div>`}),countryPopup.innerHTML=`
            <div id='countryWrapper'>
                <div class='country-container'>
                    ${n}
                    <div class='flag-big bckg-img' style='background-image:url(${l})'></div>
                    <p class='country-big'>${c.country}</p>
                    <p class='stats'>${c.population.commaSplit()}</p>
                    <p class='stats-titles dark-gray'>Population</p>
                </div>
                <div class='stats-column'>
                    <p class='prop-title-main blue'>Cases</p>
                    <p class='stats blue'>${c.casesPerMil.commaSplit()}</p>
                    <p class='stats-titles white'>Cases/Million</p>
                    <p class='stats blue'>${d[0]}</p>
                    <p class='stats-titles white'>Rank</p>
                    <p class='stats dark-gray'>${c.totalCases.commaSplit()}</p>
                    <p class='stats-titles dark-gray'>Raw Total</p>
                </div>
                <div class='stats-column'>
                    <p class='prop-title-main red'>Deaths</p>
                    <p class='stats red'>${c.deathsPerMil.commaSplit()}</p>
                    <p class='stats-titles white'>Deaths/Million</p>
                    <p class='stats red'>${d[1]}</p>
                    <p class='stats-titles white'>Rank</p>
                    <p class='stats dark-gray'>${c.totalDeaths.commaSplit()}</p>
                    <p class='stats-titles dark-gray'>Raw Total</p>
                </div>
            </div>
            <div class='flex-stats-container'>
                ${h}
                <div id="chart"></div>
            </div>`;const y=await dynLoader("chartLoader");y?(_("chart").appendChild(y),fadeIn(_("chartLoader"))):alert("Network Error: Check your internet connection");const m={alpha2:t,country:e,usOn:usOn};socket.emit("getLatestData",m),usOn?socket.emit("getStateData",e):socket.emit("getCountryData",t),setTimeout(()=>{addHeader()},300),countryPopup.addEventListener("scroll",onCountryPopupScroll,!1)}function onCountryPopupScroll(){768>=window.innerWidth&&addHeader()}function getYestData(e,t,n){const a=!usOn||n?countriesList:usData,r=[],s=t?dataAPI.find(e=>"World"===e.country):sortList(a,"newCases").find(t=>t.country===e.country);return["newCases","newDeaths"].forEach(t=>{const n=0<e.latest[t]?e.latest[t]:1;let a=100*((s[t]-(e.latest[t]||0))/n);a=roundVal(a,2),r.push(a)}),{perc:r[0],percDeaths:r[1]}}function addPercNew(e,t){const n=t?2:1,a=countryPopup.querySelector(`.flex-stats-container .stats-column-flex:nth-child(${n})`);if(5===a.childElementCount){const t=document.createElement("div");t.setAttribute("class","flex-stat"),t.setAttribute("style","opacity:0;");const n=1===Math.sign(e)?"dark"===mode?"#f6584C":"#B13507":"dark"===mode?"#6dff71":"#209222",r=-1===Math.sign(e)?"\u25BC":"\u25B2",s=1===Math.sign(e)?"+":"";t.innerHTML=`
        <p class='stats' style='color: ${n};font-size:1em;'>${r}</p>
        <p class='stats-titles' style='color: ${n};'>${s+e}%</p>`,a.appendChild(t),fadeIn(t,!0)}}function addPercNewWorld(e){const t=worldStats.querySelectorAll(`.worldStats-flex`)[0];if(t){const n=t.querySelector(".flex-stat");if(n){n.style.opacity=0;const t=1===Math.sign(e)?"#f6584C":"#6dff71",a=-1===Math.sign(e)?"\u25BC":"\u25B2",r=1===Math.sign(e)?"+":"";n.innerHTML=`
            <p class='stats' style='color: ${t}; font-size:1em;'>${a}</p>
            <p class='stats-titles' style='color: ${t};'>${r+e}%</p>`,fadeIn(n,!0)}}}function getPiePerc(e,t,n){const a=n?25:30,r=n?118:141,s=n?157:188,o=n?2:5,l=n?"width:60px; height:70px; margin-top:0;":"",c="totalRecovered"===t||"percRecovered"===t||"percVacc"===t||"percFullyVacc"===t?"dark"===mode||n?"#f6584C":"#B13507":"dark"===mode||n?"#6dff71":"#209222",d="#f6584C"===c||"#B13507"===c?"dark"===mode||n?"#6dff71":"#209222":"dark"===mode||n?"#f6584C":"#B13507",p="percCritical"===t||"seriousCritical"===t?"% of Active":"percVacc"===t||"percFullyVacc"===t?"% of Pop":"% of Cases",u=n?"none":"block";let h=`
    <div class="pie-wrapper" style='${l}' title='${n?p:""}'>
        <svg class="circle">
            <circle r="${a}" cx="50%" cy="50%" stroke="${c}" fill="none" stroke-width="${o}" stroke-linecap="round" stroke-dasharray="${r}, ${s}" stroke-opacity="0.2"></circle>
            <circle r="${a}" cx="50%" cy="50%" stroke="${d}" fill="none" stroke-width="${o}" stroke-linecap="round" stroke-dasharray="${e/100*r}, 188"></circle>
        </svg>
        <div class="circle-info circle-perc" style="color:${d};">${e}</div>
        <div class="circle-info" style="color:${d}; display:${u};">${p}</div>
    </div>`;return h}function getRecord(e,t,n,a){const r=usOn?usData:countriesList,s=sortList(r,t),o=s.find(t=>t.country===e);let l="",c="",d="",p="";if(o){c=`
            <p class='stats'>${o.rank}</p>
            <p class='stats-titles dark-gray'>Rank</p>`,d="totalVaccinations"==t?usOn?"":`
            <div class='flex-stat'>
                <p class='stats text-center font-vw'>${o.vaccines}</p>
                <p class='stats-titles dark-gray text-center'>Vaccines</p>
            </div> `:`
            <div class='flex-stat'>
                <p class='stats'>${o[a].commaSplit()}</p>
                <p class='stats-titles dark-gray text-center'>Raw Total</p>
            </div> `;let s;return"percDeaths"===t?s=r.find(t=>t.country===e).percDeaths:"percRecovered"===t?s=r.find(t=>t.country===e).percRecovered:"percActive"===t?s=r.find(t=>t.country===e).percActive:"percCritical"===t?s=r.find(t=>t.country===e).percCritical:"percVacc"===t?s=r.find(t=>t.country===e).percVacc:"percFullyVacc"===t?s=r.find(t=>t.country===e).percFullyVacc:void 0,p=0<=s&&null!=s?getPiePerc(s,t):`<div class='flex-stat'>
                <p class='stats'>${o[t].commaSplit()}</p>
                <p class='stats-titles dark-gray'>${n}</p>
            </div>`,l=`
            ${p} 
            <div class='flex-stat'>
                ${c}
            </div>
            ${d}       
        `,l}return l=`<p class='stats yellow-test text-center'>No Reported Data</p>`,l}function onClosePopup(){onMaps=!0,onCloseSearch(),clearPopup(),setPrevMapState(),showPage(),addPopupListeners(),addZoomTapListeners(),chartOn&&(removeChartListeners(),removeGlobalChartListeners(),chartOn=!1),clearHighlights()}async function declareUsZoomElems(){svgEl=_("usMap"),zoomEl=_("gUsMap"),VBWidth=1362,VBHeight=817,usSVG=await parseSVG(),fadeIn(svgEl),onResize(),prevP=svgEl.createSVGPoint(),touchTrail=svgEl.createSVGPoint(),fadeTrail=svgEl.createSVGPoint(),fadeTrail.x=fadeTrail.y=touchTrail.x=touchTrail.y=prevP.x=prevP.y=0,is_touch_device&&touchEvents(!0)}async function declareWorldZoomElems(){svgEl=_("worldMap"),zoomEl=_("gOuter"),VBWidth=2e3,VBHeight=1051,dataSVG=await parseSVG(),onResize(),prevP=svgEl.createSVGPoint(),touchTrail=svgEl.createSVGPoint(),fadeTrail=svgEl.createSVGPoint(),fadeTrail.x=fadeTrail.y=touchTrail.x=touchTrail.y=prevP.x=prevP.y=0,is_touch_device&&touchEvents(!0)}async function showUsMap(){const e=await appendMap("/us.svg");return usOn=!!e,showGlInstructions(),e}async function showWorldMap(){const e=await appendMap("/world.svg");return e}function appendMap(e){return new Promise(t=>{const n=new XMLHttpRequest;n.open("GET",e),n.overrideMimeType("image/svg+xml"),n.onload=async function(){if(200===this.status&&this.responseXML.documentElement){if(mapDiv.innerHTML=``,onLoad){const e=await dynLoader("mapLoader");e?(mapDiv.appendChild(e),fadeIn(_("mapLoader"))):alert("Network Error: Check your internet connection")}mapDiv.appendChild(this.responseXML.documentElement),"/us.svg"===e?declareUsZoomElems():declareWorldZoomElems(),t(!0)}else t(!1)},n.send("")})}function addZoomTapListeners(){is_touch_device||(svgEl.addEventListener("mousedown",onMouseDown,!1),svgEl.addEventListener("dblclick",tapZoomHandler,!1),svgEl.addEventListener("onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll",zoomHandler,!1)),is_touch_device&&(taptime.on("tap",onDocTap),hammertime.on("pinch",onPinchZoom),hammertime.on("pinchend",onPinchEnd),hammertime.on("tap",onTapZoom),presstime.on("tap",onTapPopup),hammertime.on("press",onPress),hammertime.on("panstart",onPanStart),hammertime.on("pan",onPan),hammertime.on("panend",onPanEnd),sidebartime.on("pan",onSideBarPan),currentData.addEventListener("touchend",addRemoveHeader,!1)),addLegendListeners(),centerBtn.addEventListener("click",centerMap,!1)}function removeZoomTapListeners(){is_touch_device||(svgEl.removeEventListener("mousedown",onMouseDown),svgEl.removeEventListener("dblclick",tapZoomHandler),svgEl.removeEventListener("onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll",zoomHandler)),is_touch_device&&(taptime.off("tap",onDocTap),hammertime.off("pinch",onPinchZoom),hammertime.off("pinchend",onPinchEnd),hammertime.off("tap",onTapZoom),presstime.off("tap",onTapPopup),hammertime.off("press",onPress),hammertime.off("panstart",onPanStart),hammertime.off("pan",onPan),hammertime.off("panend",onPanEnd),sidebartime.off("pan",onSideBarPan),currentData.removeEventListener("touchend",addRemoveHeader)),removeLegendListeners(),centerBtn.removeEventListener("click",centerMap)}function addLegendListeners(){const e=legendColors.querySelectorAll(".color"),t=keys.querySelectorAll(".data-range");for(let t=0;t<e.length;t++)is_touch_device?e[t].addEventListener("touchend",onColorTouch,!1):e[t].addEventListener("mouseover",onColorOver,!1);for(let e=0;e<t.length;e++)is_touch_device?t[e].addEventListener("touchend",onColorTouch,!1):t[e].addEventListener("mouseover",onColorOver,!1)}function removeLegendListeners(){const e=keys.querySelectorAll(".data-range"),t=legendColors.querySelectorAll(".color");for(let e=0;e<t.length;e++)is_touch_device?t[e].removeEventListener("touchend",onColorTouch):t[e].removeEventListener("mouseover",onColorOver);for(let t=0;t<e.length;t++)is_touch_device?e[t].removeEventListener("touchend",onColorTouch):e[t].removeEventListener("mouseover",onColorOver)}function clearLegendHover(){const e=legendColors.querySelectorAll(".color"),t=keys.querySelectorAll(".data-range");for(let t=0;t<e.length;t++)e[t].classList.remove("on-color-hover");for(let e=0;e<t.length;e++)t[e].style.opacity=1;clearHighlights()}function onColorTouch(t){t=t||window.event,clearLegendHover();const n="color"===t.target.className?this:getLegendTarget(this).elem,a=keys.querySelectorAll(".data-range");for(let e=0;e<a.length;e++)a[e].style.opacity=e===getLegendTarget(this).index?1:.3;n.classList.add("on-color-hover"),highlightRangeCountries(n.style.backgroundColor)}function onColorOver(t){t=t||window.event,this.addEventListener("mouseout",onColorOut,!1);const n="color"===t.target.className?this:getLegendTarget(this).elem,a=keys.querySelectorAll(".data-range");for(let e=0;e<a.length;e++)a[e].style.opacity=e===getLegendTarget(this).index?1:.3;n.classList.add("on-color-hover"),highlightRangeCountries(n.style.backgroundColor)}function getLegendTarget(t){const e=t.parentNode,n=Array.prototype.indexOf.call(e.children,t);return{elem:legendColors.querySelectorAll(".color")[n],index:n}}function highlightRangeCountries(e){const t=zoomEl.transform.baseVal.getItem(0).matrix.a;for(let n=0;n<pathCountries.length;n++)pathCountries[n].getAttribute("data-name")&&(pathCountries[n].style.fill==e?pathCountries[n].style.setProperty("--zoom",t/4):(pathCountries[n].classList.add("dark-path"),pathCountries[n].style.setProperty("--zoom",t)))}function onColorOut(t){const e="color"===t.target.className?this:getLegendTarget(this).elem,n=keys.querySelectorAll(".data-range");for(let e=0;e<n.length;e++)n[e].style.opacity=1;e.classList.remove("on-color-hover"),clearHighlights(),this.removeEventListener("mouseout",onColorOut)}var charttime;function addChartListeners(){const e=_("svgChart");is_touch_device?(charttime=new Hammer(e),sidebartime.get("pan").set({direction:Hammer.DIRECTION_HORIZONTAL}),charttime.on("pan",onChartMove),charttime.on("tap",onChartMove)):document.addEventListener("mousemove",onChartMove,!1),window.addEventListener("resize",onChartResize,!1)}function removeChartListeners(){is_touch_device?(charttime.off("pan").destroy(),charttime.off("tap").destroy()):document.removeEventListener("mousemove",onChartMove),window.removeEventListener("resize",onChartResize)}function addGlobalChartListeners(){const e=_("chart"),t=e.querySelectorAll(".chart-btns");for(let e=0;e<t.length;e++)t[e].addEventListener("mouseup",onChartOptClick,!1);const n=_("testsCheckBox");n.addEventListener("change",onChartCheckBox,!1);const a=_("chartDropDown");a.addEventListener("mouseup",onChartDropDown,!1)}function removeGlobalChartListeners(){const e=_("chart"),t=e.querySelectorAll(".chart-btns");for(let e=0;e<t.length;e++)t[e].removeEventListener("mouseup",onChartOptClick);const n=_("testsCheckBox");n.removeEventListener("change",onChartCheckBox);const a=_("chartDropDown");a.removeEventListener("mouseup",onChartDropDown)}function getOffsets(t){const e={width:t.offsetWidth,left:t.offsetLeft};return e}String.prototype.replaceArray=function(e,t){for(var n,a=this,r=0;r<e.length;r++)n=new RegExp(e[r],"g"),a=a.replace(n,t[r]);return a};function getSearchResults(e){let t=[];const n=usOn?usData:countriesList,a=["\xE9","\xE7"],r=["e","c"],s=usOn?usSVG.filter(t=>t.country.toLowerCase().includes(e)):countryCodes.filter(t=>t.name.toLowerCase().replaceArray(a,r).includes(e)||t.country.toLowerCase().replaceArray(a,r).includes(e)||t.alpha2.toLowerCase().includes(e)||t.alpha3.toLowerCase().includes(e));return s.forEach(e=>{const a=n.find(t=>t.country.toLowerCase()===e.country.toLowerCase());a&&t.push(a)}),t}function handleKeysOnSearch(t){switch(t.key){case"ArrowDown":onArrowsEnterSearch();break;case"ArrowUp":onArrowsEnterSearch(!0);break;case"Enter":onArrowsEnterSearch(!1,!0);}}function removeResultFocus(){const e=resultsWrapper.querySelectorAll(".results-flex");for(let t=0;t<e.length;t++)e[t].classList.remove("results-flex-focus")}function onArrowsEnterSearch(e,t){const n=resultsWrapper.querySelectorAll(".results-flex");let a=0;for(let r=0;r<n.length;r++)1<n[r].classList.length&&(n[r].classList.remove("results-flex-focus"),t?(onResultClick(n[r]),a=r):a=e?0===r?0:r-1:r===n.length-1?n.length-1:r+1);const r=n[a].offsetTop;resultsWrapper.scrollTop=r,n[a].classList.add("results-flex-focus")}function onResultClick(t){t=t.clientY?this:t,removeResultFocus(),t.classList.add("results-flex-focus");let n=t.dataset.country;loadCountry(n,!0),onCloseSearch()}searchInput.addEventListener("keyup",function(t){if(t=t||window.event,t.preventDefault(),"ArrowDown"!=t.key&&"ArrowUp"!=t.key&&"Enter"!=t.key&&"ArrowLeft"!=t.key&&"ArrowRight"!=t.key){resultsWrapper.innerHTML="";const e=usOn?usData:countriesList;if(0!=e.length){let e=this.value.toLowerCase().trim();if(""!=e){const t=getSearchResults(e);if(closeSearch.style.visibility="visible",closeSearch.addEventListener("mouseup",onCloseSearch,!1),0!=t.length){resultsWrapper.style.visibility="visible";let e="";t.forEach(t=>{const n=usOn?usSVG:dataSVG,a=n.find(e=>e.country===t.country).id,r="ic"===a?`/images/ic.png`:"us-dc"===a?`/images/us-dc.png`:`https://flagcdn.com/h40/${a}.png`;e+=`
                            <div class='results-flex' data-country='${t.country}'>
                                <div class='bckg-img inline-flag' style='background-image:url(${r});'></div>
                                <p class='inline-p'>${t.country}</p>
                            </div>`}),resultsTransform(),resultsWrapper.innerHTML=e;const n=resultsWrapper.querySelectorAll(".results-flex");for(let e=0;e<n.length;e++)n[e].addEventListener("mouseup",onResultClick,!1)}else resultsWrapper.style.visibility="hidden",resultsWrapper.innerHTML=""}else onCloseSearch()}}else{const e=resultsWrapper.querySelectorAll(".results-flex");0<e.length&&handleKeysOnSearch(t)}});function onCloseSearch(){resultsWrapper.style.visibility="hidden",resultsWrapper.innerHTML="",searchInput.value="",closeSearch.style.visibility="hidden",closeSearch.removeEventListener("mouseup",onCloseSearch)}var hammertime,presstime,sidebartime,prevScale=0,prevP=worldMap.createSVGPoint(),touchTrail=worldMap.createSVGPoint(),fadeTrail=worldMap.createSVGPoint();fadeTrail.x=fadeTrail.y=touchTrail.x=touchTrail.y=prevP.x=prevP.y=0;function getTouchPoint(t){const e=svgEl.createSVGPoint();return e.x=t.center.x,e.y=t.center.y,e}function onPinchZoom(t){popup.style.display="none";const e=getTouchPoint(t),n=0===prevScale?t.scale-prevScale:t.scale-prevScale+1;prevScale=t.scale;const a=setMatrix(e,n);setCTM(zoomEl.getScreenCTM().multiply(a));const r=zoomEl.transform.baseVal.getItem(0).matrix;.1>r.a-initialScale?(768>=window.innerWidth&&addHeader(),globalInstructions.classList.remove("transform-y-260"),globalHelpTip.style.top=1<globalInstructions.classList.length?"50px":"70px"):(768>=window.innerWidth&&removeHeader(),globalInstructions.classList.add("transform-y-260"))}function onPinchEnd(){prevScale=0}function onTapZoom(t){2!==t.tapCount||countryAnim||(768>=window.innerWidth&&removeHeader(),globalInstructions.classList.add("transform-y-260"),tapP=getTouchPoint(t),maxScale=2*zoomEl.transform.baseVal.getItem(0).matrix.a,maxScale=maxScale>maxZoom?maxZoom:maxScale,fadeZoom(),popup.style.display="none")}function onTapPopup(t){if(1===t.tapCount){let e=t.target.getAttribute("data-name");getPopupInfo(e),pathMove(t)}}function onPanStart(){popup.style.display="none",fadeTrail.x=fadeTrail.y=touchTrail.x=touchTrail.y=prevP.x=prevP.y=0,cancelAnimationFrame(fadeTouchPan)}function onPan(t){if(1===t.maxPointers){const e=zoomEl.transform.baseVal.getItem(0).matrix;let n=svgEl.createSVGPoint();n.x=(t.deltaX-prevP.x)/e.a,n.y=(t.deltaY-prevP.y)/e.d,prevP.x=t.deltaX,prevP.y=t.deltaY,touchTrail.x=n.x,touchTrail.y=n.y;const a=setPanMatrix(n);setCTM(zoomEl.getScreenCTM().multiply(a))}}function onPanEnd(t){return 1<t.maxPointers?void(fadeTrail.x=fadeTrail.y=touchTrail.x=touchTrail.y=prevP.x=prevP.y=0):void(fadeTrail.x=touchTrail.x,fadeTrail.y=touchTrail.y,fadeTouchPan())}function fadeTouchPan(){touchTrail.x=touchTrail.y=0;const e=.06;if(fadeTrail.x*=1-e,fadeTrail.y*=1-e,0!=Math.floor(Math.abs(fadeTrail.x))||0!=Math.floor(Math.abs(fadeTrail.y))){const e=setPanMatrix(fadeTrail);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadeTouchPan)}else fadeTrail.x=fadeTrail.y=prevP.x=prevP.y=0,cancelAnimationFrame}function onPress(t){let e=t.target.getAttribute("data-name");const n=usOn?usData:countriesList;n.find(t=>t.country===e)&&(popup.style.display="none",clearLegendHover(),cancelAnimationFrame(fadeTouchPan),zoomToCountry(t.target))}function onDocTap(t){1<=t.tapCount&&(t.target.parentNode!=_("legendColors")&&onMaps?clearLegendHover():t.target.parentNode!=zoomEl&&(popup.style.display="none"))}function onSideBarPan(t){if(t.target.parentNode===switchWrapper||t.target.parentNode===switchToggle){const e=-t.deltaY/4;Number.isNaN(e)||(statsWrapper.scrollTop+=e)}}function touchEvents(e){e&&(hammertime.off("doubletap").destroy(),presstime.off("doubletap").destroy(),sidebartime.off("pan").destroy()),taptime=new Hammer(document),hammertime=new Hammer(svgEl),hammertime.get("pinch").set({enable:!0}),presstime=new Hammer(zoomEl),768>=window.innerWidth&&closeSideBar(),sidebartime=new Hammer(sideBar),sidebartime.get("pan").set({direction:Hammer.DIRECTION_VERTICAL})}function addRemoveHeader(){768>=window.innerWidth&&(1===header.classList.length?removeHeader():addHeader())}function addHeader(){[header,currentData,globalHelpTip,toggle,toggleDark,keyBtn,centerBtn].forEach(t=>{t.classList.remove("transform-y-50")})}function removeHeader(){[header,currentData,globalHelpTip,toggle,toggleDark,keyBtn,centerBtn].forEach(t=>{t.classList.add("transform-y-50")}),globalInstructions.classList.add("transform-y-260"),globalHelpTip.style.top="50px",0===mobileNav.classList.length&&(mobileNav.classList.add("transform-y-260"),hamburger.classList.toggle("change")),768>=window.innerWidth&&onCloseSearch()}function removeHover(){closeKeys.classList.add("no-hover"),closeDash.classList.add("white")}function clearHighlights(){const e=zoomEl.transform.baseVal.getItem(0).matrix.a;for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&(pathCountries[t].classList.remove("light-path"),pathCountries[t].classList.remove("dark-path"),pathCountries[t].style.setProperty("--zoom",e))}function closeSideBar(){sideBar.className="transform",toggle.style.opacity=1}function toggleSideBar(){0===sideBar.classList.length?closeSideBar():(sideBar.className="",toggle.style.opacity=0,popup.style.display="none")}toggle.addEventListener("mouseup",toggleSideBar,!1),closeDash.addEventListener("mouseup",closeSideBar,!1);function onToggleSVGResize(){let e=_("testsTitle"),t=_("deathsTitle"),n=_("vaccTitle");const a=switchWrapper.offsetWidth,r=768>=window.innerWidth?(a-64)/2:118;switchG.setAttributeNS(null,"transform",`matrix(1, 0, 0, 1, ${r}, 42)`);const s=a/2;e.setAttribute("x",s),t.setAttribute("x",a-12),n.setAttribute("x",s)}function toggleSwitchCases(e){let t,n,a,r,s,o,l,c,d;return"cases"===e?(t=10,n=32,a="#54cbf2",r=casesMenu,s="casesPerMil",o="Cases/Million",l="240px",c=".cases-btns",d=["#d6f5ff","#96dcf4","#54cbf2","#04abe3","#038ebc","#035e79","#013544"]):"tests"===e?(t=32,n=10,a="#f4bc68",r=testsMenu,s="testsPerMil",o="Tests/Million",l="160px",c=".tests-btns",d=["#fbebd1","#f9d7a4","#f4bc68","#f9ad3b","#ff9700","#c57603","#844f01"]):"deaths"===e?(t=54,n=32,a="#f6584c",r=deathsMenu,s="deathsPerMil",o="Deaths/Million",l="160px",c=".deaths-btns",d=["#ffe9e7","#fcd2cd","#ffada6","#fd8177","#f6584c","#bd4137","#9e251b"]):"vaccines"===e?(t=32,n=54,a="#4cf6af",r=vaccMenu,s="percVacc",o="Partially Vaccinated",l="160px",c=".vacc-btns",d=["#e2fdf1","#bafbdf","#89f9ca","#4cf6af","#33a976","#1f6949","#0e2f20"]):void 0,{cx:t,cy:n,color:a,menu:r,property:s,title:o,height:l,btns:c,colors:d}}function onSwitchClick(t){if(t=t||window.event,"switch-titles"===t.target.className.baseVal||"switch-target-circles"===t.target.className.baseVal){const e=t.target.getAttribute("data-cat");executeSwitch(e)}}function onSwitchTap(t){t=t||window.event;const n=switchG.transform.baseVal.getItem(0).matrix,a=t.layerX-n.e,r=t.layerY-n.f-22,s=[{cat:"cases",x:10,y:32},{cat:"tests",x:32,y:10},{cat:"deaths",x:54,y:32},{cat:"vaccines",x:32,y:54}].find(e=>22>a-e.x&&12>r-e.y);if("switch-titles"===t.target.className.baseVal||"switch-target-circles"===t.target.className.baseVal){const e=t.target.getAttribute("data-cat");executeSwitch(e)}else if(s){const e=s.cat;executeSwitch(e)}}function executeSwitch(e){if(switchValue!=e){switchValue=e,statsWrapper.removeEventListener("scroll",onStatsScroll),statsWrapper.style.overflowY="hidden",prop=toggleSwitchCases(e).property;const t=toggleSwitchCases(e).color;switchG.setAttribute("fill",t);const n=toggleSwitchCases(switchValue).cx,a=toggleSwitchCases(switchValue).cy;switchCircle.setAttribute("cx",32),switchCircle.setAttribute("cy",32),setTimeout(()=>{switchCircle.setAttribute("cx",n),switchCircle.setAttribute("cy",a)},150);const r=switchToggle.querySelectorAll(".switch-titles");for(let t=0;t<r.length;t++)r[t].style.opacity=r[t].getAttribute("data-cat")===e?1:.4;const s=toggleSwitchCases(switchValue).menu;if(removeLegendListeners(),currentData.style.backgroundColor=t,currentTitle=toggleSwitchCases(e).title,changeLegendColors(switchValue),handleOptionsMenu(s),execProp(),addLegendListeners(),globalHelpTipHandler(),dropDownOn){const e=toggleSwitchCases(switchValue).height;optionsDiv.style.height=e,optionsDiv.style.minHeight=e}setTimeout(()=>{statsWrapper.addEventListener("scroll",onStatsScroll,!1),statsWrapper.style.overflowY="scroll",statsWrapper.scrollTop=0},400)}}function handleOptionsMenu(t){const e=[casesMenu,testsMenu,deathsMenu,vaccMenu];for(let n=0;n<e.length;n++)e[n].style.display=e[n]===t?"block":"none"}function openDropDown(){const e=toggleSwitchCases(switchValue).height,t=_("dropDownArrow");optionsDiv.style.overflowY="scroll",optionsDiv.style.height=e,optionsDiv.style.minHeight=e,t.classList.add("transform-rotate"),sideBar.style.height="calc(100 * var(--vh))",dropDownOn=!0}function closeDropDown(){const e=_("dropDownArrow");optionsDiv.scrollTo(0,0),optionsDiv.style.height="39px",optionsDiv.style.minHeight="39px",optionsDiv.style.overflowY="hidden",e.classList.remove("transform-rotate"),dropDownOn=!1}dropDown.addEventListener("click",()=>{statsWrapper.style.overflowY="hidden",statsWrapper.removeEventListener("scroll",onStatsScroll),"39px"===optionsDiv.style.height||""===optionsDiv.style.height?openDropDown():closeDropDown(),setTimeout(()=>{statsWrapper.style.overflowY="scroll",statsWrapper.addEventListener("scroll",onStatsScroll,!1)},400),sideBar.className=""});function dropDownSwitch(e){let t="";return"casesPerMil"===e?t="This is the reported total cumulative count of detected, laboratory, and sometimes (depending on the country reporting them and the criteria adopted at the time) also clinical cases. Depending on the country reporting standards, this number can also include presumptive, suspect, or probable cases of detected infection.":"newCasesPerMil"===e?t="Every country reports their daily new cases at different times in the day. The daily data by all reporting countries resets every day after midnight GMT.":"percRecovered"===e?t="This is the percent of cases that have recovered from the disease. This statistic is highly imperfect, because reporting can be missing, incomplete, incorrect, based on different definitions, or dated (or a combination of all of these) for many governments, both at the local and national level, sometimes with differences between states within the same country or counties within the same state. ":"percActive"===e?t="This figure represents the current number of people detected and confirmed to be infected with the virus. This figure can increase or decrease, and represents an important metric for public health and emergency response authorities when assessing hospitalization needs versus capacity.":"percCritical"===e?t=`This is the percent of current active cases that are in critical condition. This statistic is imperfect, for many reasons. When 99% of the cases were in China, the figure pretty much corresponded to the Chinese NHC's reported number of "severe" cases. Today, it represents for the most part the number of patients currently being treated in Intensive Care Unit (ICU), if and when this figure is reported.`:"testsPerMil"===e||"totalTests"===e?t=`This statistic is imperfect, because some countries report tests performed, while others report the individuals tested.`:"deathsPerMil"===e?t="This is the reported total cumulative count of deaths caused by COVID-19. Due to limited testing, challenges in the attribution of the cause of death, and varying methods of reporting in some countries, this is an imperfect statistic. ":"newDeathsPerMil"===e?t="Every country reports their daily new deaths at different times in the day. The daily data by all reporting countries resets every day after midnight GMT.":"percDeaths"===e?t=`The Case Fatality rate (CFR) represents the proportion of cases who eventually die from the disease. This statistic for each country is imperfect, since it is based on both the total number of reported cases and deaths, both of which depend on the respective countries' reporting criteria. Globally, the WHO has estimated the coronavirus' CFR at <strong>2%</strong>. For comparison, the CFR for SARS was <strong>10%</strong>, and for MERS <strong>34%</strong>.`:"percVacc"===e?t="This is the percent of population that received at least one vaccine dose, but has <strong>NOT</strong> received all doses presribed by the vaccination protocol. This metric is not being made available by all reporting countries, so a 0 result does <strong>NOT</strong> necessarily mean there are no people vaccinated in the respective country.":"percFullyVacc"===e?t="This is the percent of population that received <strong>ALL</strong> doses prescribed by the vaccination protocol. This metric is not being made available by all reporting countries, so a 0 result does <strong>NOT</strong> necessarily mean there are no people vaccinated in the respective country.":"totalVaccinations"===e?t="This figure represents the total number of doses administered, it does <strong>NOT</strong> represent the total number of people vaccinated.":void 0,t}function globalHelpTipHandler(){const e=dropDownSwitch(prop);if(""!=e){globalHelpTip.style.display="block";const t=globalHelpTip.querySelector("p");t.innerHTML=e}else globalHelpTip.style.display="none";is_touch_device&&768>=window.innerWidth&&(globalHelpTip.style.top=1<globalInstructions.classList.length?"50px":"70px")}function legendHelpTipHandler(){let e=is_touch_device?"Tap color to isolate countries in specific range.":"Hover mouse over color to isolate countries in specific range.";const t=legendHelpTip.querySelector("p");t.innerText=e,t.style.width=is_touch_device?"300px":"370px"}var bckColorLDM="#3d3c3a",colorLDM="#faebd7";const buttons=document.querySelectorAll("button");for(let e=0;e<buttons.length;e++)buttons[e].dataset.prop&&buttons[e].addEventListener("mouseup",function(){const e=usOn?usData:countriesList;if(0!=e.length&&prop!=this.dataset.prop){prop=this.dataset.prop,currentTitle=this.innerText;const e=toggleSwitchCases(switchValue).btns,t=document.querySelectorAll(e);for(let e=0;e<t.length;e++)t[e].style.backgroundColor=bckColorLDM,t[e].style.color=colorLDM;this.style.backgroundColor=toggleSwitchCases(switchValue).color,this.style.color="#000",globalHelpTipHandler(),currentData.innerText=dropDownTitle.innerText=currentTitle,keyTitle.innerText=rawTotalSwitch(prop).title,execProp(!0),768>=window.innerWidth&&(0<sideBar.classList.length?(sideBar.addEventListener("transitionend",onMenuTrans,!1),statsWrapper.style.overflowY="hidden",statsWrapper.removeEventListener("scroll",onStatsScroll),sideBar.className=""):closeSideBar())}});function onMenuTrans(t){t=t||window.event,"transform"===t.propertyName&&(this.removeEventListener("transitionend",onMenuTrans,!1),closeSideBar(),statsWrapper.style.overflowY="scroll",statsWrapper.addEventListener("scroll",onStatsScroll,!1))}sideBar.addEventListener("onwheel"in document?"wheel":"onmousewheel"in document?"mousewheel":"DOMMouseScroll",function(t){t=t||window.event;const n=t.deltaY?t.deltaY:t.wheelDeltaY?t.wheelDeltaY:t.detail;statsWrapper.scrollTop+=n});var lastScrollTop=0;statsWrapper.addEventListener("scroll",onStatsScroll,!1);function onStatsScroll(){var e=this.scrollTop;e===lastScrollTop||(0>=e?(sideBar.className="",e>lastScrollTop?sideBar.style.height="calc(100 * var(--vh))":setTimeout(()=>{sideBar.style.height="calc(100 * var(--vh))"},300)):500<e?(sideBar.className="transform-y-178",e>lastScrollTop?sideBar.style.height=window.innerHeight+178+"px":setTimeout(()=>{sideBar.style.height=window.innerHeight+178+"px"},300)):(sideBar.className="transform-y-30",e>lastScrollTop?sideBar.style.height=window.innerHeight+30+"px":setTimeout(()=>{sideBar.style.height=window.innerHeight+30+"px"},300)),lastScrollTop=0>=e?0:e)}function changeNavColor(){const e="dark"===mode?"#54cbf2":"#9c9c9c",t="dark"===mode?"#faebd7":"#000";_("worldBtn").style.color=usOn?t:e,_("usBtn").style.color=usOn?e:t,_("aboutBtn").style.color=t,_("worldBtnMobile").style.color=usOn?t:e,_("usBtnMobile").style.color=usOn?e:t,_("aboutBtnMobile").style.color=t}function onToggleDark(){"dark"===mode?(mode="light",this.setAttribute("title","Toggle Dark Mode"),bckColorLDM="#fff",colorLDM="#000",html.classList.add("light"),2===searchWrapper.classList.length&&(searchWrapper.style.backgroundColor="#e6e6e6"),buttonsHandler(prop)):(mode="dark",this.setAttribute("title","Toggle Light Mode"),bckColorLDM="#3d3c3a",colorLDM="#faebd7",html.classList.remove("light"),2===searchWrapper.classList.length&&(searchWrapper.style.backgroundColor="#282828"),buttonsHandler(prop)),changeNavColor()}toggleDark.addEventListener("mouseup",onToggleDark,!1);function toggleLegend(){"block"===keys.style.display||0===keys.style.opacity?closeLegend():openLegend()}function openLegend(){fadeIn(keys)}function closeLegend(){fadeOut(keys)}keyBtn.addEventListener("click",toggleLegend,!1),closeKeys.addEventListener("click",closeLegend,!1),hamburger.addEventListener("mouseup",()=>{1===mobileNav.classList.length?mobileNav.classList.remove("transform-y-260"):mobileNav.classList.add("transform-y-260"),hamburger.classList.toggle("change"),popup.style.display="none"});function showSearch(){768>=window.innerWidth?1===searchWrapper.classList.length?expandSearch():(collapseSearch(),onCloseSearch()):searchInput.focus()}function expandSearch(){const e="dark"===mode?"#282828":"#e6e6e6";searchWrapper.classList.add("flex-1"),closeSearch.style.display="block",searchInput.style.visibility="visible",searchWrapper.style.backgroundColor=e,searchWrapper.style.marginRight="45px",headerTitle.style.display="none"}function collapseSearch(){searchWrapper.classList.remove("flex-1"),closeSearch.style.display="none",searchInput.style.visibility="hidden",searchWrapper.style.backgroundColor="transparent",searchWrapper.style.marginRight="30px",setTimeout(()=>{headerTitle.style.display="block"},300)}searchIcon.addEventListener("mouseup",showSearch,!1);function clearPage(){toggle.style.display="none",toggleDark.style.display="none",sideBar.style.display="none",currentDataWrapper.style.display="none",centerBtn.style.display="none",keyBtn.style.display="none",keys.style.display="none",globalInstructions.style.display="none","block"===about.style.display&&(about.style.display="none")}function showPage(){const e=["-webkit-box","-ms-flexbox","flex"];for(let t=0;t<e.length;t++)sideBar.style.display=e[t],currentDataWrapper.style.display=e[t];toggle.style.display="block",toggleDark.style.display="block",centerBtn.style.display="block",keyBtn.style.display="block",keys.style.display="block",is_touch_device&&(768>=window.innerWidth&&(globalHelpTip.style.top=1<globalInstructions.classList.length?"50px":"70px"),globalInstructions.style.display="block"),onToggleSVGResize()}function clearPopup(){countryPopup.style.overflow="hidden",countryPopup.scrollTo(0,0),countryPopup.removeEventListener("scroll",onCountryPopupScroll),closePopup.removeEventListener("mouseup",onClosePopup),closePopup.setAttribute("data-alpha2",""),closePopup.setAttribute("data-country",""),setTimeout(()=>{countryPopup.classList.add("transform"),closePopup.style.marginLeft="-30px",countryPopup.style.overflow=""},10),setTimeout(()=>{countryPopup.innerHTML="",closePopup.style.visibility="hidden",resultsTransform()},500);window.history.pushState("noParam","COVID-19 WORLD-MAP","/"),document.title="COVID-19 WORLD-MAP"}function setPrevMapState(){const e=`matrix(${prevMatrix.scale}, 0, 0, ${prevMatrix.scale}, ${prevMatrix.x}, ${prevMatrix.y})`;zoomEl.setAttributeNS(null,"transform",e),pathStrokeHandler()}function onResetPage(){chartOn&&(removeChartListeners(),removeGlobalChartListeners(),chartOn=!1),removeZoomTapListeners(),removePopupListeners(),onUsURL||clearPopup(),addZoomTapListeners(),addPopupListeners(),showPage(),reassignProp()}async function onWorldPage(){return new Promise(async e=>{const t=await showWorldMap();t&&(usOn&&(usOn=!1),e(t))})}async function onUsPage(){return new Promise(async e=>{const t=await showUsMap();e(t)})}document.querySelectorAll(".menu-btns").forEach(e=>{e.addEventListener("mouseup",onMenuBtn,!1)});function menuSwitchBtns(e){let t,n;return"us"===e?(t=_("usBtn"),n=_("usBtnMobile")):"about"===e?(t=_("aboutBtn"),n=_("aboutBtnMobile")):void 0,{btn:t,btnMobile:n}}async function onMenuBtn(t){return new Promise(async e=>{t=t.clientY?this:768>=window.innerWidth?menuSwitchBtns(t).btnMobile:menuSwitchBtns(t).btn,mobileNav.classList.add("transform-y-260"),hamburger.classList.remove("change");let n=t.dataset.link;const a="dark"===mode?"#54cbf2":"#9c9c9c",r="dark"===mode?"#faebd7":"#000";if(document.querySelectorAll(".menu-btns").forEach(e=>{e.style.color=r}),t.style.color=a,"about"===n){onMaps=!1,onUsURL=!1,chartOn&&(removeChartListeners(),removeGlobalChartListeners(),chartOn=!1),removeZoomTapListeners(),removePopupListeners(),clearPopup(),onResize(),clearPage(),about.style.display="block";window.history.pushState("about","About | COVID-19 WORLD-MAP","/about"),document.title="About | COVID-19 WORLD-MAP"}else if("us"===n){onMaps=!0;const t=await onUsPage();t?(onResetPage(),about.style.display="none",e(!0)):(alert("Network Error: Check your internet connection"),e(!1))}else{onMaps=!0,onUsURL=!1;const t=await onWorldPage();t?(showGlInstructions(),onResetPage(),about.style.display="none",e(!0)):(alert("Network Error: Check your internet connection"),e(!1))}clearHighlights(),onCloseSearch(),popup.style.display="none"})}function dynLoader(e){return new Promise(t=>{var n;const a=new XMLHttpRequest;a.open("GET","/loader.svg"),a.overrideMimeType("image/svg+xml"),a.onload=function(){200===this.status&&this.responseXML.documentElement?(n=a.responseXML.documentElement,n.setAttribute("id",e),t(n)):t(!1)},a.send("")})}function fadeOut(t){t.style.opacity=1,function e(){0>(t.style.opacity-=.1)?t.style.display="none":setTimeout(e,40)}()}function fadeIn(t,e){e||(t.style.display="block");let n=0;var a=setInterval(()=>{1>n?(n+=.1,t.style.opacity=n):clearInterval(a)},40)}function formatTime(){var e=new Date,t=1==e.getHours().toString().length?"0"+e.getHours():e.getHours(),n=1==e.getMinutes().toString().length?"0"+e.getMinutes():e.getMinutes(),a=1==e.getSeconds().toString().length?"0"+e.getSeconds():e.getSeconds();return t+":"+n+":"+a}function formatDate(e,t){e=e.split("-");var n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];return t?n[e[1]-1]+" "+ +e[2]:n[e[1]-1]+" "+ +e[2]+", "+e[0]}String.prototype.commaSplit=function(){return this.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")},Number.prototype.commaSplit=String.prototype.commaSplit,Number.prototype.countDecimals=function(){return Math.floor(this.valueOf())===this.valueOf()?0:this.toString().split(".")[1].length||0};var xyPlots,currentProp,propArr=[],propTitle=[],ratio=1,yListLength=1,headerHeight=0,firstXTextWidth=0,labelMaxWidth=0,xTextPadding=20,initialX=0,dataHist=[],chartArray=[];function makePropList(e){const t=propArr.filter(t=>0===getMax(e,t));t.forEach(e=>{const t=propArr.findIndex(t=>t===e);propArr.splice(t,1),propTitle.splice(t,1)});const n=_("testsCheckBox"),a=_("testsCheckBoxWrapper");if(0===propArr.length&&(n.disabled=!0,a.style.opacity="0.5"),0<propArr.length&&(propArr[0].includes("cases")||propArr[0].includes("deaths"))){const t=testsSwitch(propArr[0]).testProp;0===getMax(e,t)?(n.disabled=!0,a.style.opacity="0.5"):(n.disabled=!1,a.style.opacity="1")}return propArr.length}function getMax(e,t){const n=getDataList(e,t),a=Math.max.apply(null,n);return a}function getDataList(e,t){const n=e.map(e=>(e[t]=0<=e[t]?e[t]:null,e[t]));return n}function createChartArray(e,t){const n=[];let a;return e.forEach(e=>{e.hasOwnProperty(t)&&(a=e.hasOwnProperty("new_tests_smoothed")&&"new_vaccinations_smoothed"!=t&&"stringency_index"!=t?{date:e.date,[t]:e[t],new_tests_smoothed:e.new_tests_smoothed}:{date:e.date,[t]:e[t]},n.push(a))}),0===getMax(n,t)&&(n.length=0),n}function roundVal(e,t){const n=Math.pow(10,t||0);return Math.ceil(e*n)/n}function floorVal(e,t){const n=Math.pow(10,t||0);return Math.floor(e*n)/n}function getYList(e){const t=[],n=[];for(let t=0;t<propArr.length;t++)n.push(getMax(e,propArr[t]));n.sort((e,t)=>e<t?1:-1);let a=Math.max.apply(null,n),r=0|Math.log(a)*Math.LOG10E+1;a=0<r?floorVal(a,-(r-2)):1,ratio=a/5,a=0<a?a:1,r=0|Math.log(ratio)*Math.LOG10E+1,ratio/=Math.pow(10,r-1),1<=ratio&&1.5>=ratio?ratio=1:1.5<ratio&&4>ratio?ratio=2:4<=ratio&&7.5>=ratio?ratio=5:7.5<ratio&&10>ratio&&(ratio=10),ratio*=Math.pow(10,r-1);let s=0;for(ratio=0<ratio?ratio:1;s<=a;){let e=floorVal(s,1).commaSplit();t.push(e),s+=ratio}return yListLength=t.length,t}function getXList(e){const t=[];let n="";const a=e.length,r=1<e.length?Math.floor(a/2):1,s=768<window.innerWidth?Math.min(6,r):Math.min(3,r),o=Math.floor(a/s),l=!(768<window.innerWidth);for(i=0;i<=s;i++)n=i===s?formatDate(e[e.length-1].date,l):0===i?formatDate(e[i*o].date,l):formatDate(e[i*o].date,!0),t.push(n);const c=_("svgChart"),d=document.createElementNS("http://www.w3.org/2000/svg","g"),p=document.createElementNS("http://www.w3.org/2000/svg","g");d.setAttribute("style","visibility:hidden"),p.setAttribute("style","visibility:hidden");let u=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='middle'>${t[0]}</text>`,h=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='middle'>${t[t.length-1]}</text>`;return d.innerHTML=u,p.innerHTML=h,c.appendChild(d),c.appendChild(p),labelMaxWidth=Math.ceil(p.getBBox().width)/2,firstXTextWidth=Math.ceil(d.getBBox().width),c.removeChild(d),c.removeChild(p),{xList:t,xIncrFactor:o}}function getTextWidth(e){const t=_("svgChart"),n=document.createElementNS("http://www.w3.org/2000/svg","g");n.setAttribute("style","visibility:hidden");let a=`<text class='chart-text' x='0', y='0' fill="none" dominant-baseline='middle' text-anchor='end'>${e[e.length-1]}</text>`;n.innerHTML=a,t.appendChild(n);const r=Math.ceil(n.getBBox().width);return firstXTextWidth=Math.max(r,firstXTextWidth/2),t.removeChild(n),firstXTextWidth}function getBoundValues(){const e=_("chart"),t=e.offsetHeight-80-headerHeight,n=e.offsetWidth-40-labelMaxWidth,a={yBound:t,xBound:n,yIncr:t/yListLength-1,xIncr:(n-initialX)/(chartArray.length-1)};return a}function makeXYAxis(e){return new Promise(t=>{const n=_("svgChart"),a=getYList(e),r=getXList(e).xList,s=document.createElementNS("http://www.w3.org/2000/svg","g"),o=document.createElementNS("http://www.w3.org/2000/svg","g"),l=document.createElementNS("http://www.w3.org/2000/svg","g");s.setAttribute("class","y-axis"),o.setAttribute("class","x-axis"),l.setAttribute("class","horizontal-lines");const c=getTextWidth(a),d=getBoundValues().yBound,p=getBoundValues().xBound;let u=d,h=c+10;initialX=h;const y=getBoundValues().xIncr*getXList(e).xIncrFactor,m=getBoundValues().yIncr;let f="",g="",v="";for(let e=0;e<a.length;e++)f+=`<text class='chart-text' x='${c}', y='${u}' dominant-baseline='middle' text-anchor='end'>${a[e]}</text>`,g+=0==e?`<line class='chart-horiz-lines' x1="${c+10}" x2="${p}" y1="${u}" y2="${u}"></line>`:`<line class='chart-horiz-lines' x1="${c+10}" x2="${p}" y1="${u}" y2="${u}" stroke-dasharray='3,2'></line>`,u-=m;for(let e=0;e<r.length;e++)v+=e==r.length-1?`
                <text class='chart-text' x='${p}', y='${d+xTextPadding}' dominant-baseline='middle' text-anchor='middle'>${r[e]}</text>
                <line class='chart-lines' x1="${p}" x2="${p}" y1="${d}" y2="${d+4}"></line>`:`<text class='chart-text' x='${h}', y='${d+xTextPadding}' dominant-baseline='middle' text-anchor='middle'>${r[e]}</text>
                <line class='chart-lines' x1="${h}" x2="${h}" y1="${d}" y2="${d+4}"></line>`,h+=y;s.innerHTML=f,o.innerHTML=v,l.innerHTML=g,n.appendChild(s),n.appendChild(o),n.appendChild(l),t(!0)})}function plotData(e){const t=_("svgChart");xyPlots=[];const n=getBoundValues().yBound,a=getBoundValues().xBound,r=getBoundValues().yIncr,s=document.createElementNS("http://www.w3.org/2000/svg","g");s.setAttribute("class","plot-lines");const o=[],l=[];let c=initialX,d=0;const p=getBoundValues().xIncr;for(let t=0;t<e.length;t++){let a=[],s=[];propArr.forEach(o=>{null==e[t][o]?(a.push(null),s.push(null)):(d=n-e[t][o]/ratio*r,a.push(d),s.push(e[t][o]))}),xyPlots.push({x:c,y1:a[0],y2:a[1],date:e[t].date,value1:s[0],value2:s[1]}),null!=a[0]&&o.push(`${c}, ${a[0]}`),null!=a[1]&&l.push(`${c}, ${a[1]}`),c+=p}const u="dark"===mode?"#ffc82a":"#967000",h=propSwitch(currentProp);let y=`
        <rect id='plotRect' x='${initialX}' y='${0}' width='${a-initialX}' height='${n}' fill='#000' opacity='0'></rect>
        <polyline class='polyline' stroke='${h}' points='${o}'></polyline>
        <polyline class='polyline' stroke='${u}' points='${l}'></polyline>`;s.innerHTML=y,t.appendChild(s)}function propSwitch(e){let t;return"new_cases_smoothed"===e?t="dark"===mode?"#54cbf2":"#038ebc":"new_deaths_smoothed"===e?t="dark"===mode?"#f44336":"#B13507":"new_vaccinations_smoothed"===e?t="dark"===mode?"#4cf6af":"#33a976":"stringency_index"===e?t="dark"===mode?"#ffc82a":"#967000":void 0,t}function appendHoverG(){const e=_("chart"),t=_("svgChart"),n=document.createElementNS("http://www.w3.org/2000/svg","g");n.setAttribute("class","hover-info"),t.appendChild(n);const a=propSwitch(currentProp),r="dark"===mode?"#ffc82a":"#967000";let s=`<line class='hover-line' x1="0" x2="0" y1="0" y2="${getBoundValues().yBound}" stroke-width='1px'></line>`;s+=`<circle class='hover-dot' cx="0" cy="0" r="5" fill='${a}' style='visibility:hidden;'></circle>`,s+=`<circle class='hover-dot' cx="0" cy="0" r="5" fill='${r}' style='visibility:hidden;'></circle>`,n.innerHTML=s;const o=document.createElement("div");o.setAttribute("class","chart-popup"),e.appendChild(o)}function makeChartDiv(){const e=_("chart"),t=usOn?"":"<button type=\"button\" class=\"chart-btns\" data-chartprop=\"stringency_index\">Stringency Index</button>";e.innerHTML=`
        <div class='chart-header'>
            <h2>CHART: NO DATA</h2>
            <button class="help-tip-chart help-tip-stats help-tip"><p></p></button>
            <div id='chartInfo'><p></p></div>
            <div id='testsCheckBoxWrapper' class='yellow-test'>
                <input id='testsCheckBox' type='checkbox'></input>
                <label for='testsCheckBox'>Tests</label>
            </div>
            <div class="chart-options-wrapper" class="ease-out">
                <div id="chartDropDown">
                    <span class="flex-span" id="chartOptionTitle">Daily Cases</span>
                    <span class="flex-span bckg-sprite dropDown-arrow" id="chartOptionArrow"></span> 
                </div>
                <div id="chartMenu">
                    <button type="button" class="chart-btns" data-chartprop="new_cases_smoothed">Daily Cases</button>
                    <button type="button" class="chart-btns" data-chartprop="new_deaths_smoothed">Daily Deaths</button>
                    <button type="button" class="chart-btns" data-chartprop="new_vaccinations_smoothed">Vaccinations</button>
                    ${t}  
                </div>
            </div> 
        </div>
        <svg id='svgChart' width='100%' height='100%'></svg>`}function updateChartInfo(){const e=_("chart"),t=e.querySelector(".chart-header .help-tip"),n=e.querySelector("h2"),a=_("chartInfo"),r=a.querySelector("p");let s="",o="";if(t.style.display="none",t.style.opacity=0,0<propTitle.length){for(i=0;i<propTitle.length;i++)s=0<i?s+" AND ":s,s+=propTitle[i];propArr[0].includes("smoothed")?(o="Daily data is smoothed out using a 7-day rolling average.","new_vaccinations_smoothed"===currentProp&&(t.innerHTML="<p>This chart shows the daily number of doses administered, it does <strong>NOT</strong> represent the number of people vaccinated.</p>",fadeIn(t))):propArr[0].includes("stringency")?(o="Scaled to a value from 0 to 100 (100 = strictest).",t.innerHTML="<p>Published by the Oxford Coronavirus Government Response Tracker (OxCGRT), the <strong><em>stringency index</em></strong> measures the severity of the lockdown measures. This metric should not be interpreted as an indication of how appropriate or effective a country\u2019s response was to the pandemic.</p>",fadeIn(t)):o="Due to limited testing and challenges in the cause of death, confirmed cases and deaths shown below might be lower."}else s="NO DATA";r.innerText=o;const l=propSwitch(currentProp);n.style.color=l,n.innerText=`CHART: ${s}`;const c=_("svgChart"),d=e.querySelector(".chart-header"),p=document.querySelector(".chart-options-wrapper"),u=usOn?120:150;headerHeight=`${u}px`===p.style.height?d.offsetHeight-(u-30):d.offsetHeight,c.setAttribute("style",`height:calc(100% - ${headerHeight}px)`),c.style.top=headerHeight+"px"}function onChartOptClick(){const e=_("testsCheckBox"),t=this.innerText,n=this.dataset.chartprop;if(currentProp!=n){currentProp=n,chartArray=createChartArray(dataHist,currentProp),propArr=[],propTitle=[],propArr.push(n),propTitle.push(t);const a=_("testsCheckBoxWrapper");if("stringency_index"===n||"new_vaccinations_smoothed"===n)e.disabled=!0,a.style.opacity="0.5";else{e.disabled=!1,a.style.opacity="1";const t=!!e.checked;if(t){const e=testsSwitch(n).testProp,t=testsSwitch(n).testTitle;propArr.push(e),propTitle.push(t)}}resetChart();const r=_("chartOptionTitle");r.innerText=t,closeChartDropDown()}}function testsSwitch(e){let t="",n="";return"new_cases_smoothed"===e||"new_deaths_smoothed"===e?(t="new_tests_smoothed",n="Daily Tests"):void 0,{testProp:t,testTitle:n}}function onChartCheckBox(){const e=!!this.checked,t=propArr[0];if(e){const e=testsSwitch(t).testProp,n=testsSwitch(t).testTitle;propArr.push(e),propTitle.push(n)}else{const e=propArr.findIndex(e=>e.includes("tests"));propArr.splice(e,1),propTitle.splice(e,1)}resetChart()}function onChartDropDown(){const e=document.querySelector(".chart-options-wrapper");"30px"===e.style.height||""===e.style.height?openChartDropDown():closeChartDropDown()}function openChartDropDown(){const e=_("chartOptionArrow"),t=document.querySelector(".chart-options-wrapper"),n=usOn?"120px":"150px";t.style.height=n,e.classList.add("transform-rotate")}function closeChartDropDown(){const e=_("chartOptionArrow"),t=document.querySelector(".chart-options-wrapper");t.style.height="30px",e.classList.remove("transform-rotate")}async function makeChart(){makePropList(chartArray);updateChartInfo(),await makeXYAxis(chartArray),plotData(chartArray),appendHoverG();_("chart")}function removeChart(){const e=_("chart"),t=_("svgChart");t.querySelectorAll("g").forEach(e=>{t.removeChild(e)});const n=e.querySelector(".chart-popup");e.removeChild(n)}function onNoChartData(){const e=_("chart");e.style.height="115px",e.style.minHeight="115px",chartOn=!1,propArr=[],propTitle=[],updateChartInfo();const t=_("testsCheckBox"),n=_("testsCheckBoxWrapper");t.disabled=!0,n.style.opacity="0.5"}function resetChart(){const e=_("chart");chartOn&&(removeChartListeners(),removeChart()),1<chartArray.length?(e.style.minHeight="350px",e.style.height="calc(calc(100 * var(--vh)) - 60px)",chartOn=!0,makeChart(),addChartListeners()):onNoChartData(),e.scrollTop=0,countryPopup.scrollTop=e.offsetTop-5}function popupHtml(e){const t=["value1","value2"],n=propSwitch(currentProp),a="dark"===mode?"#ffc82a":"#967000",r=[n,a];let s=`<p class='chart-popup-date'>${formatDate(e.date)}</p>`,o=0;for(i=0;i<propArr.length;i++)if(null!=e[t[i]]){e[t[i]]=999<e[t[i]]?Math.round(e[t[i]]):e[t[i]];let n="Vaccinations"===propTitle[i]?"Daily":"";s+=`<div class='chart-popup-wrapper'>   
                    <div class='chart-popup-flex'>
                        <svg width='12px' height='12px'>
                            <circle cx="${5}" cy="${7}" r="5" fill='${r[i]}'></circle>
                        </svg>
                        <p class='chart-popup-text'>${n} ${propTitle[i]}</p>
                    </div>
                    <div class='chart-popup-flex'>
                        <p class='chart-popup-text'>${e[t[i]].commaSplit()}</p>
                    </div>
                </div>`}else o++;return o===propArr.length&&(s+=`<p class='chart-popup-text'>No Data</p>`),s}function onChartMove(t){t=t||window.event;const n=is_touch_device?t.srcEvent.layerX:t.layerX,a=is_touch_device?t.srcEvent.layerY:t.layerY,r=is_touch_device?t.srcEvent.target:t.target,s=_("chart"),o=_("svgChart"),l=o.querySelector(".hover-info"),c=o.querySelector(".hover-line"),d=o.querySelectorAll(".hover-dot"),p=s.querySelector(".chart-popup"),u=_("plotRect");if(r===u&&n>=initialX&&n<=getBoundValues().xBound&&0<=a&&a<=getBoundValues().yBound){const e=getBoundValues().xIncr;let t=xyPlots.find(t=>Math.abs(t.x-n)<=e/2);if(t){l.style.display="block",p.style.display="block",c.setAttribute("x1",t.x),c.setAttribute("x2",t.x);const e=["y1","y2"];let n=0;d.forEach(a=>{a.setAttribute("cx",t.x);const r=null==t[e[n]]?0:t[e[n]],s=null==t[e[n]]?"hidden":"visible";a.setAttribute("cy",r),a.style.visibility=s,n++}),p.innerHTML=popupHtml(t);const a=t.x+p.offsetWidth+10,r=a>getBoundValues().xBound+labelMaxWidth?t.x-p.offsetWidth+15+"px":t.x+25+"px",s=768<window.innerWidth?headerHeight+70+"px":headerHeight+30+"px";p.setAttribute("style",`-o-transform: translate(${r}, ${s}); -moz-transform: translate(${r}, ${s}); -ms-transform: translate(${r}, ${s}); -webkit-transform: translate(${r}, ${s}); transform: translate(${r}, ${s}); display: block;`)}}else l.style.display="none",p.style.display="none"}function onChartResize(){resetChart()}const maxZoom=20;var svgEl=_("worldMap"),zoomEl=_("gOuter"),VBWidth=2e3,VBHeight=1051,initialScale=0,mouseMove=!1,countryAnim=!1,prevMatrix={};function getWheelDelta(t){const e=-(t.deltaY?t.deltaY:t.wheelDeltaY?t.wheelDeltaY:t.detail);return 0==e%1?Math.pow(1.2,e/360):(t.preventDefault(),Math.pow(10,e/360))}function getCursorPt(t){const e=svgEl.createSVGPoint();return e.x=t.clientX,e.y=t.clientY,e}function setMatrix(e,t){e=e.matrixTransform(zoomEl.getScreenCTM().inverse()),e.x=Math.min(e.x,VBWidth),e.y=Math.min(e.y,VBHeight);const n=svgEl.createSVGMatrix().translate(e.x,e.y).scale(t).translate(-e.x,-e.y);return n}function setCTM(e){const t=window.innerHeight+50,n=window.innerWidth-e.a*VBWidth,a=t-e.a*VBHeight;if(e.e=0<=e.e?0>n?0:n/2:0<n?n:Math.max(e.e,n),e.f=50<=e.f?0>a?50:Math.max(50,a/2):0<a?a/2:Math.max(e.f,a),e.a<=maxZoom&&e.a>=initialScale){const t=`matrix(${e.a},${e.b},${e.c},${e.d},${e.e},${e.f})`;zoomEl.setAttributeNS(null,"transform",t)}pathStrokeHandler()}function pathStrokeHandler(){const e=zoomEl.transform.baseVal.getItem(0).matrix.a;for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&pathCountries[t].style.setProperty("--zoom",e)}function zoomHandler(t){t=t||window.event;const n=getWheelDelta(t),a=getCursorPt(t),r=setMatrix(a,n);setCTM(zoomEl.getScreenCTM().multiply(r))}var tapP,maxScale;function tapZoomHandler(t){t=t||window.event,countryAnim||(tapP=getCursorPt(t),maxScale=2*zoomEl.transform.baseVal.getItem(0).matrix.a,maxScale=maxScale>maxZoom?maxZoom:maxScale,fadeZoom())}function fadeZoom(){const e=zoomEl.transform.baseVal.getItem(0).matrix.a,t=Math.floor(100*(e/maxScale));if(90>t){const e=setMatrix(tapP,1.05);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadeZoom)}else cancelAnimationFrame}function getPanPos(t){const e=zoomEl.transform.baseVal.getItem(0).matrix,n=svgEl.createSVGPoint();return n.x=t.movementX/e.a,n.y=t.movementY/e.d,n}function setPanMatrix(e){const t=svgEl.createSVGMatrix().translate(e.x,e.y);return t}var trail=svgEl.createSVGPoint();function fadePan(){const e=.06;if(trail.x*=1-e,trail.y*=1-e,0!=Math.floor(Math.abs(trail.x))||0!=Math.floor(Math.abs(trail.y))){const e=setPanMatrix(trail);setCTM(zoomEl.getScreenCTM().multiply(e)),requestAnimationFrame(fadePan)}else cancelAnimationFrame}function onMouseDown(){cancelAnimationFrame(fadePan),trail.x=0,trail.y=0,document.body.addEventListener("mousemove",onMouseMove),document.body.addEventListener("mouseup",onMouseUp),svgEl.addEventListener("mouseleave",onMouseUp,!1)}function onMouseMove(t){t=t||window.event,mouseMove=!0;const n=getPanPos(t);trail.x=n.x,trail.y=n.y;const a=setPanMatrix(n);setCTM(zoomEl.getScreenCTM().multiply(a))}function onMouseUp(t){t=t||window.event,mouseMove=!1,document.body.removeEventListener("mousemove",onMouseMove),document.body.removeEventListener("mouseup",onMouseUp),svgEl.removeEventListener("mouseleave",onMouseUp),fadePan()}function goToCountry(t){cancelAnimationFrame(fadePan),popup.style.display="none",removePopupListeners();zoomToCountry(t)}function zoomToCountry(t){clearPage(),onCloseSearch(),fadeTrail.x=fadeTrail.y=trail.x=trail.y=touchTrail.x=touchTrail.y=0,getPrevMatrix(),removeZoomTapListeners();const e=t.getBBox(),n=t.getAttribute("data-name"),a=t.getAttribute("data-id");highlightCountry(n);const r=window.innerHeight+50,s=zoomEl.transform.baseVal.getItem(0).matrix,o=Math.min(window.innerWidth-s.a*e.width,r-s.a*e.height),l=Math.sign(o),c=e.x*s.a-(window.innerWidth-e.width*s.a)/2,d=e.y*s.a-(r-e.height*s.a)/2,u=Math.min(Math.min((window.innerHeight-170)/e.height,(window.innerWidth-20)/e.width),maxZoom);panToCountry(s,c,d);const h=-1===l?.85:1.15;setTimeout(function t(){zoomEl.classList.remove("ease-out");const n=zoomEl.transform.baseVal.getItem(0).matrix,a=svgEl.createSVGPoint();a.x=(e.x+e.width/2)*n.a+n.e,a.y=(e.y+e.height/2)*n.d+n.f;const r=zoomEl.getScreenCTM().multiply(setMatrix(a,h));if(-1===l){if(r.a>=u){const e=`matrix(${r.a},${r.b},${r.c},${r.d},${r.e},${r.f})`;zoomEl.setAttributeNS(null,"transform",e),requestAnimationFrame(t)}else cancelAnimationFrame,pathStrokeHandler(),closePopup.addEventListener("mouseup",onClosePopup,!1);}else if(r.a<=u){const e=`matrix(${r.a},${r.b},${r.c},${r.d},${r.e},${r.f})`;zoomEl.setAttributeNS(null,"transform",e),requestAnimationFrame(t)}else cancelAnimationFrame,pathStrokeHandler(),closePopup.addEventListener("mouseup",onClosePopup,!1)},350),setTimeout(()=>{showCountryPopup(n,a)},500)}function highlightCountry(e){for(let t=0;t<pathCountries.length;t++)pathCountries[t].getAttribute("data-name")&&(pathCountries[t].getAttribute("data-name")===e?pathCountries[t].classList.add("light-path"):pathCountries[t].classList.add("dark-path"))}function panToCountry(e,t,n){const a=`matrix(${e.a},${e.b},${e.c},${e.d},${-t},${-n})`;zoomEl.classList.add("ease-out"),zoomEl.setAttributeNS(null,"transform",a)}function zoomToCountryNoAnim(t,e){fadeTrail.x=fadeTrail.y=trail.x=trail.y=touchTrail.x=touchTrail.y=0,cancelAnimationFrame(fadePan),e||getPrevMatrix(),removeZoomTapListeners(),removePopupListeners();const n=t.getBBox(),a=t.getAttribute("data-name"),r=t.getAttribute("data-id");highlightCountry(a);const s=window.innerHeight+50,o=Math.min(Math.min((window.innerHeight-170)/n.height,(window.innerWidth-20)/n.width),maxZoom),l=n.x*o-(window.innerWidth-n.width*o)/2,c=n.y*o-(s-n.height*o)/2;zoomEl.setAttributeNS(null,"transform",`matrix(${o},${0},${0},${o},${-l},${-c})`),pathStrokeHandler(),clearPage(),chartOn&&(removeChartListeners(),removeGlobalChartListeners(),chartOn=!1),showCountryPopup(a,r),closePopup.addEventListener("mouseup",onClosePopup,!1)}function getPrevMatrix(){const e=zoomEl.transform.baseVal.getItem(0).matrix;prevMatrix.scale=e.a,prevMatrix.x=e.e,prevMatrix.y=e.f}function centerMap(){const e=window.innerHeight+50,t=window.innerWidth-initialScale*VBWidth,n=e-initialScale*VBHeight,a=zoomEl.transform.baseVal.getItem(0).matrix,r=svgEl.createSVGPoint();r.x=t/2,r.y=n/2;const s=setMatrix(r,.9);setCTM(zoomEl.getScreenCTM().multiply(s)),.1<a.a-initialScale?(removePopupListeners(),removeZoomTapListeners(),requestAnimationFrame(centerMap)):(onResize(),addHeader(),cancelAnimationFrame,removeZoomTapListeners(),addZoomTapListeners(),removePopupListeners(),addPopupListeners())}function onResize(){vh=window.innerHeight/100,document.querySelector(":root").style.setProperty("--vh",vh+"px");const e=window.innerWidth/VBWidth,t=(window.innerHeight-50)/VBHeight;initialScale=Math.min(e,t),prevMatrix.scale=initialScale;const n=window.innerHeight+50,a=Math.abs((window.innerWidth-initialScale*VBWidth)/2),r=Math.abs((n-initialScale*VBHeight)/2);prevMatrix.x=a,prevMatrix.y=r;const s=`matrix(${initialScale}, 0, 0, ${initialScale}, ${a}, ${r})`;zoomEl.setAttributeNS(null,"transform",s),768<window.innerWidth?globalHelpTip.style.top="unset":(globalHelpTip.style.top=is_touch_device?"70px":"50px",0<resultsWrapper.innerText.length&&expandSearch()),resultsTransform(),addHeader(),pathStrokeHandler(),onLegendResize(globalRangeList),onToggleSVGResize(),showGlInstructions()}onResize(),fadeIn(mapDiv),window.addEventListener("resize",onResize,!1);